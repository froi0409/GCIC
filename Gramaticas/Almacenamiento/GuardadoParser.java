
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.froi.gcic.gramaticas.almacenamiento;

import com.froi.gcic.entidades.Captcha;
import com.froi.gcic.entidades.Parametro;
import java.util.ArrayList;
import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class GuardadoParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return GuardadoParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public GuardadoParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public GuardadoParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public GuardadoParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\017\000\002\002\004\000\002\002\006\000\002\003" +
    "\005\000\002\003\003\000\002\003\002\000\002\004\005" +
    "\000\002\005\005\000\002\005\003\000\002\006\005\000" +
    "\002\006\005\000\002\006\005\000\002\006\005\000\002" +
    "\006\005\000\002\006\005\000\002\006\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\045\000\004\004\004\001\002\000\004\014\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\010\015\ufffd\016\011\020\ufffd\001\002\000\006\015" +
    "\046\020\045\001\002\000\020\005\016\006\021\007\017" +
    "\010\022\011\015\012\020\013\014\001\002\000\006\015" +
    "\ufffe\020\ufffe\001\002\000\006\017\ufffa\020\ufffa\001\002" +
    "\000\004\021\043\001\002\000\004\021\041\001\002\000" +
    "\004\021\037\001\002\000\004\021\035\001\002\000\004" +
    "\021\033\001\002\000\004\021\031\001\002\000\004\021" +
    "\027\001\002\000\006\017\025\020\024\001\002\000\020" +
    "\005\016\006\021\007\017\010\022\011\015\012\020\013" +
    "\014\001\002\000\006\015\ufffc\020\ufffc\001\002\000\006" +
    "\017\ufffb\020\ufffb\001\002\000\004\022\030\001\002\000" +
    "\006\017\ufff6\020\ufff6\001\002\000\004\022\032\001\002" +
    "\000\006\017\ufff8\020\ufff8\001\002\000\004\022\034\001" +
    "\002\000\006\017\ufff4\020\ufff4\001\002\000\004\022\036" +
    "\001\002\000\006\017\ufff7\020\ufff7\001\002\000\004\022" +
    "\040\001\002\000\006\017\ufff9\020\ufff9\001\002\000\004" +
    "\022\042\001\002\000\006\017\ufff5\020\ufff5\001\002\000" +
    "\004\022\044\001\002\000\006\017\ufff3\020\ufff3\001\002" +
    "\000\004\016\011\001\002\000\004\002\000\001\002\000" +
    "\006\015\uffff\020\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\045\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\003\007\004\011" +
    "\001\001\000\002\001\001\000\006\005\022\006\012\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\025\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\046\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$GuardadoParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$GuardadoParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$GuardadoParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private ArrayList<Captcha> listaCaptchas;

    public GuardadoParser(GuardadoLexer lexer, ArrayList<Captcha> listaCaptchas) {
        super(lexer);
        this.listaCaptchas = listaCaptchas;
    }
    public void report_error(String message, Object info) {
        System.out.println("reporterror");
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal");
    }
    public void syntax_error(Symbol cur_token) {
        System.out.println("syntaxerr " + symbl_name_from_id(cur_token.sym) + " " + cur_token.left + " - " + cur_token.right);
    }
    protected int error_sync_size() {
        return 1;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$GuardadoParser$actions {
  private final GuardadoParser parser;

  /** Constructor */
  CUP$GuardadoParser$actions(GuardadoParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$GuardadoParser$do_action_part00000000(
    int                        CUP$GuardadoParser$act_num,
    java_cup.runtime.lr_parser CUP$GuardadoParser$parser,
    java.util.Stack            CUP$GuardadoParser$stack,
    int                        CUP$GuardadoParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$GuardadoParser$result;

      /* select the action based on the action number */
      switch (CUP$GuardadoParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-1)).value;
		RESULT = start_val;
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$GuardadoParser$parser.done_parsing();
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= DBCAPTCHAS PARA cuerpo_captchas PARC 
            {
              Object RESULT =null;

              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // cuerpo_captchas ::= cuerpo_captchas COMA captcha_detectado 
            {
              Object RESULT =null;

              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_captchas",1, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // cuerpo_captchas ::= captcha_detectado 
            {
              Object RESULT =null;

              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_captchas",1, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // cuerpo_captchas ::= 
            {
              Object RESULT =null;

              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_captchas",1, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // captcha_detectado ::= LLAA parametros_captcha LLAC 
            {
              Object RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-1)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-1)).right;
		ArrayList<Parametro> l = (ArrayList<Parametro>)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-1)).value;
		
                            Captcha nuevoCaptcha = new Captcha();
                            for(Parametro element: l) {
                                switch(element.getNombre()) {
                                    case "id":
                                        nuevoCaptcha.setId(element.getValor());
                                        break;
                                    case "name":
                                        nuevoCaptcha.setName(element.getValor());
                                        break;
                                    case "link":
                                        nuevoCaptcha.setLink(element.getValor());
                                        break;
                                    case "path":
                                        nuevoCaptcha.setPath(element.getValor());
                                        break;
                                    case "cantusos":
                                        nuevoCaptcha.setCantidadUsos(Integer.parseInt(element.getValor()));
                                        break;
                                    case "aciertos":
                                        nuevoCaptcha.setAciertos(Integer.parseInt(element.getValor()));
                                        break;
                                    case "fallos":
                                        nuevoCaptcha.setFallos(Integer.parseInt(element.getValor()));
                                        break;
                                }
                            }
                            listaCaptchas.add(nuevoCaptcha);
                        
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("captcha_detectado",2, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // parametros_captcha ::= parametros_captcha COMA parametros_captcha_p 
            {
              ArrayList<Parametro> RESULT =null;
		int lleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)).left;
		int lright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)).right;
		ArrayList<Parametro> l = (ArrayList<Parametro>)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		l.add(p); RESULT = l;
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha",3, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // parametros_captcha ::= parametros_captcha_p 
            {
              ArrayList<Parametro> RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Parametro p = (Parametro)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		ArrayList<Parametro> l = new ArrayList<>(); l.add(p); RESULT = l;
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha",3, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // parametros_captcha_p ::= ID PUNTOS ALLCHAR 
            {
              Parametro RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		System.out.println("id"); RESULT = new Parametro("id", val.toString().replace("\"", ""));
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha_p",4, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // parametros_captcha_p ::= NOMBRE PUNTOS ALLCHAR 
            {
              Parametro RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		System.out.println("name"); RESULT = new Parametro("name", val.toString().replace("\"", ""));
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha_p",4, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // parametros_captcha_p ::= LINK PUNTOS ALLCHAR 
            {
              Parametro RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		System.out.println("link"); RESULT = new Parametro("link", val.toString().replace("\"", ""));
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha_p",4, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // parametros_captcha_p ::= PATH PUNTOS ALLCHAR 
            {
              Parametro RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		System.out.println("path"); RESULT = new Parametro("path", val.toString().replace("\"", ""));
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha_p",4, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // parametros_captcha_p ::= CANTUSOS PUNTOS ALLCHAR 
            {
              Parametro RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		System.out.println("cantusos"); RESULT = new Parametro("cantusos", val.toString().replace("\"", ""));
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha_p",4, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // parametros_captcha_p ::= ACIERTOS PUNTOS ALLCHAR 
            {
              Parametro RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		System.out.println("aciertos"); RESULT = new Parametro("aciertos", val.toString().replace("\"", ""));
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha_p",4, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // parametros_captcha_p ::= FALLOS PUNTOS ALLCHAR 
            {
              Parametro RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$GuardadoParser$stack.peek()).value;
		System.out.println("fallos"); RESULT = new Parametro("fallos", val.toString().replace("\"", ""));
              CUP$GuardadoParser$result = parser.getSymbolFactory().newSymbol("parametros_captcha_p",4, ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.elementAt(CUP$GuardadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$GuardadoParser$stack.peek()), RESULT);
            }
          return CUP$GuardadoParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$GuardadoParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$GuardadoParser$do_action(
    int                        CUP$GuardadoParser$act_num,
    java_cup.runtime.lr_parser CUP$GuardadoParser$parser,
    java.util.Stack            CUP$GuardadoParser$stack,
    int                        CUP$GuardadoParser$top)
    throws java.lang.Exception
    {
              return CUP$GuardadoParser$do_action_part00000000(
                               CUP$GuardadoParser$act_num,
                               CUP$GuardadoParser$parser,
                               CUP$GuardadoParser$stack,
                               CUP$GuardadoParser$top);
    }
}

}
