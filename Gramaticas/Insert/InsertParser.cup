

class InsertParser;

parser code {:

    private ArrayList<Advertencia> listaErrores;
    private ArrayList<String> parametros;
    private ArrayList<Identificador> identificadores;
    private int lineaInsert;
    private int columnaInsert;

    public InsertParser(InsertLexer lexer, ArrayList<Advertencia> listaErrores, ArrayList<String> parametros, ArrayList<Identificador> identificadores, int linea, int columna) {
        super(lexer);
        this.listaErrores = listaErrores;
        this.lineaInsert = linea;
        this.columnaInsert = columna;
        this.parametros = parametros;
        this.identificadores = identificadores;
    }

    public void report_error(String message, Object info) {
        System.out.println("reporterror");;
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal " + info);
    }
    @Override
    public void syntax_error(Symbol s) {
        Advertencia errorNuevo = new Advertencia("Sintactico");
        //System.out.println("linea: " + s.left + "   columna: " + s.right + "   token: " + symbl_name_from_id(s.sym) + "     texto: " + s.value);
        errorNuevo.setLinea(s.left);
        errorNuevo.setColumna(s.right);
        errorNuevo.setToken(symbl_name_from_id(s.sym)); //Se cambiará por uno de la tabla
        errorNuevo.setTexto(s.value.toString());
        //Agregamos los simbolos que se esperan
        String solucion = "";
        for(int i = 0; i < expected_token_ids().size(); i++) {
            if(i != 0) {
                solucion += ",";
            }
            solucion += " " + symbl_name_from_id(expected_token_ids().get(i));
        }
        errorNuevo.setSolucion(solucion);
        listaErrores.add(errorNuevo);
    }
    protected int error_sync_size() {
        return 1;
    }

    public void agregarErrorSemantico(String mensaje) {
        Advertencia errorNuevo = new Advertencia("Semantico");
        errorNuevo.setMensaje(mensaje);
        listaErrores.add(errorNuevo);
    }

    public boolean etiquetasDuplicadas(int linea, int columna) {
        boolean comprobante = false;
        Set<String> datosSinDuplicar = new HashSet<String>(parametros); //Creamos un Set de los parametros
        for(String param : datosSinDuplicar) {
            int repeticion = Collections.frequency(parametros, param);
            if(repeticion > 1) {
                agregarErrorSemantico("El parametro " + param + " se ha repetido " + repeticion + " veces.\nConflicto en Linea: " + linea + " - Columna: " + columna);
                comprobante = true;
            }
        }
        return comprobante;
    }

    public void agregarIdentificador(String id, int linea, int columna) {
        boolean comprobante = true;
        linea += lineaInsert;
        columna += columnaInsert;
        for(Identificador ident : identificadores) {
            if(ident.getId().equals(id)) {
                agregarErrorSemantico("El identificador " + id + " ya fue declarado en la Linea: " + ident.getLinea() + " - Columna: " + ident.getColumna() + ".\nConflicto en Linea: " + linea + " - Columna: " + columna);
                comprobante = false;
                break;
            }
        }
        if(comprobante) {
            identificadores.add(new Identificador(id, linea, columna));
        }
    }

:}

//Declaración de símbolos terminales
/* TERMINALES ETIQUETAS GCIC */
terminal GCIC, HEAD, TITLE, LINK, BODY, SPAM, INPUT, TEXTAREA, SELECT, OPTION, DIV, IMG, BR, BUTTON, H1, P, SCRIPTING;
/* PARAMETROS DE ETIQUETAS */
terminal HREF, BACKGROUND, COLOR, FONTSIZE, FONTFAMILY, TEXTALIGN, TYPE, ID, NAME, COLS, ROWS, CLASS, SRC, WIDTH, HEIGHT, ALT, ONCLICK;
/* PALABRAS DE LOS PARAMETROS */
terminal BLACK, OLIVE, TEAL, RED, BLUE, MAROON, NAVY, GRAY, LIME, FUCHSIA, GREEN, WHITE, PURPLE, SILVER, YELLOW, AQUA, HEXADECIMAL;
terminal PIXELES, PORCENTAJE;
terminal COURIER, VERDANA, ARIAL, GENEVA, SANS_SERIF;
terminal LEFT, RIGHT, CENTER, JUSTIFY;
terminal TEXT, NUMBER, RADIO, CHECKBOX, ROW, COLUMN;

terminal terminal ID_ETIQUETA, ALFANUMERICO, TEXTO, ALLCHAR, ALLCHARNOSPACE, DIGITO_COM;

terminal MENOR_QUE, MENOR_CIERRE, MAYOR_QUE, CORA, CORC, IGUAL;

//Declaración de simbolos no terminales
non terminal inicio, etiquetas_posibles;

/* Parametros de etiquetas */
non terminal cuerpo_parametros_link, parametros_link;
non terminal cuerpo_parametros_body, parametros_body;
non terminal cuerpo_parametros_spam, parametros_spam;
non terminal cuerpo_parametros_input, parametros_input;
non terminal cuerpo_parametros_textarea, parametros_textarea;
non terminal cuerpo_parametros_select, parametros_select;
non terminal cuerpo_parametros_div, parametros_div;
non terminal cuerpo_parametros_img, parametros_img;
non terminal cuerpo_parametros_button, parametros_button;
non terminal cuerpo_parametros_h1, parametros_h1;
non terminal cuerpo_parametros_p, parametros_p;
non terminal ArrayList<Simbolo> cuerpo_parametros_proceso, parametros_proceso, parametros_proceso_simples;

/* APERTURAS */
non terminal apertura_cabecera;
non terminal apertura_body;

non terminal menor_que_inicial;

non terminal apertura_link;
non terminal apertura_title;

non terminal apertura_spam;
non terminal apertura_input;
non terminal apertura_textarea;
non terminal apertura_select;
non terminal apertura_div;
non terminal apertura_img;
non terminal apertura_br;
non terminal apertura_button;
non terminal apertura_h1;
non terminal apertura_p;

/* CIERRES */
non terminal cierre_link;
non terminal cierre_title;
non terminal cerradura_spam;
non terminal cerradura_input;
non terminal cerradura_textarea;
non terminal cerradura_select;
non terminal cerradura_div;
non terminal cerradura_img;
non terminal cerradura_br;
non terminal cerradura_button;
non terminal cerradura_h1;
non terminal cerradura_p;

non terminal parametros_textuales;
non terminal parametros_etiquetas_texuales, parametros_etiquetas_texuales_p;
non terminal cuerpo_texto;
non terminal cuerpo_select;
non terminal cuerpo_div;
non terminal cuerpo_title;
non terminal etiqueta_option;
non terminal etiquetas_cuerpo;
non terminal texto;
non terminal texto_comillas_complete;
non terminal colores;

non terminal tipos_input;
non terminal font_family;
non terminal alineaciones;
non terminal clases;
non terminal tamaños;

start with inicio;

inicio ::=  inicio etiquetas_posibles
            | etiquetas_posibles
            ;

etiquetas_posibles ::=  apertura_spam parametros_etiquetas_texuales cerradura_spam
                        | apertura_input cuerpo_texto cerradura_input
                        | apertura_textarea cuerpo_texto cerradura_textarea
                        | apertura_select cuerpo_select cerradura_select
                        | apertura_div cuerpo_div cerradura_div
                        | apertura_img cerradura_img
                        | apertura_br
                        | apertura_button cuerpo_texto cerradura_button
                        | apertura_h1 parametros_etiquetas_texuales cerradura_h1
                        | apertura_p parametros_etiquetas_texuales cerradura_p
                        | apertura_link cierre_link
                        | apertura_title cuerpo_title:ct cierre_title
                        ;

apertura_spam ::=   MENOR_QUE:ini SPAM cuerpo_parametros_spam MAYOR_QUE     {:
                                                                                if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                                }
                                                                            :}
                    ;

apertura_input ::=   MENOR_QUE:ini INPUT cuerpo_parametros_input MAYOR_QUE  {:
                                                                                if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                                }
                                                                            :}
                    ;

apertura_textarea ::=   MENOR_QUE:ini TEXTAREA cuerpo_parametros_textarea MAYOR_QUE     {:
                                                                                            if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                                            }
                                                                                        :}
                        ;

apertura_select ::= MENOR_QUE:ini SELECT cuerpo_parametros_select MAYOR_QUE     {:
                                                                                    if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                                    }
                                                                                :}
                    ;

apertura_div ::=    MENOR_QUE:ini DIV cuerpo_parametros_div MAYOR_QUE       {:
                                                                                if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                                }
                                                                            :}
                    ;

apertura_img ::=    MENOR_QUE:ini IMG cuerpo_parametros_img MAYOR_QUE       {:
                                                                                if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                                }
                                                                            :}
                    ;

apertura_br ::= MENOR_QUE BR MAYOR_QUE
                ;

apertura_button ::= MENOR_QUE:ini BUTTON cuerpo_parametros_button MAYOR_QUE     {:
                                                                                    if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                                    }
                                                                                :}
                    ;

apertura_h1 ::= MENOR_QUE:ini H1 cuerpo_parametros_h1 MAYOR_QUE     {:
                                                                        if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                        }
                                                                    :}
                ;

apertura_p ::=  MENOR_QUE:ini P cuerpo_parametros_p MAYOR_QUE       {:
                                                                        if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                        }
                                                                    :}
                ;

apertura_link ::=   MENOR_QUE:ini LINK cuerpo_parametros_link MAYOR_QUE     {:
                                                                                if(!etiquetasDuplicadas(inileft, iniright)) {

                                                                                }
                                                                            :}
                    ;

cierre_link ::= MENOR_CIERRE LINK MAYOR_QUE
                | error
                ;

cierre_title ::=    MENOR_CIERRE TITLE MAYOR_QUE
                    | error
                    ;

apertura_title ::=  MENOR_QUE TITLE MAYOR_QUE
                    ;

cerradura_spam ::=  MENOR_CIERRE SPAM MAYOR_QUE
                    ;

cerradura_input ::= MENOR_CIERRE INPUT MAYOR_QUE
                    ;

cerradura_textarea ::=  MENOR_CIERRE TEXTAREA MAYOR_QUE
                        ;

cerradura_select ::=    MENOR_CIERRE SELECT MAYOR_QUE
                        ;

cerradura_div ::=   MENOR_CIERRE DIV MAYOR_QUE
                    ;

cerradura_img ::=   MENOR_CIERRE IMG MAYOR_QUE
                    ;

cerradura_button ::=    MENOR_CIERRE BUTTON MAYOR_QUE
                        ;

cerradura_h1 ::=    MENOR_CIERRE H1 MAYOR_QUE
                    ;

cerradura_p ::=     MENOR_CIERRE P MAYOR_QUE
                    ;

cuerpo_select ::=   cuerpo_select etiqueta_option
                    | etiqueta_option
                    ;

etiqueta_option ::=     MENOR_QUE OPTION MAYOR_QUE cuerpo_texto MENOR_CIERRE OPTION MAYOR_QUE
                        ;

cuerpo_texto ::=    cuerpo_texto texto
                    |
                    ;

cuerpo_div ::=      cuerpo_div etiquetas_cuerpo
                    |
                    ;

parametros_etiquetas_texuales ::=   parametros_etiquetas_texuales parametros_etiquetas_texuales_p
                                    |
                                    ;

parametros_etiquetas_texuales_p ::= texto
                                    | apertura_br
                                    | apertura_h1 parametros_etiquetas_texuales cerradura_h1
                                    | apertura_p parametros_etiquetas_texuales cerradura_p
                                    | apertura_spam parametros_etiquetas_texuales cerradura_spam
                                    ;


/* Parametros de etiquetas */
cuerpo_parametros_link ::=  cuerpo_parametros_link parametros_link
                            |                                       {:parametros.clear();:}
                            | cuerpo_parametros_link error
                            ;

parametros_link ::=     CORA HREF IGUAL ALLCHARNOSPACE CORC     {:parametros.add("href");:}
                        ;

texto_comillas_complete ::= ALLCHAR
                            | ALLCHARNOSPACE
                            | ID_ETIQUETA
                            ;

cuerpo_parametros_body ::=  cuerpo_parametros_body parametros_body
                            |                                           {:parametros.clear();:}
                            | cuerpo_parametros_body error
                            ;

parametros_body ::= CORA BACKGROUND IGUAL colores CORC  {:parametros.add("background");:}
                    ;

cuerpo_parametros_spam ::=  cuerpo_parametros_spam parametros_spam
                            |                                           {:parametros.clear();:}
                            | cuerpo_parametros_spam error
                            ;

parametros_spam ::= parametros_textuales
                    ;

cuerpo_parametros_input ::= cuerpo_parametros_input parametros_input
                            |                                           {:parametros.clear();:}
                            | cuerpo_parametros_input error
                            ;

parametros_input ::=    CORA TYPE IGUAL tipos_input CORC    {:parametros.add("type");:}
                        | parametros_textuales
                        ;

cuerpo_parametros_textarea ::=  cuerpo_parametros_textarea parametros_textarea
                                |                                               {:parametros.clear();:}
                                | cuerpo_parametros_textarea error
                                ;

parametros_textarea ::= CORA FONTSIZE IGUAL PIXELES CORC            {:parametros.add("font-size");:}
                        | CORA FONTFAMILY IGUAL font_family CORC    {:parametros.add("font-family");:}
                        | CORA TEXTALIGN IGUAL alineaciones CORC    {:parametros.add("text-align");:}
                        | CORA ID IGUAL ID_ETIQUETA:ide CORC        {:parametros.add("id"); agregarIdentificador(ide.toString(), ideleft, ideright);:}
                        | CORA COLS IGUAL DIGITO_COM CORC           {:parametros.add("cols");:}
                        | CORA ROWS IGUAL DIGITO_COM CORC           {:parametros.add("rows");:}
                        ;

cuerpo_parametros_select ::=    cuerpo_parametros_select parametros_select
                                |                                           {:parametros.clear();:}
                                | cuerpo_parametros_select error
                                ;

parametros_select ::=   parametros_textuales
                        ;

cuerpo_parametros_div ::=   cuerpo_parametros_div parametros_div    
                            |                                       {:parametros.clear();:}
                            | cuerpo_parametros_div error
                            ;

parametros_div ::=  parametros_textuales
                    | CORA CLASS IGUAL clases CORC          {:parametros.add("class");:}
                    | CORA BACKGROUND IGUAL colores CORC    {:parametros.add("background");:}
                    ;

cuerpo_parametros_img ::=   cuerpo_parametros_img parametros_img
                            |                                       {:parametros.clear();:}
                            | cuerpo_parametros_img error
                            ;

parametros_img ::=  CORA SRC IGUAL ALLCHARNOSPACE CORC              {:parametros.add("src");:}
                    | CORA WIDTH IGUAL tamaños CORC                 {:parametros.add("width");:}
                    | CORA HEIGHT IGUAL tamaños CORC                {:parametros.add("height");:}
                    | CORA ALT IGUAL texto_comillas_complete CORC   {:parametros.add("alt");:}
                    | CORA ID IGUAL ID_ETIQUETA:ide CORC            {:parametros.add("id"); agregarIdentificador(ide.toString(), ideleft, ideright);:}
                    ;

cuerpo_parametros_button ::=    cuerpo_parametros_button parametros_button 
                                |                                               {:parametros.clear();:}
                                | cuerpo_parametros_button error
                                ;

parametros_button ::=   parametros_textuales
                        ;

cuerpo_parametros_h1 ::=    cuerpo_parametros_h1 parametros_h1
                            |                                   {:parametros.clear();:}
                            | cuerpo_parametros_h1 error
                            ;

parametros_h1 ::=   parametros_textuales
                    ;

cuerpo_parametros_p ::= cuerpo_parametros_p parametros_p
                        |                                   {:parametros.clear();:}
                        | cuerpo_parametros_p error
                        ;

parametros_p ::=    parametros_textuales
                    ;



parametros_textuales ::=    CORA FONTSIZE IGUAL PIXELES CORC            {:parametros.add("font-size");:}
                            | CORA FONTFAMILY IGUAL font_family CORC    {:parametros.add("font-family");:}
                            | CORA TEXTALIGN IGUAL alineaciones CORC    {:parametros.add("text-align");:}
                            | CORA ID IGUAL ID_ETIQUETA:ide CORC        {:parametros.add("id"); agregarIdentificador(ide.toString(), ideleft, ideright);:}
                            | CORA COLOR IGUAL colores CORC             {:parametros.add("color");:}
                            ;

/* COMODINES */
colores ::=  BLACK
            | OLIVE
            | TEAL
            | RED
            | BLUE
            | MAROON
            | NAVY
            | GRAY
            | LIME
            | FUCHSIA
            | GREEN
            | WHITE
            | PURPLE
            | SILVER
            | YELLOW
            | AQUA
            | HEXADECIMAL
            //| error
            ;

font_family ::= COURIER
                | VERDANA
                | ARIAL
                | GENEVA
                | SANS_SERIF
                //| error
                ;

alineaciones ::=    LEFT
                    | RIGHT
                    | CENTER
                    | JUSTIFY
                    //| error
                    ;

clases ::=  ROW
            | COLUMN
            //| error
            ;

tamaños ::= PIXELES
            | PORCENTAJE
            //| error
            ;

tipos_input ::= TEXT
                | NUMBER
                | RADIO
                | CHECKBOX
                //| error
                ;