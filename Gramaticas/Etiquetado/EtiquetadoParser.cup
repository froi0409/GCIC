
class EtiquetadoParser;

parser code {:

    public EtiquetadoParser(EtiquetadoLexer lexer) {
        super(lexer);
    }

:}

//Declaración de símbolos terminales
/* TERMINALES ETIQUETAS GCIC */
terminal GCIC, HEAD, TITLE, LINK, BODY, SPAM, INPUT, TEXTAREA, SELECT, OPTION, DIV, IMG, BR, BUTTON, H1, P, SCRIPTING;
/* PARAMETROS DE ETIQUETAS */
terminal HREF, BACKGROUND, COLOR, FONTSIZE, FONTFAMILY, TEXTALIGN, TYPE, ID, NAME, COLS, ROWS, CLASS, SRC, WIDTH, HEIGHT, ALT, ONCLICK;
/* FUNCIONES ESPECIALES DE CLC */
terminal ASC, DESC, LETPAR_NUM, LETIMPAR_NUM, REVERSE, CARACTER_ALEATORIO, NUM_ALEATORIO, ALERT_INFO, EXIT, GETBYID, INIT, END, IF, THEN, ELSE, REPEAT, HUNTIL, WHILE, THENWHILE, INSERT;
/* LENGUAJE DE ALTO NIVEL EMBEBIDO */
terminal ON_LOAD, PROCESS;
/* TIPOS DE DATOS */
terminal INTEGER, DECIMAL, BOOLEAN, CHAR, STRING, GLOBAL;
/* DEFINICION DE TIPOS DE DATOS */
terminal D_INTEGER, D_DECIMAL, TRUE, FALSE, D_CHAR, D_STRING;
/* OPERADORES RELACIONALES */
terminal IGUAL_IGUAL, DIFERENTE_IGUAL, MENOR_QUE, MENOR_IGUAL, MAYOR_QUE, MAYOR_IGUAL;
/* OPERADORES LOGICOS */
terminal OR, AND, NOT;
/* OPERADORES ARITMETICOS */
terminal SUMA, RESTA, MULTIPLICACION, DIVISION;
/* SIMBOLOS ESPECIALES */
terminal IGUAL, BARRA, PARA, PARC, CORA, CORC, LLAA, LLAC, PUNTO_COMA, PUNTOS, COM_SIMP, IDENTIFICADOR;
/* COMODINES */
terminales ALFANUMERICO;

//Declaración de símbolos no terminales
non terminal inicio;

//Símbolo inicial de la gramática
start with inicio;

//Reglas de Producción
inicio ::=  