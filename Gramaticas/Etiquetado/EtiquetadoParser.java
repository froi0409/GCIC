
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.froi.pruebas.gramaticas;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class EtiquetadoParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return EtiquetadoParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public EtiquetadoParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public EtiquetadoParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public EtiquetadoParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0124\000\002\002\004\000\002\002\004\000\002\133" +
    "\006\000\002\133\003\000\002\014\005\000\002\014\006" +
    "\000\002\014\006\000\002\014\006\000\002\014\007\000" +
    "\002\014\007\000\002\014\007\000\002\014\010\000\002" +
    "\044\005\000\002\044\003\000\002\003\005\000\002\134" +
    "\005\000\002\134\003\000\002\166\005\000\002\166\003" +
    "\000\002\004\005\000\002\135\006\000\002\167\005\000" +
    "\002\015\004\000\002\015\002\000\002\020\004\000\002" +
    "\020\005\000\002\020\005\000\002\137\006\000\002\140" +
    "\005\000\002\141\005\000\002\170\005\000\002\170\003" +
    "\000\002\171\005\000\002\171\003\000\002\172\005\000" +
    "\002\172\003\000\002\017\004\000\002\017\002\000\002" +
    "\023\003\000\002\023\003\000\002\016\004\000\002\016" +
    "\002\000\002\016\004\000\002\021\005\000\002\021\005" +
    "\000\002\021\005\000\002\021\005\000\002\021\005\000" +
    "\002\021\004\000\002\021\003\000\002\021\005\000\002" +
    "\021\005\000\002\021\005\000\002\021\005\000\002\142" +
    "\006\000\002\143\006\000\002\144\006\000\002\145\006" +
    "\000\002\146\006\000\002\147\006\000\002\150\005\000" +
    "\002\151\006\000\002\152\006\000\002\153\006\000\002" +
    "\154\005\000\002\155\005\000\002\156\005\000\002\157" +
    "\005\000\002\160\005\000\002\161\005\000\002\163\005" +
    "\000\002\164\005\000\002\165\005\000\002\036\004\000" +
    "\002\036\003\000\002\022\011\000\002\042\004\000\002" +
    "\042\002\000\002\037\004\000\002\037\002\000\002\040" +
    "\002\000\002\041\003\000\002\041\005\000\002\045\004" +
    "\000\002\045\002\000\002\045\004\000\002\046\007\000" +
    "\002\046\007\000\002\047\004\000\002\047\002\000\002" +
    "\047\004\000\002\050\007\000\002\024\003\000\002\024" +
    "\003\000\002\051\004\000\002\051\002\000\002\051\004" +
    "\000\002\052\007\000\002\053\004\000\002\053\002\000" +
    "\002\053\004\000\002\054\003\000\002\055\004\000\002" +
    "\055\002\000\002\055\004\000\002\056\007\000\002\056" +
    "\003\000\002\057\004\000\002\057\002\000\002\057\004" +
    "\000\002\060\007\000\002\060\007\000\002\060\007\000" +
    "\002\060\007\000\002\060\007\000\002\060\007\000\002" +
    "\061\004\000\002\061\002\000\002\061\004\000\002\062" +
    "\003\000\002\063\004\000\002\063\002\000\002\063\004" +
    "\000\002\064\003\000\002\064\007\000\002\064\007\000" +
    "\002\065\004\000\002\065\002\000\002\065\004\000\002" +
    "\066\007\000\002\066\007\000\002\066\007\000\002\066" +
    "\007\000\002\066\007\000\002\067\004\000\002\067\002" +
    "\000\002\067\004\000\002\070\003\000\002\071\004\000" +
    "\002\071\002\000\002\071\004\000\002\072\003\000\002" +
    "\073\004\000\002\073\002\000\002\073\004\000\002\074" +
    "\003\000\002\033\007\000\002\033\007\000\002\033\007" +
    "\000\002\033\007\000\002\033\007\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\026\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\026\003\000\002\026\003" +
    "\000\002\026\003\000\002\026\003\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\027\003\000\002\027\003\000\002\027" +
    "\003\000\002\027\003\000\002\027\003\000\002\030\003" +
    "\000\002\030\003\000\002\030\003\000\002\030\003\000" +
    "\002\031\003\000\002\031\003\000\002\032\003\000\002" +
    "\032\003\000\002\034\003\000\002\034\003\000\002\034" +
    "\003\000\002\034\003\000\002\005\011\000\002\043\004" +
    "\000\002\043\002\000\002\100\010\000\002\100\010\000" +
    "\002\075\004\000\002\075\002\000\002\076\004\000\002" +
    "\076\003\000\002\076\004\000\002\076\003\000\002\076" +
    "\003\000\002\076\003\000\002\077\004\000\002\105\006" +
    "\000\002\105\006\000\002\105\006\000\002\105\006\000" +
    "\002\105\006\000\002\105\005\000\002\105\005\000\002" +
    "\105\006\000\002\105\005\000\002\007\006\000\002\007" +
    "\006\000\002\007\006\000\002\007\006\000\002\007\006" +
    "\000\002\132\005\000\002\132\003\000\002\035\003\000" +
    "\002\035\003\000\002\010\003\000\002\010\002\000\002" +
    "\123\004\000\002\123\002\000\002\127\004\000\002\127" +
    "\002\000\002\124\004\000\002\124\002\000\002\012\005" +
    "\000\002\012\003\000\002\125\004\000\002\125\002\000" +
    "\002\126\004\000\002\126\002\000\002\013\003\000\002" +
    "\013\003\000\002\011\003\000\002\011\003\000\002\011" +
    "\003\000\002\011\003\000\002\011\003\000\002\117\005" +
    "\000\002\122\003\000\002\122\003\000\002\122\003\000" +
    "\002\122\003\000\002\122\003\000\002\122\003\000\002" +
    "\122\003\000\002\122\003\000\002\106\020\000\002\106" +
    "\012\000\002\114\004\000\002\114\002\000\002\115\017" +
    "\000\002\115\011\000\002\116\012\000\002\116\004\000" +
    "\002\116\002\000\002\107\021\000\002\110\006\000\002" +
    "\110\005\000\002\111\003\000\002\111\003\000\002\112" +
    "\003\000\002\113\016\000\002\120\005\000\002\120\005" +
    "\000\002\120\005\000\002\120\005\000\002\120\005\000" +
    "\002\120\005\000\002\120\004\000\002\120\005\000\002" +
    "\120\005\000\002\120\004\000\002\120\005\000\002\120" +
    "\005\000\002\120\005\000\002\120\005\000\002\120\003" +
    "\000\002\120\005\000\002\121\003\000\002\130\004\000" +
    "\002\130\005\000\002\130\005\000\002\130\005\000\002" +
    "\130\005\000\002\130\003\000\002\130\005\000\002\131" +
    "\003\000\002\131\003\000\002\131\003\000\002\131\003" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0263\000\006\003\004\154\005\001\002\000\006\003" +
    "\ufffe\154\ufffe\001\002\000\004\004\u0258\001\002\000\006" +
    "\003\012\154\013\001\002\000\004\002\010\001\002\000" +
    "\004\002\001\001\002\000\004\002\000\001\002\000\010" +
    "\003\ufff1\154\ufff1\163\ufff1\001\002\000\006\005\u0256\024" +
    "\u021d\001\002\000\006\003\012\154\u024b\001\002\000\010" +
    "\003\uffea\154\uffea\163\uffea\001\002\000\004\154\020\001" +
    "\002\000\010\003\u0216\154\u0215\163\u0219\001\002\000\006" +
    "\010\u020b\024\u021d\001\002\000\004\154\u020a\001\002\000" +
    "\010\003\uffd8\154\uffd8\163\uffd8\001\002\000\010\003\035" +
    "\154\032\163\027\001\002\000\010\003\uffd0\154\uffd0\163" +
    "\uffd0\001\002\000\004\163\u0206\001\002\000\010\163\uffb4" +
    "\205\uffb4\210\uffb4\001\002\000\004\010\u01fe\001\002\000" +
    "\010\003\uffee\154\uffee\163\uffee\001\002\000\010\003\uffd9" +
    "\154\uffd9\163\uffd9\001\002\000\030\011\u0157\012\u0151\013" +
    "\u0159\014\u0156\016\u0155\017\u015a\020\u0152\021\u0150\022\u0158" +
    "\023\u0154\024\u0153\001\002\000\010\163\uffb4\205\uffb4\210" +
    "\uffb4\001\002\000\010\163\uffb4\205\uffb4\210\uffb4\001\002" +
    "\000\010\003\uffd7\154\uffd7\163\uffd7\001\002\000\006\154" +
    "\uffb2\163\uffb2\001\002\000\010\163\uffb4\205\uffb4\210\uffb4" +
    "\001\002\000\012\154\u0134\163\uffb4\205\uffb4\210\uffb4\001" +
    "\002\000\012\003\uff45\134\uff45\135\uff45\163\uff45\001\002" +
    "\000\010\163\uffb4\205\uffb4\210\uffb4\001\002\000\004\154" +
    "\045\001\002\000\006\154\045\163\061\001\002\000\004" +
    "\015\047\001\002\000\006\154\uffb7\163\uffb7\001\002\000" +
    "\004\156\050\001\002\000\010\163\uffb4\205\uffb4\210\uffb4" +
    "\001\002\000\010\163\055\205\053\210\054\001\002\000" +
    "\010\163\uffb5\205\uffb5\210\uffb5\001\002\000\012\003\uffda" +
    "\163\uffda\205\uffda\210\uffda\001\002\000\012\003\uffdb\163" +
    "\uffdb\205\uffdb\210\uffdb\001\002\000\004\015\056\001\002" +
    "\000\004\156\057\001\002\000\006\154\uffb6\163\uffb6\001" +
    "\002\000\006\154\uffb8\163\uffb8\001\002\000\004\014\063" +
    "\001\002\000\010\003\uffd3\154\uffd3\163\uffd3\001\002\000" +
    "\004\156\064\001\002\000\010\003\uffbe\154\uffbe\163\uffbe" +
    "\001\002\000\010\163\067\205\053\210\054\001\002\000" +
    "\010\003\uffd6\154\uffd6\163\uffd6\001\002\000\004\011\070" +
    "\001\002\000\004\156\071\001\002\000\010\003\uffc1\154" +
    "\uffc1\163\uffc1\001\002\000\012\003\075\134\073\135\076" +
    "\163\100\001\002\000\004\174\u012d\001\002\000\010\003" +
    "\uffcc\154\uffcc\163\uffcc\001\002\000\010\003\uffde\154\uffde" +
    "\163\uffde\001\002\000\004\174\103\001\002\000\012\003" +
    "\uff46\134\uff46\135\uff46\163\uff46\001\002\000\004\024\101" +
    "\001\002\000\004\156\102\001\002\000\010\003\uffdf\154" +
    "\uffdf\163\uffdf\001\002\000\004\175\104\001\002\000\004" +
    "\176\105\001\002\000\052\110\uff41\111\uff41\112\uff41\113" +
    "\uff41\114\uff41\115\uff41\116\uff41\117\uff41\120\uff41\124\uff41" +
    "\127\uff41\131\uff41\136\uff41\137\uff41\140\uff41\141\uff41\142" +
    "\uff41\177\uff41\205\uff41\210\uff41\001\002\000\052\110\135" +
    "\111\112\112\126\113\107\114\144\115\137\116\131\117" +
    "\133\120\110\124\123\127\141\131\117\136\136\137\115" +
    "\140\125\141\116\142\127\177\114\205\134\210\132\001" +
    "\002\000\004\174\u012a\001\002\000\004\174\u0128\001\002" +
    "\000\054\110\uff42\111\uff42\112\uff42\113\uff42\114\uff42\115" +
    "\uff42\116\uff42\117\uff42\120\uff42\124\uff42\127\uff42\131\uff42" +
    "\136\uff42\137\uff42\140\uff42\141\uff42\142\uff42\177\uff42\203" +
    "\uff42\205\uff42\210\uff42\001\002\000\004\174\u0125\001\002" +
    "\000\054\110\uff3f\111\uff3f\112\uff3f\113\uff3f\114\uff3f\115" +
    "\uff3f\116\uff3f\117\uff3f\120\uff3f\124\uff3f\127\uff3f\131\uff3f" +
    "\136\uff3f\137\uff3f\140\uff3f\141\uff3f\142\uff3f\177\uff3f\203" +
    "\uff3f\205\uff3f\210\uff3f\001\002\000\012\003\uff44\134\uff44" +
    "\135\uff44\163\uff44\001\002\000\010\143\240\205\uff26\210" +
    "\uff26\001\002\000\010\143\240\205\uff26\210\uff26\001\002" +
    "\000\004\174\u0110\001\002\000\004\202\u010f\001\002\000" +
    "\054\110\uff3d\111\uff3d\112\uff3d\113\uff3d\114\uff3d\115\uff3d" +
    "\116\uff3d\117\uff3d\120\uff3d\124\uff3d\127\uff3d\131\uff3d\136" +
    "\uff3d\137\uff3d\140\uff3d\141\uff3d\142\uff3d\177\uff3d\203\uff3d" +
    "\205\uff3d\210\uff3d\001\002\000\004\202\u010e\001\002\000" +
    "\004\174\306\001\002\000\004\202\305\001\002\000\010" +
    "\143\240\205\uff26\210\uff26\001\002\000\004\174\273\001" +
    "\002\000\010\143\240\205\uff26\210\uff26\001\002\000\054" +
    "\110\uff3b\111\uff3b\112\uff3b\113\uff3b\114\uff3b\115\uff3b\116" +
    "\uff3b\117\uff3b\120\uff3b\124\uff3b\127\uff3b\131\uff3b\136\uff3b" +
    "\137\uff3b\140\uff3b\141\uff3b\142\uff3b\177\uff3b\203\uff3b\205" +
    "\uff3b\210\uff3b\001\002\000\004\174\264\001\002\000\012" +
    "\171\uff28\175\uff28\202\uff28\206\uff28\001\002\000\004\174" +
    "\251\001\002\000\012\171\uff29\175\uff29\202\uff29\206\uff29" +
    "\001\002\000\004\174\246\001\002\000\010\143\240\205" +
    "\uff26\210\uff26\001\002\000\004\174\236\001\002\000\054" +
    "\110\uff3c\111\uff3c\112\uff3c\113\uff3c\114\uff3c\115\uff3c\116" +
    "\uff3c\117\uff3c\120\uff3c\124\uff3c\127\uff3c\131\uff3c\136\uff3c" +
    "\137\uff3c\140\uff3c\141\uff3c\142\uff3c\177\uff3c\203\uff3c\205" +
    "\uff3c\210\uff3c\001\002\000\004\174\206\001\002\000\006" +
    "\171\151\206\150\001\002\000\010\171\uff2a\202\uff2a\206" +
    "\uff2a\001\002\000\004\174\145\001\002\000\004\205\146" +
    "\001\002\000\004\175\147\001\002\000\004\202\uff35\001" +
    "\002\000\006\205\134\210\132\001\002\000\034\144\157" +
    "\145\152\146\154\147\160\150\155\151\161\165\166\174" +
    "\170\205\171\207\153\210\167\212\165\213\156\001\002" +
    "\000\036\152\ufee0\153\ufee0\154\ufee0\155\ufee0\156\ufee0\157" +
    "\ufee0\160\ufee0\161\ufee0\164\ufee0\165\ufee0\166\ufee0\167\ufee0" +
    "\175\ufee0\202\ufee0\001\002\000\004\202\uff0b\001\002\000" +
    "\004\202\uff0f\001\002\000\004\202\uff10\001\002\000\004" +
    "\202\uff0c\001\002\000\036\152\ufee1\153\ufee1\154\ufee1\155" +
    "\ufee1\156\ufee1\157\ufee1\160\ufee1\161\ufee1\164\ufee1\165\ufee1" +
    "\166\ufee1\167\ufee1\175\ufee1\202\ufee1\001\002\000\004\202" +
    "\uff0e\001\002\000\004\202\uff0a\001\002\000\004\202\uff12" +
    "\001\002\000\016\164\ufee3\165\ufee3\166\ufee3\167\ufee3\175" +
    "\ufee3\202\ufee3\001\002\000\014\164\176\165\173\166\174" +
    "\167\177\202\uff11\001\002\000\004\202\uff0d\001\002\000" +
    "\016\144\157\145\152\165\166\174\170\205\171\210\167" +
    "\001\002\000\036\152\ufede\153\ufede\154\ufede\155\ufede\156" +
    "\ufede\157\ufede\160\ufede\161\ufede\164\ufede\165\ufede\166\ufede" +
    "\167\ufede\175\ufede\202\ufede\001\002\000\016\144\157\145" +
    "\152\165\166\174\170\205\171\210\167\001\002\000\036" +
    "\152\ufedf\153\ufedf\154\ufedf\155\ufedf\156\ufedf\157\ufedf\160" +
    "\ufedf\161\ufedf\164\ufedf\165\ufedf\166\ufedf\167\ufedf\175\ufedf" +
    "\202\ufedf\001\002\000\014\164\176\165\173\166\174\167" +
    "\177\175\175\001\002\000\016\144\157\145\152\165\166" +
    "\174\170\205\171\210\167\001\002\000\016\144\157\145" +
    "\152\165\166\174\170\205\171\210\167\001\002\000\016" +
    "\164\ufee2\165\ufee2\166\ufee2\167\ufee2\175\ufee2\202\ufee2\001" +
    "\002\000\016\144\157\145\152\165\166\174\170\205\171" +
    "\210\167\001\002\000\016\144\157\145\152\165\166\174" +
    "\170\205\171\210\167\001\002\000\016\164\ufee4\165\ufee4" +
    "\166\ufee4\167\ufee4\175\ufee4\202\ufee4\001\002\000\016\164" +
    "\ufee7\165\ufee7\166\174\167\177\175\ufee7\202\ufee7\001\002" +
    "\000\016\164\ufee5\165\ufee5\166\ufee5\167\ufee5\175\ufee5\202" +
    "\ufee5\001\002\000\016\164\ufee6\165\ufee6\166\174\167\177" +
    "\175\ufee6\202\ufee6\001\002\000\016\164\ufee8\165\ufee8\166" +
    "\ufee8\167\ufee8\175\ufee8\202\ufee8\001\002\000\010\171\uff2b" +
    "\202\uff2b\206\uff2b\001\002\000\010\136\207\205\134\210" +
    "\132\001\002\000\006\205\134\210\132\001\002\000\004" +
    "\175\215\001\002\000\004\171\212\001\002\000\004\144" +
    "\213\001\002\000\004\175\ufefb\001\002\000\004\175\ufefe" +
    "\001\002\000\004\130\216\001\002\000\004\174\217\001" +
    "\002\000\010\144\221\205\134\210\132\001\002\000\004" +
    "\175\223\001\002\000\004\175\ufefd\001\002\000\004\175" +
    "\ufefc\001\002\000\004\122\224\001\002\000\004\200\225" +
    "\001\002\000\004\203\226\001\002\000\052\110\uff41\111" +
    "\uff41\112\uff41\113\uff41\114\uff41\115\uff41\116\uff41\117\uff41" +
    "\120\uff41\124\uff41\127\uff41\131\uff41\136\uff41\137\uff41\140" +
    "\uff41\141\uff41\142\uff41\203\uff41\205\uff41\210\uff41\001\002" +
    "\000\052\110\135\111\112\112\126\113\107\114\144\115" +
    "\137\116\131\117\133\120\110\124\123\127\141\131\117" +
    "\136\136\137\115\140\125\141\116\142\127\203\230\205" +
    "\134\210\132\001\002\000\004\201\231\001\002\000\004" +
    "\123\232\001\002\000\054\110\uff00\111\uff00\112\uff00\113" +
    "\uff00\114\uff00\115\uff00\116\uff00\117\uff00\120\uff00\124\uff00" +
    "\127\uff00\131\uff00\136\uff00\137\uff00\140\uff00\141\uff00\142" +
    "\uff00\177\uff00\203\uff00\205\uff00\210\uff00\001\002\000\004" +
    "\171\234\001\002\000\004\144\213\001\002\000\004\175" +
    "\ufeff\001\002\000\004\175\237\001\002\000\004\202\uff34" +
    "\001\002\000\006\205\uff27\210\uff27\001\002\000\006\205" +
    "\134\210\132\001\002\000\010\171\243\202\uff24\206\150" +
    "\001\002\000\016\144\157\145\152\165\166\174\170\205" +
    "\171\210\167\001\002\000\004\202\uff30\001\002\000\014" +
    "\164\176\165\173\166\174\167\177\202\uff25\001\002\000" +
    "\004\205\247\001\002\000\004\175\250\001\002\000\004" +
    "\202\uff39\001\002\000\014\151\255\205\256\207\254\212" +
    "\253\213\257\001\002\000\010\164\uff1e\175\uff1e\202\uff1e" +
    "\001\002\000\010\164\uff17\175\uff17\202\uff17\001\002\000" +
    "\010\164\uff14\175\uff14\202\uff14\001\002\000\010\164\uff15" +
    "\175\uff15\202\uff15\001\002\000\010\164\uff13\175\uff13\202" +
    "\uff13\001\002\000\010\164\uff16\175\uff16\202\uff16\001\002" +
    "\000\006\164\262\175\261\001\002\000\004\202\uff32\001" +
    "\002\000\014\151\255\205\256\207\254\212\253\213\257" +
    "\001\002\000\010\164\uff1f\175\uff1f\202\uff1f\001\002\000" +
    "\004\175\265\001\002\000\004\202\uff33\001\002\000\006" +
    "\205\134\210\132\001\002\000\010\171\271\202\uff20\206" +
    "\150\001\002\000\004\202\uff2e\001\002\000\014\151\255" +
    "\205\256\207\254\212\253\213\257\001\002\000\006\164" +
    "\262\202\uff21\001\002\000\004\205\274\001\002\000\004" +
    "\175\275\001\002\000\004\202\uff37\001\002\000\006\205" +
    "\134\210\132\001\002\000\010\171\300\202\uff1c\206\150" +
    "\001\002\000\006\146\303\147\304\001\002\000\004\202" +
    "\uff2d\001\002\000\004\202\uff1d\001\002\000\004\202\uff19" +
    "\001\002\000\004\202\uff18\001\002\000\054\110\uff3e\111" +
    "\uff3e\112\uff3e\113\uff3e\114\uff3e\115\uff3e\116\uff3e\117\uff3e" +
    "\120\uff3e\124\uff3e\127\uff3e\131\uff3e\136\uff3e\137\uff3e\140" +
    "\uff3e\141\uff3e\142\uff3e\177\uff3e\203\uff3e\205\uff3e\210\uff3e" +
    "\001\002\000\020\144\157\145\152\162\312\165\313\174" +
    "\314\205\171\210\167\001\002\000\034\152\ufeeb\153\ufeeb" +
    "\154\ufeeb\155\ufeeb\156\ufeeb\157\ufeeb\160\ufeeb\161\ufeeb\164" +
    "\ufeeb\165\ufeeb\166\ufeeb\167\ufeeb\175\ufeeb\001\002\000\034" +
    "\152\321\153\326\154\324\155\332\156\317\157\322\160" +
    "\331\161\316\164\320\165\330\166\323\167\325\175\351" +
    "\001\002\000\034\152\ufee9\153\ufee9\154\ufee9\155\ufee9\156" +
    "\ufee9\157\ufee9\160\ufee9\161\ufee9\164\ufee9\165\ufee9\166\ufee9" +
    "\167\ufee9\175\ufee9\001\002\000\020\144\157\145\152\162" +
    "\312\165\313\174\314\205\171\210\167\001\002\000\020" +
    "\144\157\145\152\162\312\165\313\174\314\205\171\210" +
    "\167\001\002\000\020\144\157\145\152\162\312\165\313" +
    "\174\314\205\171\210\167\001\002\000\034\152\321\153" +
    "\326\154\324\155\332\156\317\157\322\160\331\161\316" +
    "\164\320\165\330\166\323\167\325\175\327\001\002\000" +
    "\020\144\157\145\152\162\312\165\313\174\314\205\171" +
    "\210\167\001\002\000\020\144\157\145\152\162\312\165" +
    "\313\174\314\205\171\210\167\001\002\000\020\144\157" +
    "\145\152\162\312\165\313\174\314\205\171\210\167\001" +
    "\002\000\020\144\157\145\152\162\312\165\313\174\314" +
    "\205\171\210\167\001\002\000\020\144\157\145\152\162" +
    "\312\165\313\174\314\205\171\210\167\001\002\000\020" +
    "\144\157\145\152\162\312\165\313\174\314\205\171\210" +
    "\167\001\002\000\020\144\157\145\152\162\312\165\313" +
    "\174\314\205\171\210\167\001\002\000\020\144\157\145" +
    "\152\162\312\165\313\174\314\205\171\210\167\001\002" +
    "\000\020\144\157\145\152\162\312\165\313\174\314\205" +
    "\171\210\167\001\002\000\034\152\ufeea\153\ufeea\154\ufeea" +
    "\155\ufeea\156\ufeea\157\ufeea\160\ufeea\161\ufeea\164\ufeea\165" +
    "\ufeea\166\ufeea\167\ufeea\175\ufeea\001\002\000\020\144\157" +
    "\145\152\162\312\165\313\174\314\205\171\210\167\001" +
    "\002\000\020\144\157\145\152\162\312\165\313\174\314" +
    "\205\171\210\167\001\002\000\020\144\157\145\152\162" +
    "\312\165\313\174\314\205\171\210\167\001\002\000\034" +
    "\152\ufef6\153\ufef6\154\ufef6\155\ufef6\156\ufef6\157\ufef6\160" +
    "\331\161\316\164\ufef6\165\ufef6\166\ufef6\167\ufef6\175\ufef6" +
    "\001\002\000\034\152\ufef1\153\ufef1\154\ufef1\155\ufef1\156" +
    "\ufef1\157\ufef1\160\ufef1\161\316\164\ufef1\165\ufef1\166\ufef1" +
    "\167\ufef1\175\ufef1\001\002\000\034\152\321\153\326\154" +
    "\324\155\332\156\317\157\322\160\331\161\316\164\ufeee" +
    "\165\ufeee\166\323\167\325\175\ufeee\001\002\000\034\152" +
    "\ufef8\153\ufef8\154\ufef8\155\ufef8\156\ufef8\157\ufef8\160\331" +
    "\161\316\164\ufef8\165\ufef8\166\ufef8\167\ufef8\175\ufef8\001" +
    "\002\000\034\152\321\153\326\154\324\155\332\156\317" +
    "\157\322\160\331\161\316\164\ufeec\165\ufeec\166\ufeec\167" +
    "\ufeec\175\ufeec\001\002\000\034\152\ufef7\153\ufef7\154\ufef7" +
    "\155\ufef7\156\ufef7\157\ufef7\160\331\161\316\164\ufef7\165" +
    "\ufef7\166\ufef7\167\ufef7\175\ufef7\001\002\000\034\152\321" +
    "\153\326\154\324\155\332\156\317\157\322\160\331\161" +
    "\316\164\ufeed\165\ufeed\166\ufeed\167\ufeed\175\ufeed\001\002" +
    "\000\034\152\ufef4\153\ufef4\154\ufef4\155\ufef4\156\ufef4\157" +
    "\ufef4\160\331\161\316\164\ufef4\165\ufef4\166\ufef4\167\ufef4" +
    "\175\ufef4\001\002\000\034\152\ufef9\153\ufef9\154\ufef9\155" +
    "\ufef9\156\ufef9\157\ufef9\160\331\161\316\164\ufef9\165\ufef9" +
    "\166\ufef9\167\ufef9\175\ufef9\001\002\000\034\152\321\153" +
    "\326\154\324\155\332\156\317\157\322\160\331\161\316" +
    "\164\ufeef\165\ufeef\166\323\167\325\175\ufeef\001\002\000" +
    "\034\152\ufef5\153\ufef5\154\ufef5\155\ufef5\156\ufef5\157\ufef5" +
    "\160\331\161\316\164\ufef5\165\ufef5\166\ufef5\167\ufef5\175" +
    "\ufef5\001\002\000\034\152\ufef2\153\ufef2\154\ufef2\155\ufef2" +
    "\156\ufef2\157\ufef2\160\ufef2\161\ufef2\164\ufef2\165\ufef2\166" +
    "\ufef2\167\ufef2\175\ufef2\001\002\000\034\152\321\153\326" +
    "\154\324\155\332\156\317\157\322\160\331\161\316\164" +
    "\ufef0\165\ufef0\166\323\167\325\175\ufef0\001\002\000\034" +
    "\152\ufef3\153\ufef3\154\ufef3\155\ufef3\156\ufef3\157\ufef3\160" +
    "\ufef3\161\ufef3\164\ufef3\165\ufef3\166\ufef3\167\ufef3\175\ufef3" +
    "\001\002\000\004\125\352\001\002\000\010\122\353\205" +
    "\134\210\132\001\002\000\004\200\u0106\001\002\000\056" +
    "\110\uff06\111\uff06\112\uff06\113\uff06\114\uff06\115\uff06\116" +
    "\uff06\117\uff06\120\uff06\124\uff06\126\uff06\127\uff06\131\uff06" +
    "\136\uff06\137\uff06\140\uff06\141\uff06\142\uff06\177\uff06\203" +
    "\uff06\205\uff06\210\uff06\001\002\000\056\110\uff01\111\uff01" +
    "\112\uff01\113\uff01\114\uff01\115\uff01\116\uff01\117\uff01\120" +
    "\uff01\124\uff01\126\357\127\uff01\131\uff01\136\uff01\137\uff01" +
    "\140\uff01\141\uff01\142\uff01\177\uff01\203\uff01\205\uff01\210" +
    "\uff01\001\002\000\056\110\uff07\111\uff07\112\uff07\113\uff07" +
    "\114\uff07\115\uff07\116\uff07\117\uff07\120\uff07\124\uff07\126" +
    "\uff07\127\uff07\131\uff07\136\uff07\137\uff07\140\uff07\141\uff07" +
    "\142\uff07\177\uff07\203\uff07\205\uff07\210\uff07\001\002\000" +
    "\012\122\361\124\363\205\134\210\132\001\002\000\054" +
    "\110\uff08\111\uff08\112\uff08\113\uff08\114\uff08\115\uff08\116" +
    "\uff08\117\uff08\120\uff08\124\uff08\127\uff08\131\uff08\136\uff08" +
    "\137\uff08\140\uff08\141\uff08\142\uff08\177\uff08\203\uff08\205" +
    "\uff08\210\uff08\001\002\000\004\200\u0100\001\002\000\054" +
    "\110\uff02\111\uff02\112\uff02\113\uff02\114\uff02\115\uff02\116" +
    "\uff02\117\uff02\120\uff02\124\uff02\127\uff02\131\uff02\136\uff02" +
    "\137\uff02\140\uff02\141\uff02\142\uff02\177\uff02\203\uff02\205" +
    "\uff02\210\uff02\001\002\000\004\174\364\001\002\000\020" +
    "\144\157\145\152\162\312\165\313\174\314\205\171\210" +
    "\167\001\002\000\034\152\321\153\326\154\324\155\332" +
    "\156\317\157\322\160\331\161\316\164\320\165\330\166" +
    "\323\167\325\175\366\001\002\000\004\125\367\001\002" +
    "\000\010\122\370\205\134\210\132\001\002\000\004\200" +
    "\372\001\002\000\056\110\uff04\111\uff04\112\uff04\113\uff04" +
    "\114\uff04\115\uff04\116\uff04\117\uff04\120\uff04\124\uff04\126" +
    "\uff04\127\uff04\131\uff04\136\uff04\137\uff04\140\uff04\141\uff04" +
    "\142\uff04\177\uff04\203\uff04\205\uff04\210\uff04\001\002\000" +
    "\004\203\373\001\002\000\052\110\uff41\111\uff41\112\uff41" +
    "\113\uff41\114\uff41\115\uff41\116\uff41\117\uff41\120\uff41\124" +
    "\uff41\127\uff41\131\uff41\136\uff41\137\uff41\140\uff41\141\uff41" +
    "\142\uff41\203\uff41\205\uff41\210\uff41\001\002\000\052\110" +
    "\135\111\112\112\126\113\107\114\144\115\137\116\131" +
    "\117\133\120\110\124\123\127\141\131\117\136\136\137" +
    "\115\140\125\141\116\142\127\203\375\205\134\210\132" +
    "\001\002\000\004\201\376\001\002\000\004\123\377\001" +
    "\002\000\056\110\uff05\111\uff05\112\uff05\113\uff05\114\uff05" +
    "\115\uff05\116\uff05\117\uff05\120\uff05\124\uff05\126\uff05\127" +
    "\uff05\131\uff05\136\uff05\137\uff05\140\uff05\141\uff05\142\uff05" +
    "\177\uff05\203\uff05\205\uff05\210\uff05\001\002\000\004\203" +
    "\u0101\001\002\000\052\110\uff41\111\uff41\112\uff41\113\uff41" +
    "\114\uff41\115\uff41\116\uff41\117\uff41\120\uff41\124\uff41\127" +
    "\uff41\131\uff41\136\uff41\137\uff41\140\uff41\141\uff41\142\uff41" +
    "\203\uff41\205\uff41\210\uff41\001\002\000\052\110\135\111" +
    "\112\112\126\113\107\114\144\115\137\116\131\117\133" +
    "\120\110\124\123\127\141\131\117\136\136\137\115\140" +
    "\125\141\116\142\127\203\u0103\205\134\210\132\001\002" +
    "\000\004\201\u0104\001\002\000\004\123\u0105\001\002\000" +
    "\054\110\uff03\111\uff03\112\uff03\113\uff03\114\uff03\115\uff03" +
    "\116\uff03\117\uff03\120\uff03\124\uff03\127\uff03\131\uff03\136" +
    "\uff03\137\uff03\140\uff03\141\uff03\142\uff03\177\uff03\203\uff03" +
    "\205\uff03\210\uff03\001\002\000\004\203\u0107\001\002\000" +
    "\052\110\uff41\111\uff41\112\uff41\113\uff41\114\uff41\115\uff41" +
    "\116\uff41\117\uff41\120\uff41\124\uff41\127\uff41\131\uff41\136" +
    "\uff41\137\uff41\140\uff41\141\uff41\142\uff41\203\uff41\205\uff41" +
    "\210\uff41\001\002\000\052\110\135\111\112\112\126\113" +
    "\107\114\144\115\137\116\131\117\133\120\110\124\123" +
    "\127\141\131\117\136\136\137\115\140\125\141\116\142" +
    "\127\203\u0109\205\134\210\132\001\002\000\004\201\u010a" +
    "\001\002\000\004\123\u010b\001\002\000\056\110\uff06\111" +
    "\uff06\112\uff06\113\uff06\114\uff06\115\uff06\116\uff06\117\uff06" +
    "\120\uff06\124\uff06\126\uff06\127\uff06\131\uff06\136\uff06\137" +
    "\uff06\140\uff06\141\uff06\142\uff06\177\uff06\203\uff06\205\uff06" +
    "\210\uff06\001\002\000\056\110\uff01\111\uff01\112\uff01\113" +
    "\uff01\114\uff01\115\uff01\116\uff01\117\uff01\120\uff01\124\uff01" +
    "\126\357\127\uff01\131\uff01\136\uff01\137\uff01\140\uff01\141" +
    "\uff01\142\uff01\177\uff01\203\uff01\205\uff01\210\uff01\001\002" +
    "\000\054\110\uff09\111\uff09\112\uff09\113\uff09\114\uff09\115" +
    "\uff09\116\uff09\117\uff09\120\uff09\124\uff09\127\uff09\131\uff09" +
    "\136\uff09\137\uff09\140\uff09\141\uff09\142\uff09\177\uff09\203" +
    "\uff09\205\uff09\210\uff09\001\002\000\054\110\uff40\111\uff40" +
    "\112\uff40\113\uff40\114\uff40\115\uff40\116\uff40\117\uff40\120" +
    "\uff40\124\uff40\127\uff40\131\uff40\136\uff40\137\uff40\140\uff40" +
    "\141\uff40\142\uff40\177\uff40\203\uff40\205\uff40\210\uff40\001" +
    "\002\000\056\110\uff3a\111\uff3a\112\uff3a\113\uff3a\114\uff3a" +
    "\115\uff3a\116\uff3a\117\uff3a\120\uff3a\124\uff3a\126\uff3a\127" +
    "\uff3a\131\uff3a\136\uff3a\137\uff3a\140\uff3a\141\uff3a\142\uff3a" +
    "\177\uff3a\203\uff3a\205\uff3a\210\uff3a\001\002\000\020\144" +
    "\157\145\152\162\312\165\313\174\314\205\171\210\167" +
    "\001\002\000\034\152\321\153\326\154\324\155\332\156" +
    "\317\157\322\160\331\161\316\164\320\165\330\166\323" +
    "\167\325\175\u0112\001\002\000\004\132\u0113\001\002\000" +
    "\004\122\u0114\001\002\000\004\200\u0115\001\002\000\004" +
    "\203\u0116\001\002\000\052\110\uff41\111\uff41\112\uff41\113" +
    "\uff41\114\uff41\115\uff41\116\uff41\117\uff41\120\uff41\124\uff41" +
    "\127\uff41\131\uff41\136\uff41\137\uff41\140\uff41\141\uff41\142" +
    "\uff41\203\uff41\205\uff41\210\uff41\001\002\000\052\110\135" +
    "\111\112\112\126\113\107\114\144\115\137\116\131\117" +
    "\133\120\110\124\123\127\141\131\117\136\136\137\115" +
    "\140\125\141\116\142\127\203\u0118\205\134\210\132\001" +
    "\002\000\004\201\u0119\001\002\000\004\123\u011a\001\002" +
    "\000\054\110\ufefa\111\ufefa\112\ufefa\113\ufefa\114\ufefa\115" +
    "\ufefa\116\ufefa\117\ufefa\120\ufefa\124\ufefa\127\ufefa\131\ufefa" +
    "\136\ufefa\137\ufefa\140\ufefa\141\ufefa\142\ufefa\177\ufefa\203" +
    "\ufefa\205\ufefa\210\ufefa\001\002\000\006\205\134\210\132" +
    "\001\002\000\010\171\u011d\202\uff1a\206\150\001\002\000" +
    "\004\150\u011f\001\002\000\004\202\uff2c\001\002\000\004" +
    "\202\uff1b\001\002\000\006\205\134\210\132\001\002\000" +
    "\010\171\u0122\202\uff22\206\150\001\002\000\004\145\u0124" +
    "\001\002\000\004\202\uff2f\001\002\000\004\202\uff23\001" +
    "\002\000\004\205\u0126\001\002\000\004\175\u0127\001\002" +
    "\000\004\202\uff38\001\002\000\004\175\u0129\001\002\000" +
    "\004\202\uff31\001\002\000\004\205\u012b\001\002\000\004" +
    "\175\u012c\001\002\000\004\202\uff36\001\002\000\004\175" +
    "\u012e\001\002\000\004\176\u012f\001\002\000\052\110\uff41" +
    "\111\uff41\112\uff41\113\uff41\114\uff41\115\uff41\116\uff41\117" +
    "\uff41\120\uff41\124\uff41\127\uff41\131\uff41\136\uff41\137\uff41" +
    "\140\uff41\141\uff41\142\uff41\177\uff41\205\uff41\210\uff41\001" +
    "\002\000\052\110\135\111\112\112\126\113\107\114\144" +
    "\115\137\116\131\117\133\120\110\124\123\127\141\131" +
    "\117\136\136\137\115\140\125\141\116\142\127\177\u0131" +
    "\205\134\210\132\001\002\000\012\003\uff43\134\uff43\135" +
    "\uff43\163\uff43\001\002\000\004\163\u0138\001\002\000\010" +
    "\163\uffb0\205\053\210\054\001\002\000\004\020\u0135\001" +
    "\002\000\004\156\u0136\001\002\000\004\163\uffaf\001\002" +
    "\000\010\003\uffcd\154\uffcd\163\uffcd\001\002\000\004\023" +
    "\u0139\001\002\000\004\156\u013a\001\002\000\010\003\uffb9" +
    "\154\uffb9\163\uffb9\001\002\000\010\163\u013d\205\053\210" +
    "\054\001\002\000\010\003\uffce\154\uffce\163\uffce\001\002" +
    "\000\004\022\u013e\001\002\000\004\156\u013f\001\002\000" +
    "\010\003\uffba\154\uffba\163\uffba\001\002\000\006\154\032" +
    "\163\u0141\001\002\000\004\016\u0144\001\002\000\006\154" +
    "\uffb3\163\uffb3\001\002\000\010\003\uffd2\154\uffd2\163\uffd2" +
    "\001\002\000\004\156\u0145\001\002\000\010\003\uffbd\154" +
    "\uffbd\163\uffbd\001\002\000\010\163\u0148\205\053\210\054" +
    "\001\002\000\010\003\uffcf\154\uffcf\163\uffcf\001\002\000" +
    "\004\021\u0149\001\002\000\004\156\u014a\001\002\000\010" +
    "\003\uffbb\154\uffbb\163\uffbb\001\002\000\010\163\u014c\205" +
    "\053\210\054\001\002\000\004\013\u014e\001\002\000\010" +
    "\003\uffd4\154\uffd4\163\uffd4\001\002\000\004\156\u014f\001" +
    "\002\000\010\003\uffbf\154\uffbf\163\uffbf\001\002\000\010" +
    "\003\uff7a\156\uff7a\176\uff7a\001\002\000\010\003\uff9a\156" +
    "\uff9a\176\uff9a\001\002\000\004\156\u01ea\001\002\000\004" +
    "\156\u01e9\001\002\000\010\003\uff72\156\uff72\176\uff72\001" +
    "\002\000\010\003\uff88\156\uff88\176\uff88\001\002\000\010" +
    "\003\uff8c\156\uff8c\176\uff8c\001\002\000\010\003\uff9e\156" +
    "\uff9e\176\uff9e\001\002\000\010\003\uff76\156\uff76\176\uff76" +
    "\001\002\000\010\003\uff95\156\uff95\176\uff95\001\002\000" +
    "\010\003\uff82\156\uff82\176\uff82\001\002\000\010\003\u015d" +
    "\156\u015c\176\u015f\001\002\000\004\163\uffc6\001\002\000" +
    "\010\003\uff81\156\uff81\176\uff81\001\002\000\010\003\uff83" +
    "\156\uff83\176\uff83\001\002\000\014\034\u0160\041\u0163\042" +
    "\u0162\043\u0164\044\u0161\001\002\000\004\171\u0175\001\002" +
    "\000\004\171\u0170\001\002\000\004\171\u016d\001\002\000" +
    "\004\171\u016a\001\002\000\004\171\u0165\001\002\000\006" +
    "\067\u0168\070\u0167\001\002\000\004\177\u0169\001\002\000" +
    "\004\177\uff4c\001\002\000\004\177\uff4d\001\002\000\010" +
    "\003\uff7e\156\uff7e\176\uff7e\001\002\000\004\213\u016b\001" +
    "\002\000\004\177\u016c\001\002\000\010\003\uff80\156\uff80" +
    "\176\uff80\001\002\000\006\067\u0168\070\u0167\001\002\000" +
    "\004\177\u016f\001\002\000\010\003\uff7f\156\uff7f\176\uff7f" +
    "\001\002\000\006\212\u0172\213\u0173\001\002\000\004\177" +
    "\u0174\001\002\000\004\177\uffa5\001\002\000\004\177\uffa4" +
    "\001\002\000\010\003\uff7d\156\uff7d\176\uff7d\001\002\000" +
    "\004\207\u0176\001\002\000\004\177\u0177\001\002\000\010" +
    "\003\uff7c\156\uff7c\176\uff7c\001\002\000\010\003\u017a\156" +
    "\u0179\176\u017c\001\002\000\010\163\uffc9\205\uffc9\210\uffc9" +
    "\001\002\000\010\003\uff94\156\uff94\176\uff94\001\002\000" +
    "\010\003\uff96\156\uff96\176\uff96\001\002\000\016\030\u0181" +
    "\031\u0182\032\u0180\034\u017d\036\u017f\037\u017e\001\002\000" +
    "\004\171\u019b\001\002\000\004\171\u0198\001\002\000\004" +
    "\171\u0195\001\002\000\004\171\u018e\001\002\000\004\171" +
    "\u018b\001\002\000\004\171\u0183\001\002\000\014\071\u0187" +
    "\072\u0188\073\u0185\074\u0186\075\u0189\001\002\000\004\177" +
    "\u018a\001\002\000\004\177\uff56\001\002\000\004\177\uff55" +
    "\001\002\000\004\177\uff58\001\002\000\004\177\uff57\001" +
    "\002\000\004\177\uff54\001\002\000\010\003\uff92\156\uff92" +
    "\176\uff92\001\002\000\004\067\u018c\001\002\000\004\177" +
    "\u018d\001\002\000\010\003\uff93\156\uff93\176\uff93\001\002" +
    "\000\012\076\u018f\077\u0191\100\u0192\101\u0193\001\002\000" +
    "\004\177\uff53\001\002\000\004\177\u0194\001\002\000\004" +
    "\177\uff52\001\002\000\004\177\uff51\001\002\000\004\177" +
    "\uff50\001\002\000\010\003\uff91\156\uff91\176\uff91\001\002" +
    "\000\004\214\u0196\001\002\000\004\177\u0197\001\002\000" +
    "\010\003\uff8f\156\uff8f\176\uff8f\001\002\000\004\214\u0199" +
    "\001\002\000\004\177\u019a\001\002\000\010\003\uff8e\156" +
    "\uff8e\176\uff8e\001\002\000\004\207\u019c\001\002\000\004" +
    "\177\u019d\001\002\000\010\003\uff90\156\uff90\176\uff90\001" +
    "\002\000\010\003\u01a0\156\u019f\176\u01a3\001\002\000\010" +
    "\163\uffc3\205\uffc3\210\uffc3\001\002\000\010\003\uff75\156" +
    "\uff75\176\uff75\001\002\000\010\003\uff74\156\uff74\176\uff74" +
    "\001\002\000\010\003\uff77\156\uff77\176\uff77\001\002\000" +
    "\014\027\u01a5\030\u01a7\031\u01a8\032\u01a6\034\u01a4\001\002" +
    "\000\004\171\u01c7\001\002\000\004\171\u01b2\001\002\000" +
    "\004\171\u01af\001\002\000\004\171\u01ac\001\002\000\004" +
    "\171\u01a9\001\002\000\014\071\u0187\072\u0188\073\u0185\074" +
    "\u0186\075\u0189\001\002\000\004\177\u01ab\001\002\000\010" +
    "\003\uff6e\156\uff6e\176\uff6e\001\002\000\004\067\u01ad\001" +
    "\002\000\004\177\u01ae\001\002\000\010\003\uff6f\156\uff6f" +
    "\176\uff6f\001\002\000\012\076\u018f\077\u0191\100\u0192\101" +
    "\u0193\001\002\000\004\177\u01b1\001\002\000\010\003\uff6d" +
    "\156\uff6d\176\uff6d\001\002\000\046\003\u01bd\046\u01b7\047" +
    "\u01b8\050\u01b6\051\u01ba\052\u01b9\053\u01bc\054\u01c4\055\u01b5" +
    "\056\u01bb\057\u01bf\060\u01b3\061\u01c3\062\u01c5\063\u01be\064" +
    "\u01c0\065\u01b4\066\u01c1\001\002\000\004\177\uff60\001\002" +
    "\000\004\177\uff5b\001\002\000\004\177\uff63\001\002\000" +
    "\004\177\uff68\001\002\000\004\177\uff6a\001\002\000\004" +
    "\177\uff69\001\002\000\004\177\uff66\001\002\000\004\177" +
    "\uff67\001\002\000\004\177\uff62\001\002\000\004\177\uff65" +
    "\001\002\000\004\177\uff59\001\002\000\004\177\uff5d\001" +
    "\002\000\004\177\uff61\001\002\000\004\177\uff5c\001\002" +
    "\000\004\177\uff5a\001\002\000\004\177\u01c6\001\002\000" +
    "\004\177\uff5f\001\002\000\004\177\uff64\001\002\000\004" +
    "\177\uff5e\001\002\000\010\003\uff6b\156\uff6b\176\uff6b\001" +
    "\002\000\004\207\u01c8\001\002\000\004\177\u01c9\001\002" +
    "\000\010\003\uff6c\156\uff6c\176\uff6c\001\002\000\010\003" +
    "\u01cd\156\u01cc\176\u01a3\001\002\000\010\003\uff9f\156\uff9f" +
    "\176\uff9f\001\002\000\010\163\uffcb\205\uffcb\210\uffcb\001" +
    "\002\000\010\003\uff9d\156\uff9d\176\uff9d\001\002\000\010" +
    "\003\uff9c\156\uff9c\176\uff9c\001\002\000\010\003\u01d1\156" +
    "\u01d0\176\u01a3\001\002\000\004\154\uffc8\001\002\000\010" +
    "\003\uff8b\156\uff8b\176\uff8b\001\002\000\010\003\uff8a\156" +
    "\uff8a\176\uff8a\001\002\000\010\003\uff8d\156\uff8d\176\uff8d" +
    "\001\002\000\010\003\u01d6\156\u01d5\176\u01d9\001\002\000" +
    "\006\154\uffc7\163\uffc7\001\002\000\010\003\uff87\156\uff87" +
    "\176\uff87\001\002\000\010\003\uff86\156\uff86\176\uff86\001" +
    "\002\000\010\003\uff89\156\uff89\176\uff89\001\002\000\020" +
    "\026\u01db\027\u01a5\030\u01a7\031\u01a8\032\u01a6\034\u01a4\040" +
    "\u01da\001\002\000\004\171\u01df\001\002\000\004\171\u01dc" +
    "\001\002\000\046\003\u01bd\046\u01b7\047\u01b8\050\u01b6\051" +
    "\u01ba\052\u01b9\053\u01bc\054\u01c4\055\u01b5\056\u01bb\057\u01bf" +
    "\060\u01b3\061\u01c3\062\u01c5\063\u01be\064\u01c0\065\u01b4\066" +
    "\u01c1\001\002\000\004\177\u01de\001\002\000\010\003\uff84" +
    "\156\uff84\176\uff84\001\002\000\006\106\u01e1\107\u01e0\001" +
    "\002\000\004\177\uff4e\001\002\000\004\177\uff4f\001\002" +
    "\000\004\177\u01e3\001\002\000\010\003\uff85\156\uff85\176" +
    "\uff85\001\002\000\010\003\u01e6\156\u01e5\176\u01a3\001\002" +
    "\000\012\154\uffc2\163\uffc2\205\uffc2\210\uffc2\001\002\000" +
    "\010\003\uff71\156\uff71\176\uff71\001\002\000\010\003\uff70" +
    "\156\uff70\176\uff70\001\002\000\010\003\uff73\156\uff73\176" +
    "\uff73\001\002\000\012\003\uffe4\134\uffe4\135\uffe4\163\uffe4" +
    "\001\002\000\010\003\uffc5\154\uffc5\163\uffc5\001\002\000" +
    "\010\003\u01ee\156\u01ed\176\u01f0\001\002\000\010\003\uff9b" +
    "\156\uff9b\176\uff9b\001\002\000\010\163\uffca\205\uffca\210" +
    "\uffca\001\002\000\010\003\uff99\156\uff99\176\uff99\001\002" +
    "\000\010\003\uff97\156\uff97\176\uff97\001\002\000\016\027" +
    "\u01a5\030\u01a7\031\u01a8\032\u01a6\033\u01f1\034\u01a4\001\002" +
    "\000\004\171\u01f2\001\002\000\012\102\u01f3\103\u01f7\104" +
    "\u01f5\105\u01f6\001\002\000\004\177\uff4b\001\002\000\004" +
    "\177\u01f8\001\002\000\004\177\uff49\001\002\000\004\177" +
    "\uff48\001\002\000\004\177\uff4a\001\002\000\010\003\uff98" +
    "\156\uff98\176\uff98\001\002\000\010\003\u01fb\156\u01fa\176" +
    "\u01a3\001\002\000\010\163\uffc4\205\uffc4\210\uffc4\001\002" +
    "\000\010\003\uff79\156\uff79\176\uff79\001\002\000\010\003" +
    "\uff78\156\uff78\176\uff78\001\002\000\010\003\uff7b\156\uff7b" +
    "\176\uff7b\001\002\000\004\156\u01ff\001\002\000\010\003" +
    "\uffec\154\uffec\163\uffec\001\002\000\010\163\u0202\205\053" +
    "\210\054\001\002\000\010\003\uffd5\154\uffd5\163\uffd5\001" +
    "\002\000\004\012\u0203\001\002\000\004\156\u0204\001\002" +
    "\000\010\003\uffc0\154\uffc0\163\uffc0\001\002\000\010\003" +
    "\uffd1\154\uffd1\163\uffd1\001\002\000\004\017\u0207\001\002" +
    "\000\004\156\u0208\001\002\000\010\003\uffbc\154\uffbc\163" +
    "\uffbc\001\002\000\010\003\u0216\154\u0215\163\u0219\001\002" +
    "\000\004\010\u020b\001\002\000\010\003\uffa2\156\uffa2\176" +
    "\uffa2\001\002\000\010\003\u020e\156\u020d\176\u0210\001\002" +
    "\000\010\003\uffed\154\uffed\163\uffed\001\002\000\010\003" +
    "\uffa1\156\uffa1\176\uffa1\001\002\000\010\003\uffa3\156\uffa3" +
    "\176\uffa3\001\002\000\004\026\u0211\001\002\000\004\171" +
    "\u0212\001\002\000\046\003\u01bd\046\u01b7\047\u01b8\050\u01b6" +
    "\051\u01ba\052\u01b9\053\u01bc\054\u01c4\055\u01b5\056\u01bb\057" +
    "\u01bf\060\u01b3\061\u01c3\062\u01c5\063\u01be\064\u01c0\065\u01b4" +
    "\066\u01c1\001\002\000\004\177\u0214\001\002\000\010\003" +
    "\uffa0\156\uffa0\176\uffa0\001\002\000\004\024\u021d\001\002" +
    "\000\004\002\ufff4\001\002\000\006\003\u0216\163\u0219\001" +
    "\002\000\004\002\ufffb\001\002\000\004\004\u021a\001\002" +
    "\000\004\156\u021b\001\002\000\004\002\ufff5\001\002\000" +
    "\004\002\ufff7\001\002\000\004\156\u021e\001\002\000\010" +
    "\134\uff45\135\uff45\163\uff45\001\002\000\010\134\073\135" +
    "\076\163\u0220\001\002\000\004\024\u0221\001\002\000\004" +
    "\156\u0222\001\002\000\010\003\uff47\154\uff47\163\uff47\001" +
    "\002\000\006\003\u0216\163\u0219\001\002\000\004\002\ufffd" +
    "\001\002\000\004\002\ufffa\001\002\000\010\003\u0228\154" +
    "\u0229\163\u022e\001\002\000\006\003\u0247\163\u0248\001\002" +
    "\000\004\154\uffef\001\002\000\010\006\u023b\007\u023a\024" +
    "\u0153\001\002\000\012\003\uffdc\163\uffdc\205\uffdc\210\uffdc" +
    "\001\002\000\010\003\uffeb\154\uffeb\163\uffeb\001\002\000" +
    "\004\154\ufff3\001\002\000\012\003\uff45\134\uff45\135\uff45" +
    "\163\uff45\001\002\000\004\005\u022f\001\002\000\004\156" +
    "\u0230\001\002\000\004\154\ufff0\001\002\000\012\003\075" +
    "\134\073\135\076\163\100\001\002\000\010\003\uffe7\154" +
    "\uffe7\163\uffe7\001\002\000\012\003\u0235\163\u0237\205\053" +
    "\210\054\001\002\000\012\003\uffdd\163\uffdd\205\uffdd\210" +
    "\uffdd\001\002\000\010\003\uffe0\154\uffe0\163\uffe0\001\002" +
    "\000\010\003\uffe8\154\uffe8\163\uffe8\001\002\000\004\006" +
    "\u0238\001\002\000\004\156\u0239\001\002\000\010\003\uffe1" +
    "\154\uffe1\163\uffe1\001\002\000\010\003\uffa8\156\uffa8\176" +
    "\uffa8\001\002\000\004\156\u023c\001\002\000\012\003\uffe5" +
    "\163\uffe5\205\uffe5\210\uffe5\001\002\000\010\003\u0240\156" +
    "\u023f\176\u0241\001\002\000\010\003\uffa9\156\uffa9\176\uffa9" +
    "\001\002\000\006\003\uffe6\163\uffe6\001\002\000\010\003" +
    "\uffa7\156\uffa7\176\uffa7\001\002\000\004\025\u0242\001\002" +
    "\000\004\171\u0243\001\002\000\004\213\u0244\001\002\000" +
    "\004\177\u0245\001\002\000\010\003\uffa6\156\uffa6\176\uffa6" +
    "\001\002\000\010\003\uffe9\154\uffe9\163\uffe9\001\002\000" +
    "\010\003\uffe2\154\uffe2\163\uffe2\001\002\000\004\007\u0249" +
    "\001\002\000\004\156\u024a\001\002\000\010\003\uffe3\154" +
    "\uffe3\163\uffe3\001\002\000\004\005\u0256\001\002\000\004" +
    "\154\020\001\002\000\010\003\u0216\154\u0215\163\u0219\001" +
    "\002\000\004\154\u020a\001\002\000\010\003\u0216\154\u0215" +
    "\163\u0219\001\002\000\006\003\u0216\163\u0219\001\002\000" +
    "\004\002\ufff9\001\002\000\004\002\ufff6\001\002\000\006" +
    "\003\u0216\163\u0219\001\002\000\004\002\ufffc\001\002\000" +
    "\004\002\ufff8\001\002\000\004\156\u0257\001\002\000\010" +
    "\003\ufff2\154\ufff2\163\ufff2\001\002\000\010\003\uffad\156" +
    "\uffad\176\uffad\001\002\000\010\003\u025b\156\u025a\176\u025d" +
    "\001\002\000\006\003\uffff\154\uffff\001\002\000\010\003" +
    "\uffac\156\uffac\176\uffac\001\002\000\010\003\uffae\156\uffae" +
    "\176\uffae\001\002\000\006\034\u025e\035\u025f\001\002\000" +
    "\004\171\u0263\001\002\000\004\171\u0260\001\002\000\006" +
    "\212\u0172\213\u0173\001\002\000\004\177\u0262\001\002\000" +
    "\010\003\uffaa\156\uffaa\176\uffaa\001\002\000\004\207\u0264" +
    "\001\002\000\004\177\u0265\001\002\000\010\003\uffab\156" +
    "\uffab\176\uffab\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0263\000\006\002\006\133\005\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\003\015\005\013\014\010" +
    "\134\014\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\003\u024b\134\014\001\001\000\004\015\u0225\001\001\000" +
    "\010\004\016\005\020\135\021\001\001\000\006\005\u0222" +
    "\044\u0223\001\001\000\002\001\001\000\006\004\u0208\135" +
    "\021\001\001\000\004\016\022\001\001\000\034\021\030" +
    "\141\040\142\041\143\025\144\032\145\042\146\035\147" +
    "\024\150\023\151\033\152\036\153\037\167\027\001\001" +
    "\000\002\001\001\000\004\161\u0204\001\001\000\004\042" +
    "\u01ff\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\042\u014a\001\001\000" +
    "\004\042\u0145\001\001\000\002\001\001\000\004\037\u013f" +
    "\001\001\000\004\042\u013a\001\001\000\006\041\u0131\042" +
    "\u0132\001\001\000\004\043\071\001\001\000\004\042\064" +
    "\001\001\000\006\022\045\036\043\001\001\000\006\022" +
    "\057\157\061\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\042\050\001\001\000\004\023" +
    "\051\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\023\051\154" +
    "\065\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\100\076\172\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\075\105\001\001\000\026\007\121\035" +
    "\142\076\110\077\112\105\123\106\120\107\137\113\127" +
    "\117\117\132\141\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\u011f\001\001\000\004\010" +
    "\u011a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\010\275\001\001\000\002\001\001\000\004" +
    "\010\265\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\240\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\035\204\001\001\000\010" +
    "\122\161\130\163\131\162\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\130\203\131\162\001\001\000" +
    "\002\001\001\000\006\130\171\131\162\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\130\202\131\162\001" +
    "\001\000\006\130\201\131\162\001\001\000\002\001\001" +
    "\000\006\130\200\131\162\001\001\000\006\130\177\131" +
    "\162\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\035\210\110\207\001\001\000\004\035\232" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\112" +
    "\213\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\035\221\111\217\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\075\226\001\001\000\026\007\121\035\142\076\110" +
    "\077\112\105\123\106\120\107\137\113\127\117\117\132" +
    "\141\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\112\234\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\035\142\132\241\001\001\000\004\123" +
    "\243\001\001\000\006\130\244\131\162\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\011\251\012\257\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\262\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\035\142\132\266\001\001\000\004\124\267\001\001\000" +
    "\002\001\001\000\006\011\251\012\271\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\035\142\132\276\001\001\000\004\125\300" +
    "\001\001\000\004\013\301\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\120\307\121\306\131\310\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\120\347\121\306\131\310\001\001\000\010\120\346\121" +
    "\306\131\310\001\001\000\010\120\314\121\306\131\310" +
    "\001\001\000\002\001\001\000\010\120\345\121\306\131" +
    "\310\001\001\000\010\120\344\121\306\131\310\001\001" +
    "\000\010\120\343\121\306\131\310\001\001\000\010\120" +
    "\342\121\306\131\310\001\001\000\010\120\341\121\306" +
    "\131\310\001\001\000\010\120\340\121\306\131\310\001" +
    "\001\000\010\120\337\121\306\131\310\001\001\000\010" +
    "\120\336\121\306\131\310\001\001\000\010\120\335\121" +
    "\306\131\310\001\001\000\002\001\001\000\010\120\334" +
    "\121\306\131\310\001\001\000\010\120\333\121\306\131" +
    "\310\001\001\000\010\120\332\121\306\131\310\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\035\142\077" +
    "\353\117\117\132\141\001\001\000\002\001\001\000\004" +
    "\114\354\001\001\000\006\115\355\116\357\001\001\000" +
    "\002\001\001\000\012\035\142\077\361\117\117\132\141" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\120\364\121\306\131\310" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\035" +
    "\142\077\370\117\117\132\141\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\075\373\001" +
    "\001\000\026\007\121\035\142\076\110\077\112\105\123" +
    "\106\120\107\137\113\127\117\117\132\141\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\075\u0101\001\001\000\026\007\121\035" +
    "\142\076\110\077\112\105\123\106\120\107\137\113\127" +
    "\117\117\132\141\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\075\u0107" +
    "\001\001\000\026\007\121\035\142\076\110\077\112\105" +
    "\123\106\120\107\137\113\127\117\117\132\141\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\114\u010b\001" +
    "\001\000\006\115\355\116\u010c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\120\u0110\121" +
    "\306\131\310\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\075\u0116\001\001\000\026\007\121\035\142\076\110" +
    "\077\112\105\123\106\120\107\137\113\127\117\117\132" +
    "\141\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\035\142\132\u011b\001\001\000\004\126" +
    "\u011d\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\035\142\132\u0120\001\001\000\004\127" +
    "\u0122\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\075\u012f\001\001\000\026\007\121" +
    "\035\142\076\110\077\112\105\123\106\120\107\137\113" +
    "\127\117\117\132\141\001\001\000\002\001\001\000\004" +
    "\165\u0136\001\001\000\004\023\051\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\023\051\164\u013b\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\034\021" +
    "\u0141\141\040\142\041\143\025\144\032\145\042\146\035" +
    "\147\024\150\023\151\033\152\036\153\037\160\u0142\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\023\051\163" +
    "\u0146\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\023\051\156\u014c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\067\u01f8\001\001\000\004\055" +
    "\u01ea\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\073\u01e3\001\001\000\004\063\u01d3\001\001\000\004\061" +
    "\u01ce\001\001\000\004\053\u01c9\001\001\000\004\071\u019d" +
    "\001\001\000\004\057\u0177\001\001\000\004\065\u015a\001" +
    "\001\000\004\066\u015d\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\032\u0165\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\032\u016d\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\024\u0170\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\060\u017a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\027\u0183\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\030\u018f" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\033" +
    "\u01a0\072\u01a1\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\027\u01a9\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\030\u01af\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\026\u01c1\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\033\u01cd\054\u01ca\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\033\u01d1\062\u01d2\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\033" +
    "\u01d6\064\u01d7\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\026\u01dc\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\031\u01e1\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\033\u01e6\074\u01e7\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\033" +
    "\u01ee\056\u01eb\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u01f3\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\033\u01fb\070\u01fc" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\023\051\155\u0200\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\005\u0216\044\u0217\001\001\000\002\001\001" +
    "\000\004\051\u020b\001\001\000\004\052\u020e\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\026\u0212\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\044\u021b\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\043\u021e\001\001\000" +
    "\004\100\076\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\044\u0224\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\020\u022a\137\u0226\140\u0229" +
    "\141\u022c\166\u022b\001\001\000\004\170\u0245\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\017\u0232\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\043\u0230\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\100\076\172\u0231\001\001\000\002\001\001\000" +
    "\006\023\u0233\171\u0235\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\047\u023c\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\050\u023d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\004\u024c\005\u024d\135\021\001\001" +
    "\000\006\005\u0252\044\u0253\001\001\000\006\004\u024e\135" +
    "\021\001\001\000\006\005\u024f\044\u0250\001\001\000\004" +
    "\044\u0251\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\044\u0254\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\045\u0258\001" +
    "\001\000\004\046\u025b\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\024\u0260\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$EtiquetadoParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$EtiquetadoParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$EtiquetadoParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public EtiquetadoParser(EtiquetadoLexer lexer) {
        super(lexer);
    }
    public void report_error(String message, Object info) {
        System.out.println("reporterror");;
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal " + info);
    }
    @Override
    public void syntax_error(Symbol s) {
        System.out.println("linea: " + s.left + "   columna: " + s.right + "   token: " + symbl_name_from_id(s.sym) + "     texto: " + s.value);
    }
    protected int error_sync_size() {
        return 1;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$EtiquetadoParser$actions {
  private final EtiquetadoParser parser;

  /** Constructor */
  CUP$EtiquetadoParser$actions(EtiquetadoParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action_part00000000(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$EtiquetadoParser$result;

      /* select the action based on the action number */
      switch (CUP$EtiquetadoParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		RESULT = start_val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$EtiquetadoParser$parser.done_parsing();
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= apertura_gcic cuerpo_gcic 
            {
              Object RESULT =null;
		System.out.println("Se ha llegado al final del reconocimiento");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // apertura_gcic ::= MENOR_QUE GCIC cuerpo_parametros_gcic MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_gcic",89, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // apertura_gcic ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_gcic",89, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // cuerpo_gcic ::= cabecera cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // cuerpo_gcic ::= scripting cabecera cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // cuerpo_gcic ::= cabecera scripting cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // cuerpo_gcic ::= cabecera cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // cuerpo_gcic ::= scripting cabecera scripting cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // cuerpo_gcic ::= scripting cabecera cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // cuerpo_gcic ::= cabecera scripting cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // cuerpo_gcic ::= scripting cabecera scripting cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // cierre_gcic ::= MENOR_CIERRE GCIC MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_gcic",34, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // cierre_gcic ::= error 
            {
              Object RESULT =null;
		System.out.println("Error de prueba");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_gcic",34, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // cabecera ::= apertura_cabecera cuerpo_cabecera cierre_cabecera 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cabecera",1, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // apertura_cabecera ::= MENOR_QUE HEAD MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_cabecera",90, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // apertura_cabecera ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_cabecera",90, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // cierre_cabecera ::= MENOR_CIERRE HEAD MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_cabecera",116, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // cierre_cabecera ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_cabecera",116, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // cuerpo ::= apertura_body cuerpo_cuerpo cierre_body 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo",2, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // apertura_body ::= MENOR_QUE BODY cuerpo_parametros_body MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_body",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // cierre_body ::= MENOR_CIERRE BODY MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_body",117, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // cuerpo_cabecera ::= cuerpo_cabecera etiquetas_cabecera 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // cuerpo_cabecera ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // etiquetas_cabecera ::= apertura_link cierre_link 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // etiquetas_cabecera ::= apertura_title cuerpo_title cierre_title 
            {
              Object RESULT =null;
		int ctleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int ctright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object ct = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // etiquetas_cabecera ::= apertura_scripting cuerpo_scripting cierre_scripting 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // apertura_link ::= MENOR_QUE LINK cuerpo_parametros_link MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_link",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // apertura_title ::= MENOR_QUE TITLE MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_title",94, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // apertura_scripting ::= MENOR_QUE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_scripting",95, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // cierre_link ::= MENOR_CIERRE LINK MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_link",118, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // cierre_link ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_link",118, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // cierre_title ::= MENOR_CIERRE TITLE MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_title",119, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // cierre_title ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_title",119, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // cierre_scripting ::= MENOR_CIERRE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_scripting",120, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // cierre_scripting ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_scripting",120, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // cuerpo_title ::= cuerpo_title texto 
            {
              Object RESULT =null;
		int ctleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int ctright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object ct = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT= ct.toString() + " " + ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_title",13, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // cuerpo_title ::= 
            {
              Object RESULT =null;
		RESULT="";
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_title",13, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // texto ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto",17, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // texto ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto",17, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // cuerpo_cuerpo ::= cuerpo_cuerpo etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // cuerpo_cuerpo ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // cuerpo_cuerpo ::= cuerpo_cuerpo error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // etiquetas_cuerpo ::= apertura_spam cuerpo_texto cerradura_spam 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // etiquetas_cuerpo ::= apertura_input cuerpo_texto cerradura_input 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // etiquetas_cuerpo ::= apertura_textarea cuerpo_texto cerradura_textarea 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // etiquetas_cuerpo ::= apertura_select cuerpo_select cerradura_select 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // etiquetas_cuerpo ::= apertura_div cuerpo_div cerradura_div 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // etiquetas_cuerpo ::= apertura_img cerradura_img 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // etiquetas_cuerpo ::= apertura_br 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // etiquetas_cuerpo ::= apertura_button cuerpo_texto cerradura_button 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // etiquetas_cuerpo ::= apertura_h1 cuerpo_texto cerradura_h1 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // etiquetas_cuerpo ::= apertura_p cuerpo_p cerradura_p 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // etiquetas_cuerpo ::= apertura_scripting cuerpo_scripting cierre_scripting 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // apertura_spam ::= MENOR_QUE SPAM cuerpo_parametros_spam MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_spam",96, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // apertura_input ::= MENOR_QUE INPUT cuerpo_parametros_input MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_input",97, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // apertura_textarea ::= MENOR_QUE TEXTAREA cuerpo_parametros_textarea MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_textarea",98, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // apertura_select ::= MENOR_QUE SELECT cuerpo_parametros_select MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_select",99, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // apertura_div ::= MENOR_QUE DIV cuerpo_parametros_div MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_div",100, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // apertura_img ::= MENOR_QUE IMG cuerpo_parametros_img MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_img",101, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // apertura_br ::= MENOR_QUE BR MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_br",102, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // apertura_button ::= MENOR_QUE BUTTON cuerpo_parametros_button MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_button",103, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // apertura_h1 ::= MENOR_QUE H1 cuerpo_parametros_h1 MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_h1",104, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // apertura_p ::= MENOR_QUE P cuerpo_parametros_p MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_p",105, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // cerradura_spam ::= MENOR_CIERRE SPAM MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_spam",106, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // cerradura_input ::= MENOR_CIERRE INPUT MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_input",107, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // cerradura_textarea ::= MENOR_CIERRE TEXTAREA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_textarea",108, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // cerradura_select ::= MENOR_CIERRE SELECT MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_select",109, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // cerradura_div ::= MENOR_CIERRE DIV MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_div",110, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // cerradura_img ::= MENOR_CIERRE IMG MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_img",111, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // cerradura_button ::= MENOR_CIERRE BUTTON MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_button",113, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // cerradura_h1 ::= MENOR_CIERRE H1 MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_h1",114, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // cerradura_p ::= MENOR_CIERRE P MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_p",115, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // cuerpo_select ::= cuerpo_select etiqueta_option 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_select",28, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // cuerpo_select ::= etiqueta_option 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_select",28, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // etiqueta_option ::= MENOR_QUE OPTION MAYOR_QUE cuerpo_texto MENOR_CIERRE OPTION MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiqueta_option",16, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // cuerpo_texto ::= cuerpo_texto texto 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_texto",32, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // cuerpo_texto ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_texto",32, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // cuerpo_div ::= cuerpo_div etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_div",29, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // cuerpo_div ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_div",29, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // cuerpo_h1 ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_h1",30, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // cuerpo_p ::= cuerpo_texto 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_p",31, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // cuerpo_p ::= MENOR_QUE BR MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_p",31, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // cuerpo_parametros_gcic ::= cuerpo_parametros_gcic parametros_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",35, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // cuerpo_parametros_gcic ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",35, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // cuerpo_parametros_gcic ::= cuerpo_parametros_gcic error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",35, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // parametros_gcic ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_gcic",36, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // parametros_gcic ::= CORA NAME IGUAL texto_comillas_complete CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_gcic",36, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // cuerpo_parametros_link ::= cuerpo_parametros_link parametros_link 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // cuerpo_parametros_link ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // cuerpo_parametros_link ::= cuerpo_parametros_link error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // parametros_link ::= CORA HREF IGUAL ALLCHARNOSPACE CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_link",38, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // texto_comillas_complete ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto_comillas_complete",18, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // texto_comillas_complete ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto_comillas_complete",18, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // cuerpo_parametros_body ::= cuerpo_parametros_body parametros_body 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // cuerpo_parametros_body ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // cuerpo_parametros_body ::= cuerpo_parametros_body error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // parametros_body ::= CORA BACKGROUND IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_body",40, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // cuerpo_parametros_spam ::= cuerpo_parametros_spam parametros_spam 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // cuerpo_parametros_spam ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // cuerpo_parametros_spam ::= cuerpo_parametros_spam error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // parametros_spam ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_spam",42, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // cuerpo_parametros_input ::= cuerpo_parametros_input parametros_input 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // cuerpo_parametros_input ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // cuerpo_parametros_input ::= cuerpo_parametros_input error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // parametros_input ::= CORA TYPE IGUAL tipos_input CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_input",44, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // parametros_input ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_input",44, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // cuerpo_parametros_textarea ::= cuerpo_parametros_textarea parametros_textarea 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // cuerpo_parametros_textarea ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // cuerpo_parametros_textarea ::= cuerpo_parametros_textarea error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // parametros_textarea ::= CORA FONTSIZE IGUAL PIXELES CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // parametros_textarea ::= CORA FONTFAMILY IGUAL font_family CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // parametros_textarea ::= CORA TEXTALIGN IGUAL alineaciones CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // parametros_textarea ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // parametros_textarea ::= CORA COLS IGUAL DIGITO_COM CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // parametros_textarea ::= CORA ROWS IGUAL DIGITO_COM CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // cuerpo_parametros_select ::= cuerpo_parametros_select parametros_select 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // cuerpo_parametros_select ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // cuerpo_parametros_select ::= cuerpo_parametros_select error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // parametros_select ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_select",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // cuerpo_parametros_div ::= cuerpo_parametros_div parametros_div 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // cuerpo_parametros_div ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // cuerpo_parametros_div ::= cuerpo_parametros_div error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // parametros_div ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",50, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // parametros_div ::= CORA CLASS IGUAL clases CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",50, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // parametros_div ::= CORA BACKGROUND IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",50, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // cuerpo_parametros_img ::= cuerpo_parametros_img parametros_img 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // cuerpo_parametros_img ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // cuerpo_parametros_img ::= cuerpo_parametros_img error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // parametros_img ::= CORA SRC IGUAL ALLCHARNOSPACE CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // parametros_img ::= CORA WIDTH IGUAL tamaños CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // parametros_img ::= CORA HEIGHT IGUAL tamaños CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // parametros_img ::= CORA ALT IGUAL texto_comillas_complete CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // parametros_img ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // cuerpo_parametros_button ::= cuerpo_parametros_button parametros_button 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // cuerpo_parametros_button ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // cuerpo_parametros_button ::= cuerpo_parametros_button error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // parametros_button ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_button",54, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // cuerpo_parametros_h1 ::= cuerpo_parametros_h1 parametros_h1 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // cuerpo_parametros_h1 ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // cuerpo_parametros_h1 ::= cuerpo_parametros_h1 error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // parametros_h1 ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_h1",56, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // cuerpo_parametros_p ::= cuerpo_parametros_p parametros_p 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // cuerpo_parametros_p ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // cuerpo_parametros_p ::= cuerpo_parametros_p error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // parametros_p ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_p",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // parametros_textuales ::= CORA FONTSIZE IGUAL PIXELES CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // parametros_textuales ::= CORA FONTFAMILY IGUAL font_family CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // parametros_textuales ::= CORA TEXTALIGN IGUAL alineaciones CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // parametros_textuales ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // parametros_textuales ::= CORA COLOR IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // colores ::= BLACK 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // colores ::= OLIVE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // colores ::= TEAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // colores ::= RED 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // colores ::= BLUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // colores ::= MAROON 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // colores ::= NAVY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // colores ::= GRAY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // colores ::= LIME 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // colores ::= FUCHSIA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // colores ::= GREEN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // colores ::= WHITE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // colores ::= PURPLE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // colores ::= SILVER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // colores ::= YELLOW 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // colores ::= AQUA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // colores ::= HEXADECIMAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // colores ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // font_family ::= COURIER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // font_family ::= VERDANA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // font_family ::= ARIAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // font_family ::= GENEVA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // font_family ::= SANS_SERIF 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // alineaciones ::= LEFT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // alineaciones ::= RIGHT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // alineaciones ::= CENTER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // alineaciones ::= JUSTIFY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // clases ::= ROW 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("clases",23, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // clases ::= COLUMN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("clases",23, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // tamaños ::= PIXELES 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tamaños",24, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // tamaños ::= PORCENTAJE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tamaños",24, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // tipos_input ::= TEXT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tipos_input",26, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // tipos_input ::= NUMBER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tipos_input",26, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // tipos_input ::= RADIO 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tipos_input",26, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // tipos_input ::= CHECKBOX 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tipos_input",26, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // scripting ::= MENOR_QUE SCRIPTING MAYOR_QUE cuerpo_scripting MENOR_CIERRE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("scripting",3, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // cuerpo_scripting ::= cuerpo_scripting parametros_scripting 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_scripting",33, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // cuerpo_scripting ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_scripting",33, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // parametros_scripting ::= PROCESS PARA PARC CORA cuerpo_parametros_proceso CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_scripting",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // parametros_scripting ::= ON_LOAD PARA PARC CORA cuerpo_parametros_proceso CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_scripting",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // cuerpo_parametros_proceso ::= cuerpo_parametros_proceso parametros_proceso 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // cuerpo_parametros_proceso ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // parametros_proceso ::= variables PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // parametros_proceso ::= parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // parametros_proceso ::= funciones_especiales PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // parametros_proceso ::= condicion_if 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // parametros_proceso ::= ciclo_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // parametros_proceso ::= ciclo_while 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // parametros_proceso_simples ::= asignacion_valor PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso_simples",61, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // funciones_especiales ::= ASC PARA IDENTIFICADOR PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // funciones_especiales ::= DESC PARA IDENTIFICADOR PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // funciones_especiales ::= LETPAR_NUM PARA IDENTIFICADOR PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // funciones_especiales ::= LETIMPAR_NUM PARA IDENTIFICADOR PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // funciones_especiales ::= REVERSE PARA IDENTIFICADOR PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // funciones_especiales ::= CARACTER_ALEATORIO PARA PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // funciones_especiales ::= NUM_ALEATORIO PARA PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // funciones_especiales ::= ALERT_INFO PARA strings_concatenados PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // funciones_especiales ::= EXIT PARA PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // variables ::= INTEGER modo cuerpo_identificadores igual_integer 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // variables ::= DECIMAL modo cuerpo_identificadores igual_decimal 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // variables ::= STRING modo cuerpo_identificadores igual_string 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // variables ::= BOOLEAN modo cuerpo_identificadores igual_boolean 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // variables ::= CHAR modo cuerpo_identificadores igual_char 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // cuerpo_identificadores ::= cuerpo_identificadores COMA identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",88, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // cuerpo_identificadores ::= identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",88, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // identificadores ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("identificadores",27, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // identificadores ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("identificadores",27, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // modo ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("modo",6, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // modo ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("modo",6, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // igual_integer ::= IGUAL expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_integer",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // igual_integer ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_integer",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // igual_decimal ::= IGUAL D_DECIMAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_decimal",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // igual_decimal ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_decimal",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // igual_string ::= IGUAL strings_concatenados 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_string",82, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // igual_string ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_string",82, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // strings_concatenados ::= strings_concatenados SUMA strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // strings_concatenados ::= strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // igual_boolean ::= IGUAL booleanos 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_boolean",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // igual_boolean ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_boolean",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // igual_char ::= IGUAL D_CHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_char",84, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // igual_char ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_char",84, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // booleanos ::= TRUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // booleanos ::= FALSE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // strings ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // strings ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // strings ::= D_STRING 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // strings ::= ID_ETIQUETA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // strings ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // asignacion_valor ::= cuerpo_identificadores IGUAL valores_de_asignacion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("asignacion_valor",77, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // valores_de_asignacion ::= expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // valores_de_asignacion ::= D_CHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // valores_de_asignacion ::= TRUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // valores_de_asignacion ::= FALSE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // valores_de_asignacion ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // valores_de_asignacion ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // valores_de_asignacion ::= ID_ETIQUETA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // valores_de_asignacion ::= D_STRING 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // condicion_if ::= IF PARA condicion PARC THEN INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END condicion_else_if condicion_else 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_if",68, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-13)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // condicion_if ::= IF PARA condicion PARC THEN parametros_proceso_simples condicion_else_if condicion_else 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_if",68, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // condicion_else_if ::= condicion_else_if parametros_else_if 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else_if",74, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // condicion_else_if ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else_if",74, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // parametros_else_if ::= ELSE IF PARA condicion PARC THEN INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_else_if",75, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-12)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // parametros_else_if ::= ELSE IF PARA condicion PARC THEN parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_else_if",75, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // condicion_else ::= ELSE INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // condicion_else ::= ELSE parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // condicion_else ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // ciclo_repeat ::= REPEAT PARA repetir_declaracion PARC HUNTIL PARA repetir_limite PARC INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("ciclo_repeat",69, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-14)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // repetir_declaracion ::= INTEGER identificadores IGUAL igual_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_declaracion",70, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // repetir_declaracion ::= identificadores IGUAL igual_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_declaracion",70, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // repetir_limite ::= D_INTEGER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_limite",71, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // repetir_limite ::= identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_limite",71, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // igual_repeat ::= D_INTEGER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_repeat",72, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // ciclo_while ::= WHILE PARA condicion PARC THENWHILE INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("ciclo_while",73, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-11)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // condicion ::= condicion IGUAL_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // condicion ::= condicion DIFERENTE_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // condicion ::= condicion MENOR_QUE condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // condicion ::= condicion MENOR_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // condicion ::= condicion MAYOR_QUE condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // condicion ::= condicion MAYOR_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // condicion ::= NOT condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // condicion ::= condicion AND condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // condicion ::= condicion OR condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // condicion ::= RESTA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // condicion ::= condicion SUMA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // condicion ::= condicion RESTA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // condicion ::= condicion MULTIPLICACION condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // condicion ::= condicion DIVISION condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // condicion ::= valor_condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // condicion ::= PARA condicion PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // valor_condicion ::= valor_numerico 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_condicion",79, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // expresion_aritmetica ::= RESTA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1*-1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // expresion_aritmetica ::= expresion_aritmetica SUMA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1+va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // expresion_aritmetica ::= expresion_aritmetica RESTA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1-va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // expresion_aritmetica ::= expresion_aritmetica MULTIPLICACION expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1*va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // expresion_aritmetica ::= expresion_aritmetica DIVISION expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1/va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // expresion_aritmetica ::= valor_numerico 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object va1 = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = new Double(va1.toString());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // expresion_aritmetica ::= PARA expresion_aritmetica PARC 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		RESULT = new Double(va1.toString());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // valor_numerico ::= D_INTEGER 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // valor_numerico ::= D_DECIMAL 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // valor_numerico ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = 1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // valor_numerico ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = 1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$EtiquetadoParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
              return CUP$EtiquetadoParser$do_action_part00000000(
                               CUP$EtiquetadoParser$act_num,
                               CUP$EtiquetadoParser$parser,
                               CUP$EtiquetadoParser$stack,
                               CUP$EtiquetadoParser$top);
    }
}

}
