
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.froi.pruebas.gramaticas;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class EtiquetadoParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return EtiquetadoParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public EtiquetadoParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public EtiquetadoParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public EtiquetadoParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\343\000\002\002\004\000\002\002\007\000\002\014" +
    "\005\000\002\014\006\000\002\014\006\000\002\014\006" +
    "\000\002\014\007\000\002\014\007\000\002\014\007\000" +
    "\002\014\010\000\002\052\005\000\002\003\011\000\002" +
    "\004\012\000\002\015\004\000\002\015\003\000\002\020" +
    "\011\000\002\020\011\000\002\020\011\000\002\017\004" +
    "\000\002\017\002\000\002\023\003\000\002\023\003\000" +
    "\002\016\004\000\002\016\003\000\002\021\012\000\002" +
    "\021\012\000\002\021\012\000\002\021\012\000\002\021" +
    "\012\000\002\021\011\000\002\021\005\000\002\021\012" +
    "\000\002\021\012\000\002\021\012\000\002\021\011\000" +
    "\002\041\004\000\002\041\003\000\002\022\011\000\002" +
    "\050\004\000\002\050\002\000\002\042\004\000\002\042" +
    "\002\000\002\046\002\000\002\047\003\000\002\047\005" +
    "\000\002\053\004\000\002\053\002\000\002\054\007\000" +
    "\002\054\007\000\002\055\004\000\002\055\002\000\002" +
    "\056\007\000\002\024\003\000\002\024\003\000\002\057" +
    "\004\000\002\057\002\000\002\060\007\000\002\061\004" +
    "\000\002\061\002\000\002\062\003\000\002\063\004\000" +
    "\002\063\002\000\002\064\007\000\002\064\003\000\002" +
    "\065\004\000\002\065\002\000\002\066\007\000\002\066" +
    "\007\000\002\066\007\000\002\066\007\000\002\066\007" +
    "\000\002\066\007\000\002\067\004\000\002\067\002\000" +
    "\002\070\003\000\002\071\004\000\002\071\002\000\002" +
    "\072\003\000\002\072\007\000\002\072\007\000\002\073" +
    "\004\000\002\073\002\000\002\074\007\000\002\074\007" +
    "\000\002\074\007\000\002\074\007\000\002\074\007\000" +
    "\002\075\004\000\002\075\002\000\002\076\003\000\002" +
    "\077\004\000\002\077\002\000\002\100\003\000\002\101" +
    "\004\000\002\101\002\000\002\102\003\000\002\033\007" +
    "\000\002\033\007\000\002\033\007\000\002\033\007\000" +
    "\002\033\007\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\026\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\026\003\000\002\026\003" +
    "\000\002\026\003\000\002\026\003\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\026\003\000\002\027\003\000\002\027" +
    "\003\000\002\027\003\000\002\027\003\000\002\027\003" +
    "\000\002\030\003\000\002\030\003\000\002\030\003\000" +
    "\002\030\003\000\002\031\003\000\002\031\003\000\002" +
    "\032\003\000\002\032\003\000\002\005\011\000\002\051" +
    "\004\000\002\051\002\000\002\106\010\000\002\106\010" +
    "\000\002\103\004\000\002\103\002\000\002\104\004\000" +
    "\002\104\003\000\002\104\003\000\002\104\003\000\002" +
    "\104\003\000\002\105\004\000\002\007\006\000\002\007" +
    "\006\000\002\007\006\000\002\007\006\000\002\007\006" +
    "\000\002\137\005\000\002\137\003\000\002\035\003\000" +
    "\002\035\003\000\002\010\003\000\002\010\002\000\002" +
    "\130\004\000\002\130\002\000\002\134\004\000\002\134" +
    "\002\000\002\131\004\000\002\131\002\000\002\012\005" +
    "\000\002\012\003\000\002\132\004\000\002\132\002\000" +
    "\002\133\004\000\002\133\002\000\002\013\003\000\002" +
    "\013\003\000\002\011\003\000\002\011\003\000\002\011" +
    "\003\000\002\011\003\000\002\011\003\000\002\124\005" +
    "\000\002\127\003\000\002\127\003\000\002\127\003\000" +
    "\002\127\003\000\002\127\003\000\002\127\003\000\002" +
    "\127\003\000\002\127\003\000\002\113\020\000\002\113" +
    "\012\000\002\121\004\000\002\121\002\000\002\122\017" +
    "\000\002\122\011\000\002\123\012\000\002\123\004\000" +
    "\002\123\002\000\002\114\021\000\002\115\006\000\002" +
    "\115\005\000\002\116\003\000\002\116\003\000\002\117" +
    "\003\000\002\120\016\000\002\125\005\000\002\125\005" +
    "\000\002\125\005\000\002\125\005\000\002\125\005\000" +
    "\002\125\005\000\002\125\004\000\002\125\005\000\002" +
    "\125\005\000\002\125\004\000\002\125\005\000\002\125" +
    "\005\000\002\125\005\000\002\125\005\000\002\125\003" +
    "\000\002\125\005\000\002\126\003\000\002\135\004\000" +
    "\002\135\005\000\002\135\005\000\002\135\005\000\002" +
    "\135\005\000\002\135\003\000\002\135\005\000\002\136" +
    "\003\000\002\136\003\000\002\136\003\000\002\136\003" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u020e\000\004\154\004\001\002\000\004\004\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\006\156\uffd3\176\uffd3\001\002\000\006\156\011\176" +
    "\013\001\002\000\004\154\030\001\002\000\006\156\uffd4" +
    "\176\uffd4\001\002\000\006\034\014\035\015\001\002\000" +
    "\004\171\023\001\002\000\004\171\016\001\002\000\006" +
    "\212\020\213\021\001\002\000\004\177\022\001\002\000" +
    "\004\177\uffcd\001\002\000\004\177\uffcc\001\002\000\006" +
    "\156\uffd1\176\uffd1\001\002\000\004\207\024\001\002\000" +
    "\004\177\025\001\002\000\006\156\uffd2\176\uffd2\001\002" +
    "\000\004\002\000\001\002\000\004\154\u0206\001\002\000" +
    "\006\005\u01e4\024\036\001\002\000\004\154\034\001\002" +
    "\000\006\154\u01db\163\u01dd\001\002\000\004\154\u01d9\001" +
    "\002\000\006\010\035\024\036\001\002\000\006\156\uffca" +
    "\176\uffca\001\002\000\004\156\037\001\002\000\010\134" +
    "\uff7c\135\uff7c\163\uff7c\001\002\000\010\134\041\135\042" +
    "\163\044\001\002\000\004\174\356\001\002\000\004\174" +
    "\047\001\002\000\010\134\uff7d\135\uff7d\163\uff7d\001\002" +
    "\000\004\024\045\001\002\000\004\156\046\001\002\000" +
    "\006\154\uff7e\163\uff7e\001\002\000\004\175\050\001\002" +
    "\000\004\176\051\001\002\000\030\124\uff78\127\uff78\131" +
    "\uff78\136\uff78\137\uff78\140\uff78\141\uff78\142\uff78\177\uff78" +
    "\205\uff78\210\uff78\001\002\000\030\124\064\127\075\131" +
    "\057\136\072\137\060\140\065\141\056\142\066\177\055" +
    "\205\071\210\070\001\002\000\032\124\uff79\127\uff79\131" +
    "\uff79\136\uff79\137\uff79\140\uff79\141\uff79\142\uff79\177\uff79" +
    "\203\uff79\205\uff79\210\uff79\001\002\000\032\124\uff76\127" +
    "\uff76\131\uff76\136\uff76\137\uff76\140\uff76\141\uff76\142\uff76" +
    "\177\uff76\203\uff76\205\uff76\210\uff76\001\002\000\010\134" +
    "\uff7b\135\uff7b\163\uff7b\001\002\000\010\143\165\205\uff67" +
    "\210\uff67\001\002\000\004\174\336\001\002\000\010\143" +
    "\165\205\uff67\210\uff67\001\002\000\004\202\330\001\002" +
    "\000\032\124\uff75\127\uff75\131\uff75\136\uff75\137\uff75\140" +
    "\uff75\141\uff75\142\uff75\177\uff75\203\uff75\205\uff75\210\uff75" +
    "\001\002\000\004\202\327\001\002\000\004\174\217\001" +
    "\002\000\010\143\165\205\uff67\210\uff67\001\002\000\010" +
    "\143\165\205\uff67\210\uff67\001\002\000\032\124\uff73\127" +
    "\uff73\131\uff73\136\uff73\137\uff73\140\uff73\141\uff73\142\uff73" +
    "\177\uff73\203\uff73\205\uff73\210\uff73\001\002\000\012\171" +
    "\uff69\175\uff69\202\uff69\206\uff69\001\002\000\012\171\uff6a" +
    "\175\uff6a\202\uff6a\206\uff6a\001\002\000\010\143\165\205" +
    "\uff67\210\uff67\001\002\000\032\124\uff74\127\uff74\131\uff74" +
    "\136\uff74\137\uff74\140\uff74\141\uff74\142\uff74\177\uff74\203" +
    "\uff74\205\uff74\210\uff74\001\002\000\006\171\130\206\127" +
    "\001\002\000\004\174\077\001\002\000\010\171\uff6b\202" +
    "\uff6b\206\uff6b\001\002\000\010\136\100\205\071\210\070" +
    "\001\002\000\006\205\071\210\070\001\002\000\004\175" +
    "\106\001\002\000\004\171\103\001\002\000\004\144\104" +
    "\001\002\000\004\175\uff3c\001\002\000\004\175\uff3f\001" +
    "\002\000\004\130\107\001\002\000\004\174\110\001\002" +
    "\000\010\144\112\205\071\210\070\001\002\000\004\175" +
    "\114\001\002\000\004\175\uff3e\001\002\000\004\175\uff3d" +
    "\001\002\000\004\122\115\001\002\000\004\200\116\001" +
    "\002\000\004\203\117\001\002\000\030\124\uff78\127\uff78" +
    "\131\uff78\136\uff78\137\uff78\140\uff78\141\uff78\142\uff78\203" +
    "\uff78\205\uff78\210\uff78\001\002\000\030\124\064\127\075" +
    "\131\057\136\072\137\060\140\065\141\056\142\066\203" +
    "\121\205\071\210\070\001\002\000\004\201\122\001\002" +
    "\000\004\123\123\001\002\000\032\124\uff41\127\uff41\131" +
    "\uff41\136\uff41\137\uff41\140\uff41\141\uff41\142\uff41\177\uff41" +
    "\203\uff41\205\uff41\210\uff41\001\002\000\004\171\125\001" +
    "\002\000\004\144\104\001\002\000\004\175\uff40\001\002" +
    "\000\006\205\071\210\070\001\002\000\034\144\136\145" +
    "\131\146\133\147\137\150\134\151\140\165\145\174\146" +
    "\205\150\207\132\210\147\212\144\213\135\001\002\000" +
    "\036\152\uff21\153\uff21\154\uff21\155\uff21\156\uff21\157\uff21" +
    "\160\uff21\161\uff21\164\uff21\165\uff21\166\uff21\167\uff21\175" +
    "\uff21\202\uff21\001\002\000\004\202\uff4c\001\002\000\004" +
    "\202\uff50\001\002\000\004\202\uff51\001\002\000\004\202" +
    "\uff4d\001\002\000\036\152\uff22\153\uff22\154\uff22\155\uff22" +
    "\156\uff22\157\uff22\160\uff22\161\uff22\164\uff22\165\uff22\166" +
    "\uff22\167\uff22\175\uff22\202\uff22\001\002\000\004\202\uff4f" +
    "\001\002\000\004\202\uff4b\001\002\000\004\202\uff53\001" +
    "\002\000\014\164\155\165\152\166\153\167\156\202\uff52" +
    "\001\002\000\016\164\uff24\165\uff24\166\uff24\167\uff24\175" +
    "\uff24\202\uff24\001\002\000\004\202\uff4e\001\002\000\016" +
    "\144\136\145\131\165\145\174\146\205\150\210\147\001" +
    "\002\000\016\144\136\145\131\165\145\174\146\205\150" +
    "\210\147\001\002\000\036\152\uff1f\153\uff1f\154\uff1f\155" +
    "\uff1f\156\uff1f\157\uff1f\160\uff1f\161\uff1f\164\uff1f\165\uff1f" +
    "\166\uff1f\167\uff1f\175\uff1f\202\uff1f\001\002\000\036\152" +
    "\uff20\153\uff20\154\uff20\155\uff20\156\uff20\157\uff20\160\uff20" +
    "\161\uff20\164\uff20\165\uff20\166\uff20\167\uff20\175\uff20\202" +
    "\uff20\001\002\000\014\164\155\165\152\166\153\167\156" +
    "\175\154\001\002\000\016\144\136\145\131\165\145\174" +
    "\146\205\150\210\147\001\002\000\016\144\136\145\131" +
    "\165\145\174\146\205\150\210\147\001\002\000\016\164" +
    "\uff23\165\uff23\166\uff23\167\uff23\175\uff23\202\uff23\001\002" +
    "\000\016\144\136\145\131\165\145\174\146\205\150\210" +
    "\147\001\002\000\016\144\136\145\131\165\145\174\146" +
    "\205\150\210\147\001\002\000\016\164\uff25\165\uff25\166" +
    "\uff25\167\uff25\175\uff25\202\uff25\001\002\000\016\164\uff28" +
    "\165\uff28\166\153\167\156\175\uff28\202\uff28\001\002\000" +
    "\016\164\uff26\165\uff26\166\uff26\167\uff26\175\uff26\202\uff26" +
    "\001\002\000\016\164\uff27\165\uff27\166\153\167\156\175" +
    "\uff27\202\uff27\001\002\000\016\164\uff29\165\uff29\166\uff29" +
    "\167\uff29\175\uff29\202\uff29\001\002\000\010\171\uff6c\202" +
    "\uff6c\206\uff6c\001\002\000\006\205\uff68\210\uff68\001\002" +
    "\000\006\205\071\210\070\001\002\000\010\171\170\202" +
    "\uff65\206\127\001\002\000\016\144\136\145\131\165\145" +
    "\174\146\205\150\210\147\001\002\000\004\202\uff71\001" +
    "\002\000\014\164\155\165\152\166\153\167\156\202\uff66" +
    "\001\002\000\006\205\071\210\070\001\002\000\010\171" +
    "\176\202\uff61\206\127\001\002\000\004\202\uff6f\001\002" +
    "\000\014\151\202\205\203\207\201\212\200\213\204\001" +
    "\002\000\006\164\uff5f\202\uff5f\001\002\000\006\164\uff58" +
    "\202\uff58\001\002\000\006\164\uff55\202\uff55\001\002\000" +
    "\006\164\uff56\202\uff56\001\002\000\006\164\uff54\202\uff54" +
    "\001\002\000\006\164\uff57\202\uff57\001\002\000\006\164" +
    "\206\202\uff62\001\002\000\014\151\202\205\203\207\201" +
    "\212\200\213\204\001\002\000\006\164\uff60\202\uff60\001" +
    "\002\000\006\205\071\210\070\001\002\000\010\171\212" +
    "\202\uff5d\206\127\001\002\000\006\146\215\147\216\001" +
    "\002\000\004\202\uff6e\001\002\000\004\202\uff5e\001\002" +
    "\000\004\202\uff5a\001\002\000\004\202\uff59\001\002\000" +
    "\020\144\136\145\131\162\223\165\224\174\225\205\150" +
    "\210\147\001\002\000\034\152\uff2c\153\uff2c\154\uff2c\155" +
    "\uff2c\156\uff2c\157\uff2c\160\uff2c\161\uff2c\164\uff2c\165\uff2c" +
    "\166\uff2c\167\uff2c\175\uff2c\001\002\000\034\152\232\153" +
    "\237\154\235\155\243\156\230\157\233\160\242\161\227" +
    "\164\231\165\241\166\234\167\236\175\262\001\002\000" +
    "\034\152\uff2a\153\uff2a\154\uff2a\155\uff2a\156\uff2a\157\uff2a" +
    "\160\uff2a\161\uff2a\164\uff2a\165\uff2a\166\uff2a\167\uff2a\175" +
    "\uff2a\001\002\000\020\144\136\145\131\162\223\165\224" +
    "\174\225\205\150\210\147\001\002\000\020\144\136\145" +
    "\131\162\223\165\224\174\225\205\150\210\147\001\002" +
    "\000\020\144\136\145\131\162\223\165\224\174\225\205" +
    "\150\210\147\001\002\000\034\152\232\153\237\154\235" +
    "\155\243\156\230\157\233\160\242\161\227\164\231\165" +
    "\241\166\234\167\236\175\240\001\002\000\020\144\136" +
    "\145\131\162\223\165\224\174\225\205\150\210\147\001" +
    "\002\000\020\144\136\145\131\162\223\165\224\174\225" +
    "\205\150\210\147\001\002\000\020\144\136\145\131\162" +
    "\223\165\224\174\225\205\150\210\147\001\002\000\020" +
    "\144\136\145\131\162\223\165\224\174\225\205\150\210" +
    "\147\001\002\000\020\144\136\145\131\162\223\165\224" +
    "\174\225\205\150\210\147\001\002\000\020\144\136\145" +
    "\131\162\223\165\224\174\225\205\150\210\147\001\002" +
    "\000\020\144\136\145\131\162\223\165\224\174\225\205" +
    "\150\210\147\001\002\000\020\144\136\145\131\162\223" +
    "\165\224\174\225\205\150\210\147\001\002\000\020\144" +
    "\136\145\131\162\223\165\224\174\225\205\150\210\147" +
    "\001\002\000\034\152\uff2b\153\uff2b\154\uff2b\155\uff2b\156" +
    "\uff2b\157\uff2b\160\uff2b\161\uff2b\164\uff2b\165\uff2b\166\uff2b" +
    "\167\uff2b\175\uff2b\001\002\000\020\144\136\145\131\162" +
    "\223\165\224\174\225\205\150\210\147\001\002\000\020" +
    "\144\136\145\131\162\223\165\224\174\225\205\150\210" +
    "\147\001\002\000\020\144\136\145\131\162\223\165\224" +
    "\174\225\205\150\210\147\001\002\000\034\152\uff37\153" +
    "\uff37\154\uff37\155\uff37\156\uff37\157\uff37\160\242\161\227" +
    "\164\uff37\165\uff37\166\uff37\167\uff37\175\uff37\001\002\000" +
    "\034\152\uff32\153\uff32\154\uff32\155\uff32\156\uff32\157\uff32" +
    "\160\uff32\161\227\164\uff32\165\uff32\166\uff32\167\uff32\175" +
    "\uff32\001\002\000\034\152\232\153\237\154\235\155\243" +
    "\156\230\157\233\160\242\161\227\164\uff2f\165\uff2f\166" +
    "\234\167\236\175\uff2f\001\002\000\034\152\uff39\153\uff39" +
    "\154\uff39\155\uff39\156\uff39\157\uff39\160\242\161\227\164" +
    "\uff39\165\uff39\166\uff39\167\uff39\175\uff39\001\002\000\034" +
    "\152\232\153\237\154\235\155\243\156\230\157\233\160" +
    "\242\161\227\164\uff2d\165\uff2d\166\uff2d\167\uff2d\175\uff2d" +
    "\001\002\000\034\152\uff38\153\uff38\154\uff38\155\uff38\156" +
    "\uff38\157\uff38\160\242\161\227\164\uff38\165\uff38\166\uff38" +
    "\167\uff38\175\uff38\001\002\000\034\152\232\153\237\154" +
    "\235\155\243\156\230\157\233\160\242\161\227\164\uff2e" +
    "\165\uff2e\166\uff2e\167\uff2e\175\uff2e\001\002\000\034\152" +
    "\uff35\153\uff35\154\uff35\155\uff35\156\uff35\157\uff35\160\242" +
    "\161\227\164\uff35\165\uff35\166\uff35\167\uff35\175\uff35\001" +
    "\002\000\034\152\uff3a\153\uff3a\154\uff3a\155\uff3a\156\uff3a" +
    "\157\uff3a\160\242\161\227\164\uff3a\165\uff3a\166\uff3a\167" +
    "\uff3a\175\uff3a\001\002\000\034\152\232\153\237\154\235" +
    "\155\243\156\230\157\233\160\242\161\227\164\uff30\165" +
    "\uff30\166\234\167\236\175\uff30\001\002\000\034\152\uff36" +
    "\153\uff36\154\uff36\155\uff36\156\uff36\157\uff36\160\242\161" +
    "\227\164\uff36\165\uff36\166\uff36\167\uff36\175\uff36\001\002" +
    "\000\034\152\uff33\153\uff33\154\uff33\155\uff33\156\uff33\157" +
    "\uff33\160\uff33\161\uff33\164\uff33\165\uff33\166\uff33\167\uff33" +
    "\175\uff33\001\002\000\034\152\232\153\237\154\235\155" +
    "\243\156\230\157\233\160\242\161\227\164\uff31\165\uff31" +
    "\166\234\167\236\175\uff31\001\002\000\034\152\uff34\153" +
    "\uff34\154\uff34\155\uff34\156\uff34\157\uff34\160\uff34\161\uff34" +
    "\164\uff34\165\uff34\166\uff34\167\uff34\175\uff34\001\002\000" +
    "\004\125\263\001\002\000\010\122\264\205\071\210\070" +
    "\001\002\000\004\200\317\001\002\000\034\124\uff47\126" +
    "\uff47\127\uff47\131\uff47\136\uff47\137\uff47\140\uff47\141\uff47" +
    "\142\uff47\177\uff47\203\uff47\205\uff47\210\uff47\001\002\000" +
    "\034\124\uff42\126\270\127\uff42\131\uff42\136\uff42\137\uff42" +
    "\140\uff42\141\uff42\142\uff42\177\uff42\203\uff42\205\uff42\210" +
    "\uff42\001\002\000\034\124\uff48\126\uff48\127\uff48\131\uff48" +
    "\136\uff48\137\uff48\140\uff48\141\uff48\142\uff48\177\uff48\203" +
    "\uff48\205\uff48\210\uff48\001\002\000\012\122\272\124\274" +
    "\205\071\210\070\001\002\000\032\124\uff49\127\uff49\131" +
    "\uff49\136\uff49\137\uff49\140\uff49\141\uff49\142\uff49\177\uff49" +
    "\203\uff49\205\uff49\210\uff49\001\002\000\004\200\311\001" +
    "\002\000\032\124\uff43\127\uff43\131\uff43\136\uff43\137\uff43" +
    "\140\uff43\141\uff43\142\uff43\177\uff43\203\uff43\205\uff43\210" +
    "\uff43\001\002\000\004\174\275\001\002\000\020\144\136" +
    "\145\131\162\223\165\224\174\225\205\150\210\147\001" +
    "\002\000\034\152\232\153\237\154\235\155\243\156\230" +
    "\157\233\160\242\161\227\164\231\165\241\166\234\167" +
    "\236\175\277\001\002\000\004\125\300\001\002\000\010" +
    "\122\301\205\071\210\070\001\002\000\004\200\303\001" +
    "\002\000\034\124\uff45\126\uff45\127\uff45\131\uff45\136\uff45" +
    "\137\uff45\140\uff45\141\uff45\142\uff45\177\uff45\203\uff45\205" +
    "\uff45\210\uff45\001\002\000\004\203\304\001\002\000\030" +
    "\124\uff78\127\uff78\131\uff78\136\uff78\137\uff78\140\uff78\141" +
    "\uff78\142\uff78\203\uff78\205\uff78\210\uff78\001\002\000\030" +
    "\124\064\127\075\131\057\136\072\137\060\140\065\141" +
    "\056\142\066\203\306\205\071\210\070\001\002\000\004" +
    "\201\307\001\002\000\004\123\310\001\002\000\034\124" +
    "\uff46\126\uff46\127\uff46\131\uff46\136\uff46\137\uff46\140\uff46" +
    "\141\uff46\142\uff46\177\uff46\203\uff46\205\uff46\210\uff46\001" +
    "\002\000\004\203\312\001\002\000\030\124\uff78\127\uff78" +
    "\131\uff78\136\uff78\137\uff78\140\uff78\141\uff78\142\uff78\203" +
    "\uff78\205\uff78\210\uff78\001\002\000\030\124\064\127\075" +
    "\131\057\136\072\137\060\140\065\141\056\142\066\203" +
    "\314\205\071\210\070\001\002\000\004\201\315\001\002" +
    "\000\004\123\316\001\002\000\032\124\uff44\127\uff44\131" +
    "\uff44\136\uff44\137\uff44\140\uff44\141\uff44\142\uff44\177\uff44" +
    "\203\uff44\205\uff44\210\uff44\001\002\000\004\203\320\001" +
    "\002\000\030\124\uff78\127\uff78\131\uff78\136\uff78\137\uff78" +
    "\140\uff78\141\uff78\142\uff78\203\uff78\205\uff78\210\uff78\001" +
    "\002\000\030\124\064\127\075\131\057\136\072\137\060" +
    "\140\065\141\056\142\066\203\322\205\071\210\070\001" +
    "\002\000\004\201\323\001\002\000\004\123\324\001\002" +
    "\000\034\124\uff47\126\uff47\127\uff47\131\uff47\136\uff47\137" +
    "\uff47\140\uff47\141\uff47\142\uff47\177\uff47\203\uff47\205\uff47" +
    "\210\uff47\001\002\000\034\124\uff42\126\270\127\uff42\131" +
    "\uff42\136\uff42\137\uff42\140\uff42\141\uff42\142\uff42\177\uff42" +
    "\203\uff42\205\uff42\210\uff42\001\002\000\032\124\uff4a\127" +
    "\uff4a\131\uff4a\136\uff4a\137\uff4a\140\uff4a\141\uff4a\142\uff4a" +
    "\177\uff4a\203\uff4a\205\uff4a\210\uff4a\001\002\000\032\124" +
    "\uff77\127\uff77\131\uff77\136\uff77\137\uff77\140\uff77\141\uff77" +
    "\142\uff77\177\uff77\203\uff77\205\uff77\210\uff77\001\002\000" +
    "\034\124\uff72\126\uff72\127\uff72\131\uff72\136\uff72\137\uff72" +
    "\140\uff72\141\uff72\142\uff72\177\uff72\203\uff72\205\uff72\210" +
    "\uff72\001\002\000\006\205\071\210\070\001\002\000\010" +
    "\171\333\202\uff63\206\127\001\002\000\004\145\335\001" +
    "\002\000\004\202\uff70\001\002\000\004\202\uff64\001\002" +
    "\000\020\144\136\145\131\162\223\165\224\174\225\205" +
    "\150\210\147\001\002\000\034\152\232\153\237\154\235" +
    "\155\243\156\230\157\233\160\242\161\227\164\231\165" +
    "\241\166\234\167\236\175\340\001\002\000\004\132\341" +
    "\001\002\000\004\122\342\001\002\000\004\200\343\001" +
    "\002\000\004\203\344\001\002\000\030\124\uff78\127\uff78" +
    "\131\uff78\136\uff78\137\uff78\140\uff78\141\uff78\142\uff78\203" +
    "\uff78\205\uff78\210\uff78\001\002\000\030\124\064\127\075" +
    "\131\057\136\072\137\060\140\065\141\056\142\066\203" +
    "\346\205\071\210\070\001\002\000\004\201\347\001\002" +
    "\000\004\123\350\001\002\000\032\124\uff3b\127\uff3b\131" +
    "\uff3b\136\uff3b\137\uff3b\140\uff3b\141\uff3b\142\uff3b\177\uff3b" +
    "\203\uff3b\205\uff3b\210\uff3b\001\002\000\006\205\071\210" +
    "\070\001\002\000\010\171\353\202\uff5b\206\127\001\002" +
    "\000\004\150\355\001\002\000\004\202\uff6d\001\002\000" +
    "\004\202\uff5c\001\002\000\004\175\357\001\002\000\004" +
    "\176\360\001\002\000\030\124\uff78\127\uff78\131\uff78\136" +
    "\uff78\137\uff78\140\uff78\141\uff78\142\uff78\177\uff78\205\uff78" +
    "\210\uff78\001\002\000\030\124\064\127\075\131\057\136" +
    "\072\137\060\140\065\141\056\142\066\177\362\205\071" +
    "\210\070\001\002\000\010\134\uff7a\135\uff7a\163\uff7a\001" +
    "\002\000\006\156\364\176\366\001\002\000\004\154\u010d" +
    "\001\002\000\006\156\uffcb\176\uffcb\001\002\000\004\026" +
    "\367\001\002\000\004\171\370\001\002\000\044\046\375" +
    "\047\376\050\374\051\u0100\052\377\053\u0102\054\u0109\055" +
    "\373\056\u0101\057\u0104\060\371\061\u0108\062\u010a\063\u0103" +
    "\064\u0105\065\372\066\u0106\001\002\000\004\177\uff92\001" +
    "\002\000\004\177\uff8d\001\002\000\004\177\uff95\001\002" +
    "\000\004\177\uff9a\001\002\000\004\177\uff9c\001\002\000" +
    "\004\177\uff9b\001\002\000\004\177\uff98\001\002\000\004" +
    "\177\uff99\001\002\000\004\177\uff94\001\002\000\004\177" +
    "\uff97\001\002\000\004\177\uff8f\001\002\000\004\177\uff93" +
    "\001\002\000\004\177\uff8e\001\002\000\004\177\uff8c\001" +
    "\002\000\004\177\u010b\001\002\000\004\177\uff91\001\002" +
    "\000\004\177\uff96\001\002\000\004\177\uff90\001\002\000" +
    "\006\156\uffc9\176\uffc9\001\002\000\006\154\u010d\163\u01d5" +
    "\001\002\000\030\011\u0116\012\u0111\013\u0118\014\u0115\016" +
    "\u0114\017\u0119\020\u0110\021\u010f\022\u0117\023\u0113\024\u0112" +
    "\001\002\000\006\154\uffea\163\uffea\001\002\000\006\156" +
    "\uffa9\176\uffa9\001\002\000\004\156\u01cb\001\002\000\006" +
    "\156\uffc4\176\uffc4\001\002\000\004\156\u01b9\001\002\000" +
    "\006\156\uffa3\176\uffa3\001\002\000\006\156\uffb5\176\uffb5" +
    "\001\002\000\006\156\uffb8\176\uffb8\001\002\000\006\156" +
    "\uffc7\176\uffc7\001\002\000\006\156\uffa6\176\uffa6\001\002" +
    "\000\006\156\uffc0\176\uffc0\001\002\000\006\156\uffb0\176" +
    "\uffb0\001\002\000\006\156\u011b\176\u011d\001\002\000\004" +
    "\163\u0134\001\002\000\006\156\uffb1\176\uffb1\001\002\000" +
    "\014\034\u011e\041\u0121\042\u0120\043\u0122\044\u011f\001\002" +
    "\000\004\171\u0131\001\002\000\004\171\u012e\001\002\000" +
    "\004\171\u012b\001\002\000\004\171\u0128\001\002\000\004" +
    "\171\u0123\001\002\000\006\067\u0126\070\u0125\001\002\000" +
    "\004\177\u0127\001\002\000\004\177\uff7f\001\002\000\004" +
    "\177\uff80\001\002\000\006\156\uffad\176\uffad\001\002\000" +
    "\004\213\u0129\001\002\000\004\177\u012a\001\002\000\006" +
    "\156\uffaf\176\uffaf\001\002\000\006\067\u0126\070\u0125\001" +
    "\002\000\004\177\u012d\001\002\000\006\156\uffae\176\uffae" +
    "\001\002\000\006\212\020\213\021\001\002\000\004\177" +
    "\u0130\001\002\000\006\156\uffac\176\uffac\001\002\000\004" +
    "\207\u0132\001\002\000\004\177\u0133\001\002\000\006\156" +
    "\uffab\176\uffab\001\002\000\004\017\u0135\001\002\000\004" +
    "\156\u0136\001\002\000\006\154\uffe4\163\uffe4\001\002\000" +
    "\006\156\u0138\176\u013a\001\002\000\010\163\uffda\205\uffda" +
    "\210\uffda\001\002\000\006\156\uffc1\176\uffc1\001\002\000" +
    "\016\030\u013f\031\u0140\032\u013e\034\u013b\036\u013d\037\u013c" +
    "\001\002\000\004\171\u0159\001\002\000\004\171\u0156\001" +
    "\002\000\004\171\u0153\001\002\000\004\171\u014c\001\002" +
    "\000\004\171\u0149\001\002\000\004\171\u0141\001\002\000" +
    "\014\071\u0145\072\u0146\073\u0143\074\u0144\075\u0147\001\002" +
    "\000\004\177\u0148\001\002\000\004\177\uff89\001\002\000" +
    "\004\177\uff88\001\002\000\004\177\uff8b\001\002\000\004" +
    "\177\uff8a\001\002\000\004\177\uff87\001\002\000\006\156" +
    "\uffbe\176\uffbe\001\002\000\004\067\u014a\001\002\000\004" +
    "\177\u014b\001\002\000\006\156\uffbf\176\uffbf\001\002\000" +
    "\012\076\u014d\077\u014f\100\u0150\101\u0151\001\002\000\004" +
    "\177\uff86\001\002\000\004\177\u0152\001\002\000\004\177" +
    "\uff85\001\002\000\004\177\uff84\001\002\000\004\177\uff83" +
    "\001\002\000\006\156\uffbd\176\uffbd\001\002\000\004\214" +
    "\u0154\001\002\000\004\177\u0155\001\002\000\006\156\uffbb" +
    "\176\uffbb\001\002\000\004\214\u0157\001\002\000\004\177" +
    "\u0158\001\002\000\006\156\uffba\176\uffba\001\002\000\004" +
    "\207\u015a\001\002\000\004\177\u015b\001\002\000\006\156" +
    "\uffbc\176\uffbc\001\002\000\010\163\u0160\205\u015f\210\u015e" +
    "\001\002\000\010\163\uffdb\205\uffdb\210\uffdb\001\002\000" +
    "\010\163\uffed\205\uffed\210\uffed\001\002\000\010\163\uffec" +
    "\205\uffec\210\uffec\001\002\000\004\013\u0161\001\002\000" +
    "\004\156\u0162\001\002\000\006\154\uffe7\163\uffe7\001\002" +
    "\000\006\156\u0164\176\u0167\001\002\000\010\163\uffda\205" +
    "\uffda\210\uffda\001\002\000\006\156\uffa5\176\uffa5\001\002" +
    "\000\006\156\uffa7\176\uffa7\001\002\000\014\027\u0169\030" +
    "\u016b\031\u016c\032\u016a\034\u0168\001\002\000\004\171\u0179" +
    "\001\002\000\004\171\u0176\001\002\000\004\171\u0173\001" +
    "\002\000\004\171\u0170\001\002\000\004\171\u016d\001\002" +
    "\000\014\071\u0145\072\u0146\073\u0143\074\u0144\075\u0147\001" +
    "\002\000\004\177\u016f\001\002\000\006\156\uffa0\176\uffa0" +
    "\001\002\000\004\067\u0171\001\002\000\004\177\u0172\001" +
    "\002\000\006\156\uffa1\176\uffa1\001\002\000\012\076\u014d" +
    "\077\u014f\100\u0150\101\u0151\001\002\000\004\177\u0175\001" +
    "\002\000\006\156\uff9f\176\uff9f\001\002\000\044\046\375" +
    "\047\376\050\374\051\u0100\052\377\053\u0102\054\u0109\055" +
    "\373\056\u0101\057\u0104\060\371\061\u0108\062\u010a\063\u0103" +
    "\064\u0105\065\372\066\u0106\001\002\000\004\177\u0178\001" +
    "\002\000\006\156\uff9d\176\uff9d\001\002\000\004\207\u017a" +
    "\001\002\000\004\177\u017b\001\002\000\006\156\uff9e\176" +
    "\uff9e\001\002\000\010\163\u017d\205\u015f\210\u015e\001\002" +
    "\000\004\022\u017e\001\002\000\004\156\u017f\001\002\000" +
    "\006\154\uffe1\163\uffe1\001\002\000\006\156\u0181\176\u0167" +
    "\001\002\000\010\163\uffda\205\uffda\210\uffda\001\002\000" +
    "\006\156\uffc8\176\uffc8\001\002\000\006\156\uffc6\176\uffc6" +
    "\001\002\000\010\163\u0185\205\u015f\210\u015e\001\002\000" +
    "\004\011\u0186\001\002\000\004\156\u0187\001\002\000\006" +
    "\154\uffe9\163\uffe9\001\002\000\006\156\u0189\176\u0167\001" +
    "\002\000\004\154\u018d\001\002\000\006\156\uffb7\176\uffb7" +
    "\001\002\000\006\156\uffb9\176\uffb9\001\002\000\006\154" +
    "\u018d\163\u0196\001\002\000\004\015\u018f\001\002\000\006" +
    "\154\uffdd\163\uffdd\001\002\000\004\156\u0190\001\002\000" +
    "\010\163\uffda\205\uffda\210\uffda\001\002\000\010\163\u0192" +
    "\205\u015f\210\u015e\001\002\000\004\015\u0193\001\002\000" +
    "\004\156\u0194\001\002\000\006\154\uffdc\163\uffdc\001\002" +
    "\000\006\154\uffde\163\uffde\001\002\000\004\014\u0197\001" +
    "\002\000\004\156\u0198\001\002\000\006\154\uffe6\163\uffe6" +
    "\001\002\000\006\156\u019a\176\u019d\001\002\000\006\154" +
    "\uffd8\163\uffd8\001\002\000\006\156\uffb4\176\uffb4\001\002" +
    "\000\006\156\uffb6\176\uffb6\001\002\000\020\026\u019f\027" +
    "\u0169\030\u016b\031\u016c\032\u016a\034\u0168\040\u019e\001\002" +
    "\000\004\171\u01a3\001\002\000\004\171\u01a0\001\002\000" +
    "\044\046\375\047\376\050\374\051\u0100\052\377\053\u0102" +
    "\054\u0109\055\373\056\u0101\057\u0104\060\371\061\u0108\062" +
    "\u010a\063\u0103\064\u0105\065\372\066\u0106\001\002\000\004" +
    "\177\u01a2\001\002\000\006\156\uffb2\176\uffb2\001\002\000" +
    "\006\106\u01a5\107\u01a4\001\002\000\004\177\uff81\001\002" +
    "\000\004\177\uff82\001\002\000\004\177\u01a7\001\002\000" +
    "\006\156\uffb3\176\uffb3\001\002\000\006\154\u010d\163\u01aa" +
    "\001\002\000\006\154\uffd9\163\uffd9\001\002\000\004\016" +
    "\u01ab\001\002\000\004\156\u01ac\001\002\000\006\154\uffe5" +
    "\163\uffe5\001\002\000\006\156\u01ae\176\u0167\001\002\000" +
    "\012\154\u01b3\163\uffda\205\uffda\210\uffda\001\002\000\006" +
    "\156\uffa2\176\uffa2\001\002\000\006\156\uffa4\176\uffa4\001" +
    "\002\000\004\163\u01b6\001\002\000\010\163\uffd6\205\u015f" +
    "\210\u015e\001\002\000\004\020\u01b4\001\002\000\004\156" +
    "\u01b5\001\002\000\004\163\uffd5\001\002\000\004\023\u01b7" +
    "\001\002\000\004\156\u01b8\001\002\000\006\154\uffe0\163" +
    "\uffe0\001\002\000\010\134\uff7c\135\uff7c\163\uff7c\001\002" +
    "\000\010\134\041\135\042\163\u01bb\001\002\000\004\024" +
    "\u01bc\001\002\000\004\156\u01bd\001\002\000\006\154\uffdf" +
    "\163\uffdf\001\002\000\006\156\u01c0\176\u01c2\001\002\000" +
    "\006\156\uffc5\176\uffc5\001\002\000\010\163\uffda\205\uffda" +
    "\210\uffda\001\002\000\006\156\uffc2\176\uffc2\001\002\000" +
    "\016\027\u0169\030\u016b\031\u016c\032\u016a\033\u01c3\034\u0168" +
    "\001\002\000\004\171\u01c4\001\002\000\002\001\002\000" +
    "\004\177\u01c6\001\002\000\006\156\uffc3\176\uffc3\001\002" +
    "\000\010\163\u01c8\205\u015f\210\u015e\001\002\000\004\012" +
    "\u01c9\001\002\000\004\156\u01ca\001\002\000\006\154\uffe8" +
    "\163\uffe8\001\002\000\006\154\uffe3\163\uffe3\001\002\000" +
    "\006\156\u01cd\176\u0167\001\002\000\010\163\uffda\205\uffda" +
    "\210\uffda\001\002\000\006\156\uffa8\176\uffa8\001\002\000" +
    "\006\156\uffaa\176\uffaa\001\002\000\010\163\u01d1\205\u015f" +
    "\210\u015e\001\002\000\004\021\u01d2\001\002\000\004\156" +
    "\u01d3\001\002\000\006\154\uffe2\163\uffe2\001\002\000\006" +
    "\154\uffeb\163\uffeb\001\002\000\004\010\u01d6\001\002\000" +
    "\004\156\u01d7\001\002\000\006\154\ufff5\163\ufff5\001\002" +
    "\000\006\154\u01db\163\u01dd\001\002\000\004\010\035\001" +
    "\002\000\004\163\u01dd\001\002\000\004\024\036\001\002" +
    "\000\004\002\ufffd\001\002\000\004\004\u01de\001\002\000" +
    "\004\156\u01df\001\002\000\004\002\ufff7\001\002\000\004" +
    "\002\ufff9\001\002\000\004\163\u01dd\001\002\000\004\002" +
    "\uffff\001\002\000\004\002\ufffc\001\002\000\004\156\u01e5" +
    "\001\002\000\004\154\u01e7\001\002\000\006\154\u01e7\163" +
    "\u0203\001\002\000\010\006\u01ea\007\u01e9\024\u01eb\001\002" +
    "\000\006\154\ufff3\163\ufff3\001\002\000\006\156\uffcf\176" +
    "\uffcf\001\002\000\004\156\u01f1\001\002\000\004\156\u01ec" +
    "\001\002\000\010\134\uff7c\135\uff7c\163\uff7c\001\002\000" +
    "\010\134\041\135\042\163\u01ee\001\002\000\004\024\u01ef" +
    "\001\002\000\004\156\u01f0\001\002\000\006\154\ufff0\163" +
    "\ufff0\001\002\000\010\163\uffee\205\uffee\210\uffee\001\002" +
    "\000\010\163\u01f4\205\u015f\210\u015e\001\002\000\010\163" +
    "\uffef\205\uffef\210\uffef\001\002\000\004\006\u01f5\001\002" +
    "\000\004\156\u01f6\001\002\000\006\154\ufff1\163\ufff1\001" +
    "\002\000\006\156\u01f8\176\u01fa\001\002\000\004\163\u01ff" +
    "\001\002\000\006\156\uffd0\176\uffd0\001\002\000\004\025" +
    "\u01fb\001\002\000\004\171\u01fc\001\002\000\004\213\u01fd" +
    "\001\002\000\004\177\u01fe\001\002\000\006\156\uffce\176" +
    "\uffce\001\002\000\004\007\u0200\001\002\000\004\156\u0201" +
    "\001\002\000\006\154\ufff2\163\ufff2\001\002\000\006\154" +
    "\ufff4\163\ufff4\001\002\000\004\005\u0204\001\002\000\004" +
    "\156\u0205\001\002\000\004\154\ufff6\001\002\000\004\005" +
    "\u01e4\001\002\000\004\154\034\001\002\000\006\154\u01db" +
    "\163\u01dd\001\002\000\004\154\u01d9\001\002\000\006\154" +
    "\u01db\163\u01dd\001\002\000\004\163\u01dd\001\002\000\004" +
    "\002\ufffb\001\002\000\004\002\ufff8\001\002\000\004\163" +
    "\u01dd\001\002\000\004\002\ufffe\001\002\000\004\002\ufffa" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u020e\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\053\007\001\001" +
    "\000\004\054\011\001\001\000\010\003\030\005\026\014" +
    "\025\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\016\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u0206\001\001\000\002" +
    "\001\001\000\006\004\031\005\032\001\001\000\006\005" +
    "\u01e0\052\u01e1\001\001\000\004\004\u01d7\001\001\000\002" +
    "\001\001\000\004\057\362\001\001\000\002\001\001\000" +
    "\004\051\037\001\001\000\004\106\042\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\103\051\001\001\000\024\007" +
    "\062\035\075\104\052\105\053\113\061\114\072\120\066" +
    "\124\060\137\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\350\001\001\000\002" +
    "\001\001\000\004\010\330\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\207\001\001\000\004\010\172\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\165" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\035\101\115\100\001\001" +
    "\000\004\035\123\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\117\104\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\035" +
    "\112\116\110\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\103\117\001\001\000\024\007\062" +
    "\035\075\104\052\105\053\113\061\114\072\120\066\124" +
    "\060\137\073\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\117\125\001" +
    "\001\000\002\001\001\000\004\035\163\001\001\000\010" +
    "\127\140\135\141\136\142\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\135\162\136\142\001\001\000" +
    "\006\135\150\136\142\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\135\161\136\142\001" +
    "\001\000\006\135\160\136\142\001\001\000\002\001\001" +
    "\000\006\135\157\136\142\001\001\000\006\135\156\136" +
    "\142\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\035\075\137\166\001\001" +
    "\000\004\130\170\001\001\000\006\135\171\136\142\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\035\075" +
    "\137\173\001\001\000\004\131\174\001\001\000\002\001" +
    "\001\000\006\011\176\012\204\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\206\001\001\000\002\001\001\000\006\035\075\137" +
    "\210\001\001\000\004\132\212\001\001\000\004\013\213" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\125\220\126\217\136\221" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\125\260\126\217\136\221\001\001\000\010" +
    "\125\257\126\217\136\221\001\001\000\010\125\225\126" +
    "\217\136\221\001\001\000\002\001\001\000\010\125\256" +
    "\126\217\136\221\001\001\000\010\125\255\126\217\136" +
    "\221\001\001\000\010\125\254\126\217\136\221\001\001" +
    "\000\010\125\253\126\217\136\221\001\001\000\010\125" +
    "\252\126\217\136\221\001\001\000\010\125\251\126\217" +
    "\136\221\001\001\000\010\125\250\126\217\136\221\001" +
    "\001\000\010\125\247\126\217\136\221\001\001\000\010" +
    "\125\246\126\217\136\221\001\001\000\002\001\001\000" +
    "\010\125\245\126\217\136\221\001\001\000\010\125\244" +
    "\126\217\136\221\001\001\000\010\125\243\126\217\136" +
    "\221\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\035\075\105\264\124\060\137\073\001\001\000\002\001" +
    "\001\000\004\121\265\001\001\000\006\122\266\123\270" +
    "\001\001\000\002\001\001\000\012\035\075\105\272\124" +
    "\060\137\073\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\125\275\126" +
    "\217\136\221\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\035\075\105\301\124\060\137\073\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\103\304\001\001\000\024\007\062\035\075\104\052\105" +
    "\053\113\061\114\072\120\066\124\060\137\073\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\103\312\001\001\000\024\007\062" +
    "\035\075\104\052\105\053\113\061\114\072\120\066\124" +
    "\060\137\073\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\103\320\001" +
    "\001\000\024\007\062\035\075\104\052\105\053\113\061" +
    "\114\072\120\066\124\060\137\073\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\121\324\001\001\000\006" +
    "\122\266\123\325\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\035\075\137\331\001\001" +
    "\000\004\134\333\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\125\336\126\217\136\221" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\103\344" +
    "\001\001\000\024\007\062\035\075\104\052\105\053\113" +
    "\061\114\072\120\066\124\060\137\073\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\035" +
    "\075\137\351\001\001\000\004\133\353\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\103\360\001\001\000\024" +
    "\007\062\035\075\104\052\105\053\113\061\114\072\120" +
    "\066\124\060\137\073\001\001\000\002\001\001\000\004" +
    "\060\364\001\001\000\006\016\u010b\021\u010d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\026\u0106\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\021\u01d3\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\075\u01cb\001\001\000\002\001\001" +
    "\000\004\063\u01bd\001\001\000\002\001\001\000\004\101" +
    "\u01ac\001\001\000\004\071\u0198\001\001\000\004\067\u0187" +
    "\001\001\000\004\061\u017f\001\001\000\004\077\u0162\001" +
    "\001\000\004\065\u0136\001\001\000\004\073\u0119\001\001" +
    "\000\004\074\u011b\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\032\u0123\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\032\u012b\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\024\u012e\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\066\u0138\001\001" +
    "\000\004\050\u015b\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\u0141\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\030\u014d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\023\u015c\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\033\u0164\100\u0165\001\001\000\004\050\u017b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\027\u016d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\030\u0173\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\026\u0176\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\023\u015c\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\033\u0182\062\u0181\001\001\000\004\050\u0183\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\023\u015c\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\033\u0189\070\u018a\001\001\000\006\022\u018d\041\u018b" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\022" +
    "\u0194\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\050\u0190\001\001\000\004\023\u015c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\033\u019a\072\u019b\001\001\000\004" +
    "\042\u01a7\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\026\u01a0\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\u01a5\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\021\u01a8\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\033\u01ae\102\u01af\001\001\000" +
    "\006\047\u01b0\050\u01b1\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\023\u015c\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\051" +
    "\u01b9\001\001\000\004\106\042\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\033\u01c0\064" +
    "\u01be\001\001\000\002\001\001\000\004\050\u01c6\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\u01c4\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\023\u015c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\033\u01cd" +
    "\076\u01ce\001\001\000\004\050\u01cf\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\023\u015c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\005\u01d9\052\u01db\001\001\000\002\001\001\000" +
    "\004\052\u01df\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\052\u01e2\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\u01e5\020" +
    "\u01e7\001\001\000\004\020\u0201\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\055\u01f6\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\051\u01ec\001\001\000\004" +
    "\106\042\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\u01f1\001\001\000\004\023\u01f2" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\056\u01f8\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\004\u0207\005\u0208\001" +
    "\001\000\006\005\u020d\052\u020e\001\001\000\004\004\u0209" +
    "\001\001\000\006\005\u020a\052\u020b\001\001\000\004\052" +
    "\u020c\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\052\u020f\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$EtiquetadoParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$EtiquetadoParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$EtiquetadoParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public EtiquetadoParser(EtiquetadoLexer lexer) {
        super(lexer);
    }
    public void report_error(String message, Object info) {
        System.out.println("reporterror");;
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal " + info);
    }
    @Override
    public void syntax_error(Symbol s) {
        System.out.println("linea: " + s.left + "   columna: " + s.right + "   token: " + symbl_name_from_id(s.sym) + "     texto: " + s.value);
    }
    protected int error_sync_size() {
        return 1;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$EtiquetadoParser$actions {
  private final EtiquetadoParser parser;

  /** Constructor */
  CUP$EtiquetadoParser$actions(EtiquetadoParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action_part00000000(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$EtiquetadoParser$result;

      /* select the action based on the action number */
      switch (CUP$EtiquetadoParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		RESULT = start_val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$EtiquetadoParser$parser.done_parsing();
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= MENOR_QUE GCIC cuerpo_parametros_gcic MAYOR_QUE cuerpo_gcic 
            {
              Object RESULT =null;
		System.out.println("Se ha llegado al final del reconocimiento");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // cuerpo_gcic ::= cabecera cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // cuerpo_gcic ::= scripting cabecera cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // cuerpo_gcic ::= cabecera scripting cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // cuerpo_gcic ::= cabecera cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // cuerpo_gcic ::= scripting cabecera scripting cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // cuerpo_gcic ::= scripting cabecera cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // cuerpo_gcic ::= cabecera scripting cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // cuerpo_gcic ::= scripting cabecera scripting cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // cierre_gcic ::= MENOR_CIERRE GCIC MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_gcic",40, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // cabecera ::= MENOR_QUE HEAD MAYOR_QUE cuerpo_cabecera MENOR_CIERRE HEAD MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cabecera",1, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // cuerpo ::= MENOR_QUE BODY cuerpo_parametros_body MAYOR_QUE cuerpo_cuerpo MENOR_CIERRE BODY MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo",2, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // cuerpo_cabecera ::= cuerpo_cabecera etiquetas_cabecera 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // cuerpo_cabecera ::= etiquetas_cabecera 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // etiquetas_cabecera ::= MENOR_QUE LINK cuerpo_parametros_link MAYOR_QUE MENOR_CIERRE LINK MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // etiquetas_cabecera ::= MENOR_QUE TITLE MAYOR_QUE cuerpo_title MENOR_CIERRE TITLE MAYOR_QUE 
            {
              Object RESULT =null;
		int ctleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)).left;
		int ctright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)).right;
		Object ct = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)).value;
		System.out.println("El titulo es: " + ct.toString().trim());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // etiquetas_cabecera ::= MENOR_QUE SCRIPTING MAYOR_QUE cuerpo_scripting MENOR_CIERRE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // cuerpo_title ::= cuerpo_title texto 
            {
              Object RESULT =null;
		int ctleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int ctright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object ct = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT= ct.toString() + " " + ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_title",13, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // cuerpo_title ::= 
            {
              Object RESULT =null;
		RESULT="";
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_title",13, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // texto ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto",17, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // texto ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto",17, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // cuerpo_cuerpo ::= cuerpo_cuerpo etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // cuerpo_cuerpo ::= etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // etiquetas_cuerpo ::= MENOR_QUE SPAM cuerpo_parametros_spam MAYOR_QUE cuerpo_texto MENOR_CIERRE SPAM MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // etiquetas_cuerpo ::= MENOR_QUE INPUT cuerpo_parametros_input MAYOR_QUE cuerpo_texto MENOR_CIERRE INPUT MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // etiquetas_cuerpo ::= MENOR_QUE TEXTAREA cuerpo_parametros_textarea MAYOR_QUE cuerpo_texto MENOR_CIERRE TEXTAREA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // etiquetas_cuerpo ::= MENOR_QUE SELECT cuerpo_parametros_select MAYOR_QUE cuerpo_select MENOR_CIERRE SELECT MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // etiquetas_cuerpo ::= MENOR_QUE DIV cuerpo_parametros_div MAYOR_QUE cuerpo_div MENOR_CIERRE DIV MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // etiquetas_cuerpo ::= MENOR_QUE IMG cuerpo_parametros_img MAYOR_QUE MENOR_CIERRE IMG MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // etiquetas_cuerpo ::= MENOR_QUE BR MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // etiquetas_cuerpo ::= MENOR_QUE BUTTON cuerpo_parametros_button MAYOR_QUE cuerpo_texto MENOR_CIERRE BUTTON MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // etiquetas_cuerpo ::= MENOR_QUE H1 cuerpo_parametros_h1 MAYOR_QUE cuerpo_texto MENOR_CIERRE H1 MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // etiquetas_cuerpo ::= MENOR_QUE P cuerpo_parametros_p MAYOR_QUE cuerpo_p MENOR_CIERRE P MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // etiquetas_cuerpo ::= MENOR_QUE SCRIPTING MAYOR_QUE cuerpo_scripting MENOR_CIERRE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // cuerpo_select ::= cuerpo_select etiqueta_option 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_select",31, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // cuerpo_select ::= etiqueta_option 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_select",31, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // etiqueta_option ::= MENOR_QUE OPTION MAYOR_QUE cuerpo_texto MENOR_CIERRE OPTION MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiqueta_option",16, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // cuerpo_texto ::= cuerpo_texto texto 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_texto",38, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // cuerpo_texto ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_texto",38, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // cuerpo_div ::= cuerpo_div etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_div",32, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // cuerpo_div ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_div",32, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // cuerpo_h1 ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_h1",36, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // cuerpo_p ::= cuerpo_texto 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_p",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // cuerpo_p ::= MENOR_QUE BR MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_p",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // cuerpo_parametros_gcic ::= cuerpo_parametros_gcic parametros_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // cuerpo_parametros_gcic ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // parametros_gcic ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_gcic",42, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // parametros_gcic ::= CORA NAME IGUAL texto_comillas_complete CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_gcic",42, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // cuerpo_parametros_link ::= cuerpo_parametros_link parametros_link 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // cuerpo_parametros_link ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // parametros_link ::= CORA HREF IGUAL ALLCHARNOSPACE CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_link",44, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // texto_comillas_complete ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto_comillas_complete",18, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // texto_comillas_complete ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto_comillas_complete",18, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // cuerpo_parametros_body ::= cuerpo_parametros_body parametros_body 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // cuerpo_parametros_body ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // parametros_body ::= CORA BACKGROUND IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_body",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // cuerpo_parametros_spam ::= cuerpo_parametros_spam parametros_spam 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // cuerpo_parametros_spam ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // parametros_spam ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_spam",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // cuerpo_parametros_input ::= cuerpo_parametros_input parametros_input 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // cuerpo_parametros_input ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // parametros_input ::= CORA TYPE IGUAL tipos_input CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_input",50, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // parametros_input ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_input",50, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // cuerpo_parametros_textarea ::= cuerpo_parametros_textarea parametros_textarea 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // cuerpo_parametros_textarea ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // parametros_textarea ::= CORA FONTSIZE IGUAL PIXELES CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // parametros_textarea ::= CORA FONTFAMILY IGUAL font_family CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // parametros_textarea ::= CORA TEXTALIGN IGUAL alineaciones CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // parametros_textarea ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // parametros_textarea ::= CORA COLS IGUAL DIGITO_COM CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // parametros_textarea ::= CORA ROWS IGUAL DIGITO_COM CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // cuerpo_parametros_select ::= cuerpo_parametros_select parametros_select 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // cuerpo_parametros_select ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // parametros_select ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_select",54, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // cuerpo_parametros_div ::= cuerpo_parametros_div parametros_div 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // cuerpo_parametros_div ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // parametros_div ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",56, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // parametros_div ::= CORA CLASS IGUAL clases CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",56, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // parametros_div ::= CORA BACKGROUND IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",56, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // cuerpo_parametros_img ::= cuerpo_parametros_img parametros_img 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // cuerpo_parametros_img ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // parametros_img ::= CORA SRC IGUAL ALLCHARNOSPACE CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // parametros_img ::= CORA WIDTH IGUAL tamaños CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // parametros_img ::= CORA HEIGHT IGUAL tamaños CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // parametros_img ::= CORA ALT IGUAL texto_comillas_complete CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // parametros_img ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // cuerpo_parametros_button ::= cuerpo_parametros_button parametros_button 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // cuerpo_parametros_button ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // parametros_button ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_button",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // cuerpo_parametros_h1 ::= cuerpo_parametros_h1 parametros_h1 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",61, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // cuerpo_parametros_h1 ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",61, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // parametros_h1 ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_h1",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // cuerpo_parametros_p ::= cuerpo_parametros_p parametros_p 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",63, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // cuerpo_parametros_p ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",63, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // parametros_p ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_p",64, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // parametros_textuales ::= CORA FONTSIZE IGUAL PIXELES CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // parametros_textuales ::= CORA FONTFAMILY IGUAL font_family CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // parametros_textuales ::= CORA TEXTALIGN IGUAL alineaciones CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // parametros_textuales ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // parametros_textuales ::= CORA COLOR IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // colores ::= BLACK 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // colores ::= OLIVE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // colores ::= TEAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // colores ::= RED 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // colores ::= BLUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // colores ::= MAROON 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // colores ::= NAVY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // colores ::= GRAY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // colores ::= LIME 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // colores ::= FUCHSIA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // colores ::= GREEN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // colores ::= WHITE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // colores ::= PURPLE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // colores ::= SILVER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // colores ::= YELLOW 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // colores ::= AQUA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // colores ::= HEXADECIMAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // font_family ::= COURIER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // font_family ::= VERDANA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // font_family ::= ARIAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // font_family ::= GENEVA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // font_family ::= SANS_SERIF 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // alineaciones ::= LEFT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // alineaciones ::= RIGHT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // alineaciones ::= CENTER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // alineaciones ::= JUSTIFY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // clases ::= ROW 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("clases",23, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // clases ::= COLUMN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("clases",23, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // tamaños ::= PIXELES 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tamaños",24, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // tamaños ::= PORCENTAJE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tamaños",24, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // scripting ::= MENOR_QUE SCRIPTING MAYOR_QUE cuerpo_scripting MENOR_CIERRE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("scripting",3, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // cuerpo_scripting ::= cuerpo_scripting parametros_scripting 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_scripting",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // cuerpo_scripting ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_scripting",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // parametros_scripting ::= PROCESS PARA PARC CORA cuerpo_parametros_proceso CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_scripting",68, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // parametros_scripting ::= ON_LOAD PARA PARC CORA cuerpo_parametros_proceso CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_scripting",68, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // cuerpo_parametros_proceso ::= cuerpo_parametros_proceso parametros_proceso 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",65, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // cuerpo_parametros_proceso ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",65, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // parametros_proceso ::= variables PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // parametros_proceso ::= parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // parametros_proceso ::= condicion_if 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // parametros_proceso ::= ciclo_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // parametros_proceso ::= ciclo_while 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // parametros_proceso_simples ::= asignacion_valor PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso_simples",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // variables ::= INTEGER modo cuerpo_identificadores igual_integer 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // variables ::= DECIMAL modo cuerpo_identificadores igual_decimal 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // variables ::= STRING modo cuerpo_identificadores igual_string 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // variables ::= BOOLEAN modo cuerpo_identificadores igual_boolean 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // variables ::= CHAR modo cuerpo_identificadores igual_char 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // cuerpo_identificadores ::= cuerpo_identificadores COMA identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // cuerpo_identificadores ::= identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // identificadores ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("identificadores",27, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // identificadores ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("identificadores",27, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // modo ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("modo",6, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // modo ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("modo",6, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // igual_integer ::= IGUAL expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_integer",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // igual_integer ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_integer",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // igual_decimal ::= IGUAL D_DECIMAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_decimal",90, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // igual_decimal ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_decimal",90, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // igual_string ::= IGUAL strings_concatenados 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_string",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // igual_string ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_string",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // strings_concatenados ::= strings_concatenados SUMA strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // strings_concatenados ::= strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // igual_boolean ::= IGUAL booleanos 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_boolean",88, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // igual_boolean ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_boolean",88, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // igual_char ::= IGUAL D_CHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_char",89, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // igual_char ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_char",89, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // booleanos ::= TRUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // booleanos ::= FALSE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // strings ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // strings ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // strings ::= D_STRING 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // strings ::= ID_ETIQUETA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // strings ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // asignacion_valor ::= cuerpo_identificadores IGUAL valores_de_asignacion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("asignacion_valor",82, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // valores_de_asignacion ::= expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // valores_de_asignacion ::= D_CHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // valores_de_asignacion ::= TRUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // valores_de_asignacion ::= FALSE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // valores_de_asignacion ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // valores_de_asignacion ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // valores_de_asignacion ::= ID_ETIQUETA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // valores_de_asignacion ::= D_STRING 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // condicion_if ::= IF PARA condicion PARC THEN INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END condicion_else_if condicion_else 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_if",73, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-13)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // condicion_if ::= IF PARA condicion PARC THEN parametros_proceso_simples condicion_else_if condicion_else 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_if",73, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // condicion_else_if ::= condicion_else_if parametros_else_if 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else_if",79, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // condicion_else_if ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else_if",79, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // parametros_else_if ::= ELSE IF PARA condicion PARC THEN INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_else_if",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-12)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // parametros_else_if ::= ELSE IF PARA condicion PARC THEN parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_else_if",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // condicion_else ::= ELSE INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // condicion_else ::= ELSE parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // condicion_else ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // ciclo_repeat ::= REPEAT PARA repetir_declaracion PARC HUNTIL PARA repetir_limite PARC INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("ciclo_repeat",74, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-14)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // repetir_declaracion ::= INTEGER identificadores IGUAL igual_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_declaracion",75, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // repetir_declaracion ::= identificadores IGUAL igual_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_declaracion",75, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // repetir_limite ::= D_INTEGER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_limite",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // repetir_limite ::= identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_limite",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // igual_repeat ::= D_INTEGER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_repeat",77, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // ciclo_while ::= WHILE PARA condicion PARC THENWHILE INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("ciclo_while",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-11)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // condicion ::= condicion IGUAL_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // condicion ::= condicion DIFERENTE_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // condicion ::= condicion MENOR_QUE condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // condicion ::= condicion MENOR_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // condicion ::= condicion MAYOR_QUE condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // condicion ::= condicion MAYOR_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // condicion ::= NOT condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // condicion ::= condicion AND condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // condicion ::= condicion OR condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // condicion ::= RESTA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // condicion ::= condicion SUMA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // condicion ::= condicion RESTA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // condicion ::= condicion MULTIPLICACION condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // condicion ::= condicion DIVISION condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // condicion ::= valor_condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // condicion ::= PARA condicion PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // valor_condicion ::= valor_numerico 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_condicion",84, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // expresion_aritmetica ::= RESTA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1*-1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // expresion_aritmetica ::= expresion_aritmetica SUMA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1+va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // expresion_aritmetica ::= expresion_aritmetica RESTA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1-va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // expresion_aritmetica ::= expresion_aritmetica MULTIPLICACION expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1*va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // expresion_aritmetica ::= expresion_aritmetica DIVISION expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1/va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // expresion_aritmetica ::= valor_numerico 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object va1 = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = new Double(va1.toString());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // expresion_aritmetica ::= PARA expresion_aritmetica PARC 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		RESULT = new Double(va1.toString());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // valor_numerico ::= D_INTEGER 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // valor_numerico ::= D_DECIMAL 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // valor_numerico ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = 1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // valor_numerico ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = 1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$EtiquetadoParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
              return CUP$EtiquetadoParser$do_action_part00000000(
                               CUP$EtiquetadoParser$act_num,
                               CUP$EtiquetadoParser$parser,
                               CUP$EtiquetadoParser$stack,
                               CUP$EtiquetadoParser$top);
    }
}

}
