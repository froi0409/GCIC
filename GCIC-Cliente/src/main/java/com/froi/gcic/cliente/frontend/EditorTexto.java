/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.froi.gcic.cliente.frontend;

import com.froi.gcic.cliente.manejadores.ManejadorArchivos;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author froi-pc
 */
public class EditorTexto extends javax.swing.JFrame {

    private String path;
    private ManejadorArchivos manejadorArchivos;
    
    /**
     * Creates new form EditorTexto
     */
    public EditorTexto() {
        initComponents();
        this.path = "";
        this.manejadorArchivos = new ManejadorArchivos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEntrada = new javax.swing.JTextArea();
        lblAreaCodigo = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        lblCursor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSalida = new javax.swing.JTextArea();
        lblSalida = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnMenuNuevo = new javax.swing.JMenuItem();
        btnMenuAbrir = new javax.swing.JMenuItem();
        btnMenuGuardar = new javax.swing.JMenuItem();
        btnMenuGuardarComo = new javax.swing.JMenuItem();
        btnMenuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtEntrada.setColumns(20);
        txtEntrada.setRows(5);
        txtEntrada.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtEntradaCaretUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(txtEntrada);

        lblAreaCodigo.setText("Área de Código");

        jToolBar1.setRollover(true);

        lblCursor.setText("Fila: 0 Columna: 0");

        txtSalida.setColumns(20);
        txtSalida.setRows(5);
        jScrollPane2.setViewportView(txtSalida);

        lblSalida.setText("Salida:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1019, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblAreaCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCursor))
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblSalida)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAreaCodigo)
                    .addComponent(lblCursor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSalida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("Archivo");

        btnMenuNuevo.setText("Nuevo");
        btnMenuNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(btnMenuNuevo);

        btnMenuAbrir.setText("Abrir");
        btnMenuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(btnMenuAbrir);

        btnMenuGuardar.setText("Guardar");
        btnMenuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(btnMenuGuardar);

        btnMenuGuardarComo.setText("Guardar Como");
        btnMenuGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuGuardarComoActionPerformed(evt);
            }
        });
        jMenu1.add(btnMenuGuardarComo);

        btnMenuSalir.setText("Salir");
        btnMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuSalirActionPerformed(evt);
            }
        });
        jMenu1.add(btnMenuSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Opciones");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuNuevoActionPerformed
        // TODO add your handling code here:
        String entrada = txtEntrada.getText();
        if(path == null) {
            path = "";
        }
        
        if(path.equals("") && entrada.length() == 0) {
            
        } else{
            if(manejadorArchivos.verificarCambios(path, entrada)) {
                int guardado = JOptionPane.showConfirmDialog(null, "¿Desea guardar cambios?");
                if(guardado == 0) {
                    if(path.equals("")) {
                        if((path = manejadorArchivos.obtenerPathGuardado(this)) != null) {
                            manejadorArchivos.guardarArchivo(path, entrada);
                            txtEntrada.setText("");
                            path = "";
                        } else {
                            JOptionPane.showMessageDialog(null, "Ocurrió un error al guardar el archivo");
                        }    
                    } else {
                        manejadorArchivos.guardarArchivo(path, entrada);
                        txtEntrada.setText("");
                        path = "";
                    }
                    
                } else if(guardado == 1) {
                    txtEntrada.setText("");
                }
            }
        }
//        EditorTexto nuevoEditor = new EditorTexto();
//        nuevoEditor.setVisible(true);
    }//GEN-LAST:event_btnMenuNuevoActionPerformed

    private void txtEntradaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtEntradaCaretUpdate
        // TODO add your handling code here:
        int posicion = evt.getDot();
        try {
            int fila = txtEntrada.getLineOfOffset(posicion) + 1;
            int columna = posicion - txtEntrada.getLineStartOffset(fila - 1) + 1;
            lblCursor.setText("Fila: " + fila + ", Columna: " + columna);
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_txtEntradaCaretUpdate

    private void btnMenuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuAbrirActionPerformed
        // TODO add your handling code here:
        String entrada = txtEntrada.getText();
        if(path == null) {
            path = "";
        }
        if(path.equals("") && entrada.length() == 0) {
            if((path = manejadorArchivos.obtenerPathAbrir(this)) != null) {
                txtEntrada.setText(manejadorArchivos.obtenerTextoArchivo(path));
            } else {
                path = "";
            }
        } else{
            if(manejadorArchivos.verificarCambios(path, entrada)) {
                int guardado = JOptionPane.showConfirmDialog(null, "¿Desea guardar cambios?");
                if(guardado == 0) {
                    if((path = manejadorArchivos.obtenerPathGuardado(this)) != null) {
                        manejadorArchivos.guardarArchivo(path, entrada);
                        txtEntrada.setText("");
                    }
                } else if(guardado == 1) {
                    
                }
            }
            if((path = manejadorArchivos.obtenerPathAbrir(this)) != null) {
                txtEntrada.setText(manejadorArchivos.obtenerTextoArchivo(path));
            } else {
                path = "";
            }
        }
        System.out.println("Path: " + path);
    }//GEN-LAST:event_btnMenuAbrirActionPerformed

    private void btnMenuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuGuardarActionPerformed
        // TODO add your handling code here:
        String entrada = txtEntrada.getText();
        if(path == null) {
            path = "";
        }
        
        if(path.equals("")) {
            path = manejadorArchivos.obtenerPathGuardado(this);
        }
        if(path != null) {
            manejadorArchivos.guardarArchivo(path, entrada);
        } else {
            JOptionPane.showMessageDialog(null, "Error al guardar el archivo\nSeleccione una ruta valida para guardar el archivo");
        }
        
    }//GEN-LAST:event_btnMenuGuardarActionPerformed

    private void btnMenuGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuGuardarComoActionPerformed
        // TODO add your handling code here:
        String entrada = txtEntrada.getText();
        if((path = manejadorArchivos.obtenerPathGuardado(this)) != null) {
            manejadorArchivos.guardarArchivo(path, entrada);
        } else {
            JOptionPane.showMessageDialog(null, "Error al guardar el archivo\nSeleccione una ruta valida para guardar el archivo");
        }
    }//GEN-LAST:event_btnMenuGuardarComoActionPerformed

    private void btnMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuSalirActionPerformed
        // TODO add your handling code here:
        String entrada = txtEntrada.getText();
        if(path == null) {
            path = "";
        }
        
        if(path.equals("")) {
            if(entrada.length() != 0) {
                int guardado = JOptionPane.showConfirmDialog(null, "¿Desea guardar cambios?");
                if(guardado == 0) {
                    if((path = manejadorArchivos.obtenerPathGuardado(this)) != null) {
                        manejadorArchivos.guardarArchivo(path, entrada);
                        txtEntrada.setText("");
                        path = "";
                    } else {
                        JOptionPane.showMessageDialog(null, "Ocurrió un error al guardar el archivo");
                    }    
                }
            }
        } else {
            if(manejadorArchivos.verificarCambios(path, entrada)) {
                int guardado = JOptionPane.showConfirmDialog(null, "¿Desea guardar cambios?");
                if(guardado == 0) {
                    manejadorArchivos.guardarArchivo(path, entrada);
                    txtEntrada.setText("");
                    path = "";
                }
            }
        }
        System.exit(0);
    }//GEN-LAST:event_btnMenuSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorTexto().setVisible(true);
            }
        });
    }
    
    public void setPath(String path) {
        this.path = path;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnMenuAbrir;
    private javax.swing.JMenuItem btnMenuGuardar;
    private javax.swing.JMenuItem btnMenuGuardarComo;
    private javax.swing.JMenuItem btnMenuNuevo;
    private javax.swing.JMenuItem btnMenuSalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblAreaCodigo;
    private javax.swing.JLabel lblCursor;
    private javax.swing.JLabel lblSalida;
    private javax.swing.JTextArea txtEntrada;
    private javax.swing.JTextArea txtSalida;
    // End of variables declaration//GEN-END:variables
}
