
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.froi.pruebas.gramaticas;

import java_cup.runtime.*;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class EtiquetadoParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return EtiquetadoParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public EtiquetadoParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public EtiquetadoParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public EtiquetadoParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u013a\000\002\002\004\000\002\002\004\000\002\140" +
    "\006\000\002\140\003\000\002\014\005\000\002\014\006" +
    "\000\002\014\006\000\002\014\006\000\002\014\007\000" +
    "\002\014\007\000\002\014\007\000\002\014\010\000\002" +
    "\046\005\000\002\003\005\000\002\141\005\000\002\175" +
    "\005\000\002\004\005\000\002\142\006\000\002\142\003" +
    "\000\002\176\005\000\002\015\004\000\002\015\002\000" +
    "\002\015\004\000\002\020\004\000\002\020\005\000\002" +
    "\020\005\000\002\144\006\000\002\145\005\000\002\146" +
    "\005\000\002\177\005\000\002\177\003\000\002\200\005" +
    "\000\002\200\003\000\002\201\005\000\002\201\003\000" +
    "\002\017\004\000\002\017\002\000\002\023\003\000\002" +
    "\023\003\000\002\016\004\000\002\016\002\000\002\016" +
    "\004\000\002\021\005\000\002\021\005\000\002\021\005" +
    "\000\002\021\005\000\002\021\005\000\002\021\004\000" +
    "\002\021\003\000\002\021\005\000\002\021\005\000\002" +
    "\021\005\000\002\021\005\000\002\147\006\000\002\150" +
    "\006\000\002\151\006\000\002\152\006\000\002\153\006" +
    "\000\002\154\006\000\002\155\005\000\002\156\006\000" +
    "\002\157\006\000\002\160\006\000\002\161\005\000\002" +
    "\162\005\000\002\163\005\000\002\164\005\000\002\165" +
    "\005\000\002\166\005\000\002\170\005\000\002\171\005" +
    "\000\002\172\005\000\002\036\004\000\002\036\003\000" +
    "\002\022\011\000\002\044\004\000\002\044\002\000\002" +
    "\037\004\000\002\037\002\000\002\107\004\000\002\107" +
    "\002\000\002\110\003\000\002\110\003\000\002\110\005" +
    "\000\002\110\005\000\002\110\005\000\002\047\004\000" +
    "\002\047\002\000\002\047\004\000\002\050\007\000\002" +
    "\050\007\000\002\051\004\000\002\051\002\000\002\051" +
    "\004\000\002\052\007\000\002\024\003\000\002\024\003" +
    "\000\002\053\004\000\002\053\002\000\002\053\004\000" +
    "\002\054\007\000\002\055\004\000\002\055\002\000\002" +
    "\055\004\000\002\056\003\000\002\057\004\000\002\057" +
    "\002\000\002\057\004\000\002\060\007\000\002\060\003" +
    "\000\002\061\004\000\002\061\002\000\002\061\004\000" +
    "\002\062\007\000\002\062\007\000\002\062\007\000\002" +
    "\062\007\000\002\062\007\000\002\062\007\000\002\063" +
    "\004\000\002\063\002\000\002\063\004\000\002\064\003" +
    "\000\002\065\004\000\002\065\002\000\002\065\004\000" +
    "\002\066\003\000\002\066\007\000\002\066\007\000\002" +
    "\067\004\000\002\067\002\000\002\067\004\000\002\070" +
    "\007\000\002\070\007\000\002\070\007\000\002\070\007" +
    "\000\002\070\007\000\002\071\004\000\002\071\002\000" +
    "\002\071\004\000\002\072\003\000\002\073\004\000\002" +
    "\073\002\000\002\073\004\000\002\074\003\000\002\075" +
    "\004\000\002\075\002\000\002\075\004\000\002\076\003" +
    "\000\002\033\007\000\002\033\007\000\002\033\007\000" +
    "\002\033\007\000\002\033\007\000\002\026\003\000\002" +
    "\026\003\000\002\026\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\026\003\000\002\026\003" +
    "\000\002\026\003\000\002\026\003\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\026\003\000\002\026\003\000\002\027" +
    "\003\000\002\027\003\000\002\027\003\000\002\027\003" +
    "\000\002\027\003\000\002\030\003\000\002\030\003\000" +
    "\002\030\003\000\002\030\003\000\002\031\003\000\002" +
    "\031\003\000\002\032\003\000\002\032\003\000\002\034" +
    "\003\000\002\034\003\000\002\034\003\000\002\034\003" +
    "\000\002\005\011\000\002\045\004\000\002\045\002\000" +
    "\002\102\010\000\002\102\010\000\002\077\004\000\002" +
    "\077\002\000\002\077\004\000\002\100\004\000\002\100" +
    "\003\000\002\100\004\000\002\100\003\000\002\100\003" +
    "\000\002\100\003\000\002\100\004\000\002\101\004\000" +
    "\002\111\003\000\002\111\005\000\002\111\005\000\002" +
    "\111\006\000\002\111\005\000\002\112\006\000\002\112" +
    "\006\000\002\112\006\000\002\112\006\000\002\112\006" +
    "\000\002\007\006\000\002\007\006\000\002\007\006\000" +
    "\002\007\006\000\002\007\006\000\002\137\005\000\002" +
    "\137\003\000\002\137\004\000\002\137\005\000\002\035" +
    "\003\000\002\035\003\000\002\010\003\000\002\010\002" +
    "\000\002\130\004\000\002\130\002\000\002\134\004\000" +
    "\002\134\002\000\002\131\004\000\002\131\002\000\002" +
    "\012\005\000\002\012\003\000\002\012\004\000\002\132" +
    "\004\000\002\132\002\000\002\133\004\000\002\133\002" +
    "\000\002\013\003\000\002\013\003\000\002\013\003\000" +
    "\002\011\003\000\002\011\003\000\002\011\003\000\002" +
    "\011\003\000\002\011\003\000\002\011\003\000\002\011" +
    "\003\000\002\124\005\000\002\127\003\000\002\127\003" +
    "\000\002\127\003\000\002\127\003\000\002\127\003\000" +
    "\002\127\003\000\002\127\003\000\002\127\003\000\002" +
    "\127\003\000\002\113\011\000\002\113\006\000\002\174" +
    "\012\000\002\174\012\000\002\174\012\000\002\174\012" +
    "\000\002\174\012\000\002\174\012\000\002\174\012\000" +
    "\002\174\012\000\002\174\012\000\002\173\007\000\002" +
    "\121\004\000\002\121\002\000\002\122\017\000\002\122" +
    "\011\000\002\123\012\000\002\123\004\000\002\123\002" +
    "\000\002\114\021\000\002\115\006\000\002\115\005\000" +
    "\002\116\003\000\002\116\003\000\002\117\003\000\002" +
    "\120\016\000\002\125\005\000\002\125\005\000\002\125" +
    "\005\000\002\125\005\000\002\125\005\000\002\125\005" +
    "\000\002\125\004\000\002\125\005\000\002\125\005\000" +
    "\002\125\004\000\002\125\005\000\002\125\005\000\002" +
    "\125\005\000\002\125\005\000\002\125\003\000\002\125" +
    "\005\000\002\126\003\000\002\135\004\000\002\135\005" +
    "\000\002\135\005\000\002\135\005\000\002\135\005\000" +
    "\002\135\003\000\002\135\005\000\002\136\003\000\002" +
    "\136\003\000\002\136\003\000\002\136\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0299\000\006\003\004\154\005\001\002\000\004\154" +
    "\ufffe\001\002\000\004\004\u028e\001\002\000\004\154\014" +
    "\001\002\000\004\002\010\001\002\000\004\002\001\001" +
    "\002\000\004\002\000\001\002\000\010\003\uffec\154\uffec" +
    "\163\uffec\001\002\000\004\154\u025e\001\002\000\006\005" +
    "\u025c\024\u0253\001\002\000\006\003\020\154\017\001\002" +
    "\000\006\154\u024c\163\u024f\001\002\000\006\010\u0242\024" +
    "\u0253\001\002\000\010\003\uffef\154\uffef\163\uffef\001\002" +
    "\000\006\003\020\154\u0241\001\002\000\010\003\uffd9\154" +
    "\uffd9\163\uffd9\001\002\000\010\003\035\154\032\163\026" +
    "\001\002\000\010\003\uffd1\154\uffd1\163\uffd1\001\002\000" +
    "\004\163\u023d\001\002\000\004\010\u023a\001\002\000\010" +
    "\163\uffb5\205\uffb5\210\uffb5\001\002\000\006\154\ufff1\163" +
    "\ufff1\001\002\000\010\003\uffda\154\uffda\163\uffda\001\002" +
    "\000\030\011\u0172\012\u01cc\013\u01d0\014\u01cf\016\u01ce\017" +
    "\u01d1\020\u0173\021\u01cb\022\u0174\023\u0175\024\u01cd\001\002" +
    "\000\010\163\uffb5\205\uffb5\210\uffb5\001\002\000\010\163" +
    "\uffb5\205\uffb5\210\uffb5\001\002\000\010\003\uffd8\154\uffd8" +
    "\163\uffd8\001\002\000\006\154\uffb3\163\uffb3\001\002\000" +
    "\012\154\uffb1\163\uffb1\205\uffb1\210\uffb1\001\002\000\012" +
    "\154\uffb1\163\uffb1\205\uffb1\210\uffb1\001\002\000\012\154" +
    "\uffb1\163\uffb1\205\uffb1\210\uffb1\001\002\000\012\003\uff43" +
    "\134\uff43\135\uff43\163\uff43\001\002\000\004\154\045\001" +
    "\002\000\006\154\045\163\061\001\002\000\004\015\047" +
    "\001\002\000\006\154\uffb8\163\uffb8\001\002\000\004\156" +
    "\050\001\002\000\010\163\uffb5\205\uffb5\210\uffb5\001\002" +
    "\000\010\163\055\205\054\210\053\001\002\000\010\163" +
    "\uffb6\205\uffb6\210\uffb6\001\002\000\014\003\uffdc\154\uffdc" +
    "\163\uffdc\205\uffdc\210\uffdc\001\002\000\014\003\uffdb\154" +
    "\uffdb\163\uffdb\205\uffdb\210\uffdb\001\002\000\004\015\056" +
    "\001\002\000\004\156\057\001\002\000\006\154\uffb7\163" +
    "\uffb7\001\002\000\006\154\uffb9\163\uffb9\001\002\000\004" +
    "\014\063\001\002\000\010\003\uffd4\154\uffd4\163\uffd4\001" +
    "\002\000\004\156\064\001\002\000\010\003\uffbf\154\uffbf" +
    "\163\uffbf\001\002\000\012\003\070\134\066\135\071\163" +
    "\073\001\002\000\004\174\u0157\001\002\000\010\003\uffcd" +
    "\154\uffcd\163\uffcd\001\002\000\010\003\uffdf\154\uffdf\163" +
    "\uffdf\001\002\000\004\174\076\001\002\000\012\003\uff44" +
    "\134\uff44\135\uff44\163\uff44\001\002\000\004\024\074\001" +
    "\002\000\004\156\075\001\002\000\010\003\uffe0\154\uffe0" +
    "\163\uffe0\001\002\000\004\175\077\001\002\000\004\176" +
    "\100\001\002\000\054\003\uff3f\110\uff3f\111\uff3f\112\uff3f" +
    "\113\uff3f\114\uff3f\115\uff3f\116\uff3f\117\uff3f\120\uff3f\124" +
    "\uff3f\127\uff3f\131\uff3f\136\uff3f\137\uff3f\140\uff3f\141\uff3f" +
    "\142\uff3f\177\uff3f\205\uff3f\210\uff3f\001\002\000\054\003" +
    "\130\110\133\111\106\112\124\113\103\114\143\115\136" +
    "\116\126\117\131\120\102\124\117\127\140\131\111\136" +
    "\134\137\112\140\122\141\113\142\123\177\110\205\132" +
    "\210\127\001\002\000\004\174\u0155\001\002\000\004\174" +
    "\u0152\001\002\000\054\003\uff3f\110\uff3f\111\uff3f\112\uff3f" +
    "\113\uff3f\114\uff3f\115\uff3f\116\uff3f\117\uff3f\120\uff3f\124" +
    "\uff3f\127\uff3f\131\uff3f\136\uff3f\137\uff3f\140\uff3f\141\uff3f" +
    "\142\uff3f\203\uff3f\205\uff3f\210\uff3f\001\002\000\056\003" +
    "\uff40\110\uff40\111\uff40\112\uff40\113\uff40\114\uff40\115\uff40" +
    "\116\uff40\117\uff40\120\uff40\124\uff40\127\uff40\131\uff40\136" +
    "\uff40\137\uff40\140\uff40\141\uff40\142\uff40\177\uff40\203\uff40" +
    "\205\uff40\210\uff40\001\002\000\004\174\u0149\001\002\000" +
    "\056\003\uff3c\110\uff3c\111\uff3c\112\uff3c\113\uff3c\114\uff3c" +
    "\115\uff3c\116\uff3c\117\uff3c\120\uff3c\124\uff3c\127\uff3c\131" +
    "\uff3c\136\uff3c\137\uff3c\140\uff3c\141\uff3c\142\uff3c\177\uff3c" +
    "\203\uff3c\205\uff3c\210\uff3c\001\002\000\012\003\uff42\134" +
    "\uff42\135\uff42\163\uff42\001\002\000\004\174\u013e\001\002" +
    "\000\010\143\350\205\uff1f\210\uff1f\001\002\000\010\143" +
    "\350\205\uff1f\210\uff1f\001\002\000\004\202\u0133\001\002" +
    "\000\056\003\uff3a\110\uff3a\111\uff3a\112\uff3a\113\uff3a\114" +
    "\uff3a\115\uff3a\116\uff3a\117\uff3a\120\uff3a\124\uff3a\127\uff3a" +
    "\131\uff3a\136\uff3a\137\uff3a\140\uff3a\141\uff3a\142\uff3a\177" +
    "\uff3a\203\uff3a\205\uff3a\210\uff3a\001\002\000\004\202\u0132" +
    "\001\002\000\006\003\u010f\174\u0110\001\002\000\004\202" +
    "\uff35\001\002\000\004\202\u010e\001\002\000\010\143\350" +
    "\205\uff1f\210\uff1f\001\002\000\010\143\350\205\uff1f\210" +
    "\uff1f\001\002\000\004\174\376\001\002\000\056\003\uff38" +
    "\110\uff38\111\uff38\112\uff38\113\uff38\114\uff38\115\uff38\116" +
    "\uff38\117\uff38\120\uff38\124\uff38\127\uff38\131\uff38\136\uff38" +
    "\137\uff38\140\uff38\141\uff38\142\uff38\177\uff38\203\uff38\205" +
    "\uff38\210\uff38\001\002\000\004\174\374\001\002\000\014" +
    "\003\uff21\171\uff21\175\uff21\202\uff21\206\uff21\001\002\000" +
    "\062\003\uff3e\110\uff3e\111\uff3e\112\uff3e\113\uff3e\114\uff3e" +
    "\115\uff3e\116\uff3e\117\uff3e\120\uff3e\124\uff3e\127\uff3e\131" +
    "\uff3e\136\uff3e\137\uff3e\140\uff3e\141\uff3e\142\uff3e\174\365" +
    "\177\uff3e\202\364\203\uff3e\205\uff3e\210\uff3e\001\002\000" +
    "\004\174\361\001\002\000\014\003\uff22\171\uff22\175\uff22" +
    "\202\uff22\206\uff22\001\002\000\004\174\356\001\002\000" +
    "\010\143\350\205\uff1f\210\uff1f\001\002\000\006\205\132" +
    "\210\127\001\002\000\004\174\253\001\002\000\056\003" +
    "\uff39\110\uff39\111\uff39\112\uff39\113\uff39\114\uff39\115\uff39" +
    "\116\uff39\117\uff39\120\uff39\124\uff39\127\uff39\131\uff39\136" +
    "\uff39\137\uff39\140\uff39\141\uff39\142\uff39\177\uff39\203\uff39" +
    "\205\uff39\210\uff39\001\002\000\004\174\223\001\002\000" +
    "\010\003\163\171\164\206\162\001\002\000\012\003\uff25" +
    "\171\uff25\202\uff25\206\uff25\001\002\000\004\174\144\001" +
    "\002\000\030\003\151\110\133\111\106\112\124\113\103" +
    "\114\143\151\150\205\155\207\145\212\153\213\147\001" +
    "\002\000\012\003\uff0b\164\uff0b\175\uff0b\202\uff0b\001\002" +
    "\000\010\003\156\164\160\175\157\001\002\000\012\003" +
    "\uff0d\164\uff0d\175\uff0d\202\uff0d\001\002\000\012\003\uff0c" +
    "\164\uff0c\175\uff0c\202\uff0c\001\002\000\012\003\uff08\164" +
    "\uff08\175\uff08\202\uff08\001\002\000\012\003\uff09\164\uff09" +
    "\175\uff09\202\uff09\001\002\000\012\003\uff0e\164\uff0e\175" +
    "\uff0e\202\uff0e\001\002\000\012\003\uff17\164\uff17\175\uff17" +
    "\202\uff17\001\002\000\012\003\uff0a\164\uff0a\175\uff0a\202" +
    "\uff0a\001\002\000\012\003\uff16\164\uff16\175\uff16\202\uff16" +
    "\001\002\000\012\003\uff2c\164\uff2c\175\uff2c\202\uff2c\001" +
    "\002\000\030\003\151\110\133\111\106\112\124\113\103" +
    "\114\143\151\150\205\155\207\145\212\153\213\147\001" +
    "\002\000\012\003\uff18\164\uff18\175\uff18\202\uff18\001\002" +
    "\000\010\003\221\205\132\210\127\001\002\000\012\003" +
    "\uff24\171\uff24\202\uff24\206\uff24\001\002\000\036\003\174" +
    "\144\171\145\166\146\167\147\173\150\170\151\175\165" +
    "\202\174\203\205\205\207\165\210\204\212\201\213\172" +
    "\001\002\000\004\202\uff00\001\002\000\040\003\ufeca\152" +
    "\ufeca\153\ufeca\154\ufeca\155\ufeca\156\ufeca\157\ufeca\160\ufeca" +
    "\161\ufeca\164\ufeca\165\ufeca\166\ufeca\167\ufeca\175\ufeca\202" +
    "\ufeca\001\002\000\004\202\uff04\001\002\000\004\202\uff05" +
    "\001\002\000\040\003\ufecb\152\ufecb\153\ufecb\154\ufecb\155" +
    "\ufecb\156\ufecb\157\ufecb\160\ufecb\161\ufecb\164\ufecb\165\ufecb" +
    "\166\ufecb\167\ufecb\175\ufecb\202\ufecb\001\002\000\004\202" +
    "\uff01\001\002\000\004\202\uff03\001\002\000\004\202\ufefe" +
    "\001\002\000\004\202\ufeff\001\002\000\004\202\uff07\001" +
    "\002\000\016\164\ufecd\165\ufecd\166\ufecd\167\ufecd\175\ufecd" +
    "\202\ufecd\001\002\000\014\164\212\165\207\166\210\167" +
    "\213\202\uff06\001\002\000\004\202\uff02\001\002\000\016" +
    "\144\171\145\166\165\202\174\203\205\205\210\204\001" +
    "\002\000\016\144\171\145\166\165\202\174\203\205\205" +
    "\210\204\001\002\000\040\003\ufec8\152\ufec8\153\ufec8\154" +
    "\ufec8\155\ufec8\156\ufec8\157\ufec8\160\ufec8\161\ufec8\164\ufec8" +
    "\165\ufec8\166\ufec8\167\ufec8\175\ufec8\202\ufec8\001\002\000" +
    "\040\003\ufec9\152\ufec9\153\ufec9\154\ufec9\155\ufec9\156\ufec9" +
    "\157\ufec9\160\ufec9\161\ufec9\164\ufec9\165\ufec9\166\ufec9\167" +
    "\ufec9\175\ufec9\202\ufec9\001\002\000\014\164\212\165\207" +
    "\166\210\167\213\175\211\001\002\000\016\144\171\145" +
    "\166\165\202\174\203\205\205\210\204\001\002\000\016" +
    "\144\171\145\166\165\202\174\203\205\205\210\204\001" +
    "\002\000\016\164\ufecc\165\ufecc\166\ufecc\167\ufecc\175\ufecc" +
    "\202\ufecc\001\002\000\016\144\171\145\166\165\202\174" +
    "\203\205\205\210\204\001\002\000\016\144\171\145\166" +
    "\165\202\174\203\205\205\210\204\001\002\000\016\164" +
    "\ufece\165\ufece\166\ufece\167\ufece\175\ufece\202\ufece\001\002" +
    "\000\016\164\ufed1\165\ufed1\166\210\167\213\175\ufed1\202" +
    "\ufed1\001\002\000\016\164\ufecf\165\ufecf\166\ufecf\167\ufecf" +
    "\175\ufecf\202\ufecf\001\002\000\016\164\ufed0\165\ufed0\166" +
    "\210\167\213\175\ufed0\202\ufed0\001\002\000\016\164\ufed2" +
    "\165\ufed2\166\ufed2\167\ufed2\175\ufed2\202\ufed2\001\002\000" +
    "\012\003\uff23\171\uff23\202\uff23\206\uff23\001\002\000\012" +
    "\003\uff26\171\uff26\202\uff26\206\uff26\001\002\000\010\136" +
    "\224\205\132\210\127\001\002\000\006\205\132\210\127" +
    "\001\002\000\004\175\232\001\002\000\004\171\227\001" +
    "\002\000\004\144\230\001\002\000\004\175\ufee5\001\002" +
    "\000\004\175\ufee8\001\002\000\004\130\233\001\002\000" +
    "\004\174\234\001\002\000\010\144\236\205\132\210\127" +
    "\001\002\000\004\175\240\001\002\000\004\175\ufee7\001" +
    "\002\000\004\175\ufee6\001\002\000\004\122\241\001\002" +
    "\000\004\200\242\001\002\000\004\203\243\001\002\000" +
    "\054\003\uff3f\110\uff3f\111\uff3f\112\uff3f\113\uff3f\114\uff3f" +
    "\115\uff3f\116\uff3f\117\uff3f\120\uff3f\124\uff3f\127\uff3f\131" +
    "\uff3f\136\uff3f\137\uff3f\140\uff3f\141\uff3f\142\uff3f\203\uff3f" +
    "\205\uff3f\210\uff3f\001\002\000\054\003\130\110\133\111" +
    "\106\112\124\113\103\114\143\115\136\116\126\117\131" +
    "\120\102\124\117\127\140\131\111\136\134\137\112\140" +
    "\122\141\113\142\123\203\245\205\132\210\127\001\002" +
    "\000\004\201\246\001\002\000\004\123\247\001\002\000" +
    "\056\003\ufeea\110\ufeea\111\ufeea\112\ufeea\113\ufeea\114\ufeea" +
    "\115\ufeea\116\ufeea\117\ufeea\120\ufeea\124\ufeea\127\ufeea\131" +
    "\ufeea\136\ufeea\137\ufeea\140\ufeea\141\ufeea\142\ufeea\177\ufeea" +
    "\203\ufeea\205\ufeea\210\ufeea\001\002\000\004\171\251\001" +
    "\002\000\004\144\230\001\002\000\004\175\ufee9\001\002" +
    "\000\004\175\254\001\002\000\004\202\uff34\001\002\000" +
    "\060\003\ufef0\110\ufef0\111\ufef0\112\ufef0\113\ufef0\114\ufef0" +
    "\115\ufef0\116\ufef0\117\ufef0\120\ufef0\124\ufef0\126\ufef0\127" +
    "\ufef0\131\ufef0\136\ufef0\137\ufef0\140\ufef0\141\ufef0\142\ufef0" +
    "\177\ufef0\203\ufef0\205\ufef0\210\ufef0\001\002\000\060\003" +
    "\ufeeb\110\ufeeb\111\ufeeb\112\ufeeb\113\ufeeb\114\ufeeb\115\ufeeb" +
    "\116\ufeeb\117\ufeeb\120\ufeeb\124\ufeeb\126\260\127\ufeeb\131" +
    "\ufeeb\136\ufeeb\137\ufeeb\140\ufeeb\141\ufeeb\142\ufeeb\177\ufeeb" +
    "\203\ufeeb\205\ufeeb\210\ufeeb\001\002\000\060\003\ufef1\110" +
    "\ufef1\111\ufef1\112\ufef1\113\ufef1\114\ufef1\115\ufef1\116\ufef1" +
    "\117\ufef1\120\ufef1\124\ufef1\126\ufef1\127\ufef1\131\ufef1\136" +
    "\ufef1\137\ufef1\140\ufef1\141\ufef1\142\ufef1\177\ufef1\203\ufef1" +
    "\205\ufef1\210\ufef1\001\002\000\012\122\262\124\264\205" +
    "\132\210\127\001\002\000\056\003\ufefc\110\ufefc\111\ufefc" +
    "\112\ufefc\113\ufefc\114\ufefc\115\ufefc\116\ufefc\117\ufefc\120" +
    "\ufefc\124\ufefc\127\ufefc\131\ufefc\136\ufefc\137\ufefc\140\ufefc" +
    "\141\ufefc\142\ufefc\177\ufefc\203\ufefc\205\ufefc\210\ufefc\001" +
    "\002\000\004\200\342\001\002\000\056\003\ufeec\110\ufeec" +
    "\111\ufeec\112\ufeec\113\ufeec\114\ufeec\115\ufeec\116\ufeec\117" +
    "\ufeec\120\ufeec\124\ufeec\127\ufeec\131\ufeec\136\ufeec\137\ufeec" +
    "\140\ufeec\141\ufeec\142\ufeec\177\ufeec\203\ufeec\205\ufeec\210" +
    "\ufeec\001\002\000\004\174\265\001\002\000\020\144\171" +
    "\145\166\162\271\165\272\174\273\205\205\210\204\001" +
    "\002\000\036\003\ufed5\152\ufed5\153\ufed5\154\ufed5\155\ufed5" +
    "\156\ufed5\157\ufed5\160\ufed5\161\ufed5\164\ufed5\165\ufed5\166" +
    "\ufed5\167\ufed5\175\ufed5\001\002\000\034\152\300\153\305" +
    "\154\303\155\311\156\276\157\301\160\310\161\275\164" +
    "\277\165\307\166\302\167\304\175\330\001\002\000\036" +
    "\003\ufed3\152\ufed3\153\ufed3\154\ufed3\155\ufed3\156\ufed3\157" +
    "\ufed3\160\ufed3\161\ufed3\164\ufed3\165\ufed3\166\ufed3\167\ufed3" +
    "\175\ufed3\001\002\000\020\144\171\145\166\162\271\165" +
    "\272\174\273\205\205\210\204\001\002\000\020\144\171" +
    "\145\166\162\271\165\272\174\273\205\205\210\204\001" +
    "\002\000\020\144\171\145\166\162\271\165\272\174\273" +
    "\205\205\210\204\001\002\000\034\152\300\153\305\154" +
    "\303\155\311\156\276\157\301\160\310\161\275\164\277" +
    "\165\307\166\302\167\304\175\306\001\002\000\020\144" +
    "\171\145\166\162\271\165\272\174\273\205\205\210\204" +
    "\001\002\000\020\144\171\145\166\162\271\165\272\174" +
    "\273\205\205\210\204\001\002\000\020\144\171\145\166" +
    "\162\271\165\272\174\273\205\205\210\204\001\002\000" +
    "\020\144\171\145\166\162\271\165\272\174\273\205\205" +
    "\210\204\001\002\000\020\144\171\145\166\162\271\165" +
    "\272\174\273\205\205\210\204\001\002\000\020\144\171" +
    "\145\166\162\271\165\272\174\273\205\205\210\204\001" +
    "\002\000\020\144\171\145\166\162\271\165\272\174\273" +
    "\205\205\210\204\001\002\000\020\144\171\145\166\162" +
    "\271\165\272\174\273\205\205\210\204\001\002\000\020" +
    "\144\171\145\166\162\271\165\272\174\273\205\205\210" +
    "\204\001\002\000\036\003\ufed4\152\ufed4\153\ufed4\154\ufed4" +
    "\155\ufed4\156\ufed4\157\ufed4\160\ufed4\161\ufed4\164\ufed4\165" +
    "\ufed4\166\ufed4\167\ufed4\175\ufed4\001\002\000\020\144\171" +
    "\145\166\162\271\165\272\174\273\205\205\210\204\001" +
    "\002\000\020\144\171\145\166\162\271\165\272\174\273" +
    "\205\205\210\204\001\002\000\020\144\171\145\166\162" +
    "\271\165\272\174\273\205\205\210\204\001\002\000\036" +
    "\003\ufee0\152\ufee0\153\ufee0\154\ufee0\155\ufee0\156\ufee0\157" +
    "\ufee0\160\310\161\275\164\ufee0\165\ufee0\166\ufee0\167\ufee0" +
    "\175\ufee0\001\002\000\036\003\ufedb\152\ufedb\153\ufedb\154" +
    "\ufedb\155\ufedb\156\ufedb\157\ufedb\160\ufedb\161\275\164\ufedb" +
    "\165\ufedb\166\ufedb\167\ufedb\175\ufedb\001\002\000\036\003" +
    "\ufed8\152\300\153\305\154\303\155\311\156\276\157\301" +
    "\160\310\161\275\164\ufed8\165\ufed8\166\302\167\304\175" +
    "\ufed8\001\002\000\036\003\ufee2\152\ufee2\153\ufee2\154\ufee2" +
    "\155\ufee2\156\ufee2\157\ufee2\160\310\161\275\164\ufee2\165" +
    "\ufee2\166\ufee2\167\ufee2\175\ufee2\001\002\000\036\003\ufed6" +
    "\152\300\153\305\154\303\155\311\156\276\157\301\160" +
    "\310\161\275\164\ufed6\165\ufed6\166\ufed6\167\ufed6\175\ufed6" +
    "\001\002\000\036\003\ufee1\152\ufee1\153\ufee1\154\ufee1\155" +
    "\ufee1\156\ufee1\157\ufee1\160\310\161\275\164\ufee1\165\ufee1" +
    "\166\ufee1\167\ufee1\175\ufee1\001\002\000\036\003\ufed7\152" +
    "\300\153\305\154\303\155\311\156\276\157\301\160\310" +
    "\161\275\164\ufed7\165\ufed7\166\ufed7\167\ufed7\175\ufed7\001" +
    "\002\000\036\003\ufede\152\ufede\153\ufede\154\ufede\155\ufede" +
    "\156\ufede\157\ufede\160\310\161\275\164\ufede\165\ufede\166" +
    "\ufede\167\ufede\175\ufede\001\002\000\036\003\ufee3\152\ufee3" +
    "\153\ufee3\154\ufee3\155\ufee3\156\ufee3\157\ufee3\160\310\161" +
    "\275\164\ufee3\165\ufee3\166\ufee3\167\ufee3\175\ufee3\001\002" +
    "\000\036\003\ufed9\152\300\153\305\154\303\155\311\156" +
    "\276\157\301\160\310\161\275\164\ufed9\165\ufed9\166\302" +
    "\167\304\175\ufed9\001\002\000\036\003\ufedf\152\ufedf\153" +
    "\ufedf\154\ufedf\155\ufedf\156\ufedf\157\ufedf\160\310\161\275" +
    "\164\ufedf\165\ufedf\166\ufedf\167\ufedf\175\ufedf\001\002\000" +
    "\036\003\ufedc\152\ufedc\153\ufedc\154\ufedc\155\ufedc\156\ufedc" +
    "\157\ufedc\160\ufedc\161\ufedc\164\ufedc\165\ufedc\166\ufedc\167" +
    "\ufedc\175\ufedc\001\002\000\036\003\ufeda\152\300\153\305" +
    "\154\303\155\311\156\276\157\301\160\310\161\275\164" +
    "\ufeda\165\ufeda\166\302\167\304\175\ufeda\001\002\000\036" +
    "\003\ufedd\152\ufedd\153\ufedd\154\ufedd\155\ufedd\156\ufedd\157" +
    "\ufedd\160\ufedd\161\ufedd\164\ufedd\165\ufedd\166\ufedd\167\ufedd" +
    "\175\ufedd\001\002\000\004\125\331\001\002\000\010\122" +
    "\332\205\132\210\127\001\002\000\004\200\334\001\002" +
    "\000\060\003\ufeee\110\ufeee\111\ufeee\112\ufeee\113\ufeee\114" +
    "\ufeee\115\ufeee\116\ufeee\117\ufeee\120\ufeee\124\ufeee\126\ufeee" +
    "\127\ufeee\131\ufeee\136\ufeee\137\ufeee\140\ufeee\141\ufeee\142" +
    "\ufeee\177\ufeee\203\ufeee\205\ufeee\210\ufeee\001\002\000\004" +
    "\203\335\001\002\000\054\003\uff3f\110\uff3f\111\uff3f\112" +
    "\uff3f\113\uff3f\114\uff3f\115\uff3f\116\uff3f\117\uff3f\120\uff3f" +
    "\124\uff3f\127\uff3f\131\uff3f\136\uff3f\137\uff3f\140\uff3f\141" +
    "\uff3f\142\uff3f\203\uff3f\205\uff3f\210\uff3f\001\002\000\054" +
    "\003\130\110\133\111\106\112\124\113\103\114\143\115" +
    "\136\116\126\117\131\120\102\124\117\127\140\131\111" +
    "\136\134\137\112\140\122\141\113\142\123\203\337\205" +
    "\132\210\127\001\002\000\004\201\340\001\002\000\004" +
    "\123\341\001\002\000\060\003\ufeef\110\ufeef\111\ufeef\112" +
    "\ufeef\113\ufeef\114\ufeef\115\ufeef\116\ufeef\117\ufeef\120\ufeef" +
    "\124\ufeef\126\ufeef\127\ufeef\131\ufeef\136\ufeef\137\ufeef\140" +
    "\ufeef\141\ufeef\142\ufeef\177\ufeef\203\ufeef\205\ufeef\210\ufeef" +
    "\001\002\000\004\203\343\001\002\000\054\003\uff3f\110" +
    "\uff3f\111\uff3f\112\uff3f\113\uff3f\114\uff3f\115\uff3f\116\uff3f" +
    "\117\uff3f\120\uff3f\124\uff3f\127\uff3f\131\uff3f\136\uff3f\137" +
    "\uff3f\140\uff3f\141\uff3f\142\uff3f\203\uff3f\205\uff3f\210\uff3f" +
    "\001\002\000\054\003\130\110\133\111\106\112\124\113" +
    "\103\114\143\115\136\116\126\117\131\120\102\124\117" +
    "\127\140\131\111\136\134\137\112\140\122\141\113\142" +
    "\123\203\345\205\132\210\127\001\002\000\004\201\346" +
    "\001\002\000\004\123\347\001\002\000\056\003\ufeed\110" +
    "\ufeed\111\ufeed\112\ufeed\113\ufeed\114\ufeed\115\ufeed\116\ufeed" +
    "\117\ufeed\120\ufeed\124\ufeed\127\ufeed\131\ufeed\136\ufeed\137" +
    "\ufeed\140\ufeed\141\ufeed\142\ufeed\177\ufeed\203\ufeed\205\ufeed" +
    "\210\ufeed\001\002\000\006\205\uff20\210\uff20\001\002\000" +
    "\006\205\132\210\127\001\002\000\012\003\163\171\353" +
    "\202\uff1d\206\162\001\002\000\016\144\171\145\166\165" +
    "\202\174\203\205\205\210\204\001\002\000\004\202\uff2b" +
    "\001\002\000\014\164\212\165\207\166\210\167\213\202" +
    "\uff1e\001\002\000\030\003\151\110\133\111\106\112\124" +
    "\113\103\114\143\151\150\205\155\207\145\212\153\213" +
    "\147\001\002\000\010\003\156\164\160\175\360\001\002" +
    "\000\012\003\uff30\164\uff30\175\uff30\202\uff30\001\002\000" +
    "\030\003\151\110\133\111\106\112\124\113\103\114\143" +
    "\151\150\205\155\207\145\212\153\213\147\001\002\000" +
    "\010\003\156\164\160\175\363\001\002\000\004\202\uff32" +
    "\001\002\000\056\003\uff37\110\uff37\111\uff37\112\uff37\113" +
    "\uff37\114\uff37\115\uff37\116\uff37\117\uff37\120\uff37\124\uff37" +
    "\127\uff37\131\uff37\136\uff37\137\uff37\140\uff37\141\uff37\142" +
    "\uff37\177\uff37\203\uff37\205\uff37\210\uff37\001\002\000\020" +
    "\144\171\145\166\162\271\165\272\174\273\205\205\210" +
    "\204\001\002\000\034\152\300\153\305\154\303\155\311" +
    "\156\276\157\301\160\310\161\275\164\277\165\307\166" +
    "\302\167\304\175\367\001\002\000\004\125\370\001\002" +
    "\000\004\122\371\001\002\000\004\200\372\001\002\000" +
    "\004\203\373\001\002\000\054\003\ufef9\110\ufef9\111\ufef9" +
    "\112\ufef9\113\ufef9\114\ufef9\115\ufef9\116\ufef9\117\ufef9\120" +
    "\ufef9\124\ufef9\127\ufef9\131\ufef9\136\ufef9\137\ufef9\140\ufef9" +
    "\141\ufef9\142\ufef9\203\ufef9\205\ufef9\210\ufef9\001\002\000" +
    "\004\175\375\001\002\000\004\202\uff33\001\002\000\030" +
    "\003\151\110\133\111\106\112\124\113\103\114\143\151" +
    "\150\205\155\207\145\212\153\213\147\001\002\000\010" +
    "\003\156\164\160\175\u0100\001\002\000\012\003\uff2e\164" +
    "\uff2e\175\uff2e\202\uff2e\001\002\000\006\205\132\210\127" +
    "\001\002\000\012\003\163\171\u0104\202\uff19\206\162\001" +
    "\002\000\004\202\uff29\001\002\000\030\003\151\110\133" +
    "\111\106\112\124\113\103\114\143\151\150\205\155\207" +
    "\145\212\153\213\147\001\002\000\010\003\156\164\160" +
    "\202\uff1a\001\002\000\006\205\132\210\127\001\002\000" +
    "\012\003\163\171\u0108\202\uff14\206\162\001\002\000\010" +
    "\003\u010b\146\u010c\147\u010d\001\002\000\004\202\uff28\001" +
    "\002\000\004\202\uff15\001\002\000\004\202\uff0f\001\002" +
    "\000\004\202\uff11\001\002\000\004\202\uff10\001\002\000" +
    "\056\003\uff3b\110\uff3b\111\uff3b\112\uff3b\113\uff3b\114\uff3b" +
    "\115\uff3b\116\uff3b\117\uff3b\120\uff3b\124\uff3b\127\uff3b\131" +
    "\uff3b\136\uff3b\137\uff3b\140\uff3b\141\uff3b\142\uff3b\177\uff3b" +
    "\203\uff3b\205\uff3b\210\uff3b\001\002\000\020\144\171\145" +
    "\166\162\271\165\272\174\273\205\205\210\204\001\002" +
    "\000\022\003\u0112\144\171\145\166\162\271\165\272\174" +
    "\273\205\205\210\204\001\002\000\036\003\u0118\152\300" +
    "\153\305\154\303\155\311\156\276\157\301\160\310\161" +
    "\275\164\277\165\307\166\302\167\304\175\u0119\001\002" +
    "\000\004\175\u0113\001\002\000\004\125\u0114\001\002\000" +
    "\004\122\u0115\001\002\000\004\200\u0116\001\002\000\004" +
    "\203\u0117\001\002\000\054\003\ufefa\110\ufefa\111\ufefa\112" +
    "\ufefa\113\ufefa\114\ufefa\115\ufefa\116\ufefa\117\ufefa\120\ufefa" +
    "\124\ufefa\127\ufefa\131\ufefa\136\ufefa\137\ufefa\140\ufefa\141" +
    "\ufefa\142\ufefa\203\ufefa\205\ufefa\210\ufefa\001\002\000\004" +
    "\125\u0128\001\002\000\006\003\u011a\125\u011b\001\002\000" +
    "\004\122\u0125\001\002\000\012\003\u011d\122\u011c\205\ufef2" +
    "\210\ufef2\001\002\000\006\003\u0120\200\u0121\001\002\000" +
    "\004\200\u011e\001\002\000\004\203\u011f\001\002\000\054" +
    "\003\ufef5\110\ufef5\111\ufef5\112\ufef5\113\ufef5\114\ufef5\115" +
    "\ufef5\116\ufef5\117\ufef5\120\ufef5\124\ufef5\127\ufef5\131\ufef5" +
    "\136\ufef5\137\ufef5\140\ufef5\141\ufef5\142\ufef5\203\ufef5\205" +
    "\ufef5\210\ufef5\001\002\000\004\203\u0124\001\002\000\006" +
    "\003\u0123\203\u0122\001\002\000\054\003\ufefb\110\ufefb\111" +
    "\ufefb\112\ufefb\113\ufefb\114\ufefb\115\ufefb\116\ufefb\117\ufefb" +
    "\120\ufefb\124\ufefb\127\ufefb\131\ufefb\136\ufefb\137\ufefb\140" +
    "\ufefb\141\ufefb\142\ufefb\203\ufefb\205\ufefb\210\ufefb\001\002" +
    "\000\054\003\ufef3\110\ufef3\111\ufef3\112\ufef3\113\ufef3\114" +
    "\ufef3\115\ufef3\116\ufef3\117\ufef3\120\ufef3\124\ufef3\127\ufef3" +
    "\131\ufef3\136\ufef3\137\ufef3\140\ufef3\141\ufef3\142\ufef3\203" +
    "\ufef3\205\ufef3\210\ufef3\001\002\000\054\003\ufef4\110\ufef4" +
    "\111\ufef4\112\ufef4\113\ufef4\114\ufef4\115\ufef4\116\ufef4\117" +
    "\ufef4\120\ufef4\124\ufef4\127\ufef4\131\ufef4\136\ufef4\137\ufef4" +
    "\140\ufef4\141\ufef4\142\ufef4\203\ufef4\205\ufef4\210\ufef4\001" +
    "\002\000\004\200\u0126\001\002\000\004\203\u0127\001\002" +
    "\000\054\003\ufef6\110\ufef6\111\ufef6\112\ufef6\113\ufef6\114" +
    "\ufef6\115\ufef6\116\ufef6\117\ufef6\120\ufef6\124\ufef6\127\ufef6" +
    "\131\ufef6\136\ufef6\137\ufef6\140\ufef6\141\ufef6\142\ufef6\203" +
    "\ufef6\205\ufef6\210\ufef6\001\002\000\004\122\u0129\001\002" +
    "\000\004\200\u012a\001\002\000\004\203\u012b\001\002\000" +
    "\054\003\ufef7\110\ufef7\111\ufef7\112\ufef7\113\ufef7\114\ufef7" +
    "\115\ufef7\116\ufef7\117\ufef7\120\ufef7\124\ufef7\127\ufef7\131" +
    "\ufef7\136\ufef7\137\ufef7\140\ufef7\141\ufef7\142\ufef7\203\ufef7" +
    "\205\ufef7\210\ufef7\001\002\000\034\152\300\153\305\154" +
    "\303\155\311\156\276\157\301\160\310\161\275\164\277" +
    "\165\307\166\302\167\304\175\u012d\001\002\000\004\125" +
    "\u012e\001\002\000\004\122\u012f\001\002\000\004\200\u0130" +
    "\001\002\000\004\203\u0131\001\002\000\054\003\ufef8\110" +
    "\ufef8\111\ufef8\112\ufef8\113\ufef8\114\ufef8\115\ufef8\116\ufef8" +
    "\117\ufef8\120\ufef8\124\ufef8\127\ufef8\131\ufef8\136\ufef8\137" +
    "\ufef8\140\ufef8\141\ufef8\142\ufef8\203\ufef8\205\ufef8\210\ufef8" +
    "\001\002\000\056\003\uff3d\110\uff3d\111\uff3d\112\uff3d\113" +
    "\uff3d\114\uff3d\115\uff3d\116\uff3d\117\uff3d\120\uff3d\124\uff3d" +
    "\127\uff3d\131\uff3d\136\uff3d\137\uff3d\140\uff3d\141\uff3d\142" +
    "\uff3d\177\uff3d\203\uff3d\205\uff3d\210\uff3d\001\002\000\060" +
    "\003\uff36\110\uff36\111\uff36\112\uff36\113\uff36\114\uff36\115" +
    "\uff36\116\uff36\117\uff36\120\uff36\124\uff36\126\uff36\127\uff36" +
    "\131\uff36\136\uff36\137\uff36\140\uff36\141\uff36\142\uff36\177" +
    "\uff36\203\uff36\205\uff36\210\uff36\001\002\000\006\205\132" +
    "\210\127\001\002\000\012\003\163\171\u0136\202\uff12\206" +
    "\162\001\002\000\004\150\u0138\001\002\000\004\202\uff27" +
    "\001\002\000\004\202\uff13\001\002\000\006\205\132\210" +
    "\127\001\002\000\012\003\163\171\u013b\202\uff1b\206\162" +
    "\001\002\000\016\144\171\145\166\165\202\174\203\205" +
    "\205\210\204\001\002\000\004\202\uff2a\001\002\000\014" +
    "\164\212\165\207\166\210\167\213\202\uff1c\001\002\000" +
    "\020\144\171\145\166\162\271\165\272\174\273\205\205" +
    "\210\204\001\002\000\034\152\300\153\305\154\303\155" +
    "\311\156\276\157\301\160\310\161\275\164\277\165\307" +
    "\166\302\167\304\175\u0140\001\002\000\004\132\u0141\001" +
    "\002\000\004\122\u0142\001\002\000\004\200\u0143\001\002" +
    "\000\004\203\u0144\001\002\000\054\003\uff3f\110\uff3f\111" +
    "\uff3f\112\uff3f\113\uff3f\114\uff3f\115\uff3f\116\uff3f\117\uff3f" +
    "\120\uff3f\124\uff3f\127\uff3f\131\uff3f\136\uff3f\137\uff3f\140" +
    "\uff3f\141\uff3f\142\uff3f\203\uff3f\205\uff3f\210\uff3f\001\002" +
    "\000\054\003\130\110\133\111\106\112\124\113\103\114" +
    "\143\115\136\116\126\117\131\120\102\124\117\127\140" +
    "\131\111\136\134\137\112\140\122\141\113\142\123\203" +
    "\u0146\205\132\210\127\001\002\000\004\201\u0147\001\002" +
    "\000\004\123\u0148\001\002\000\056\003\ufee4\110\ufee4\111" +
    "\ufee4\112\ufee4\113\ufee4\114\ufee4\115\ufee4\116\ufee4\117\ufee4" +
    "\120\ufee4\124\ufee4\127\ufee4\131\ufee4\136\ufee4\137\ufee4\140" +
    "\ufee4\141\ufee4\142\ufee4\177\ufee4\203\ufee4\205\ufee4\210\ufee4" +
    "\001\002\000\030\003\151\110\133\111\106\112\124\113" +
    "\103\114\143\151\150\205\155\207\145\212\153\213\147" +
    "\001\002\000\010\003\156\164\160\175\u014b\001\002\000" +
    "\012\003\uff2f\164\uff2f\175\uff2f\202\uff2f\001\002\000\054" +
    "\003\130\110\133\111\106\112\124\113\103\114\143\115" +
    "\136\116\126\117\131\120\102\124\117\127\140\131\111" +
    "\136\134\137\112\140\122\141\113\142\123\203\u014d\205" +
    "\132\210\127\001\002\000\004\201\u014e\001\002\000\004" +
    "\123\u014f\001\002\000\060\003\ufef0\110\ufef0\111\ufef0\112" +
    "\ufef0\113\ufef0\114\ufef0\115\ufef0\116\ufef0\117\ufef0\120\ufef0" +
    "\124\ufef0\126\ufef0\127\ufef0\131\ufef0\136\ufef0\137\ufef0\140" +
    "\ufef0\141\ufef0\142\ufef0\177\ufef0\203\ufef0\205\ufef0\210\ufef0" +
    "\001\002\000\060\003\ufeeb\110\ufeeb\111\ufeeb\112\ufeeb\113" +
    "\ufeeb\114\ufeeb\115\ufeeb\116\ufeeb\117\ufeeb\120\ufeeb\124\ufeeb" +
    "\126\260\127\ufeeb\131\ufeeb\136\ufeeb\137\ufeeb\140\ufeeb\141" +
    "\ufeeb\142\ufeeb\177\ufeeb\203\ufeeb\205\ufeeb\210\ufeeb\001\002" +
    "\000\056\003\ufefd\110\ufefd\111\ufefd\112\ufefd\113\ufefd\114" +
    "\ufefd\115\ufefd\116\ufefd\117\ufefd\120\ufefd\124\ufefd\127\ufefd" +
    "\131\ufefd\136\ufefd\137\ufefd\140\ufefd\141\ufefd\142\ufefd\177" +
    "\ufefd\203\ufefd\205\ufefd\210\ufefd\001\002\000\030\003\151" +
    "\110\133\111\106\112\124\113\103\114\143\151\150\205" +
    "\155\207\145\212\153\213\147\001\002\000\010\003\156" +
    "\164\160\175\u0154\001\002\000\012\003\uff2d\164\uff2d\175" +
    "\uff2d\202\uff2d\001\002\000\004\175\u0156\001\002\000\004" +
    "\202\uff31\001\002\000\004\175\u0158\001\002\000\004\176" +
    "\u0159\001\002\000\054\003\uff3f\110\uff3f\111\uff3f\112\uff3f" +
    "\113\uff3f\114\uff3f\115\uff3f\116\uff3f\117\uff3f\120\uff3f\124" +
    "\uff3f\127\uff3f\131\uff3f\136\uff3f\137\uff3f\140\uff3f\141\uff3f" +
    "\142\uff3f\177\uff3f\205\uff3f\210\uff3f\001\002\000\054\003" +
    "\130\110\133\111\106\112\124\113\103\114\143\115\136" +
    "\116\126\117\131\120\102\124\117\127\140\131\111\136" +
    "\134\137\112\140\122\141\113\142\123\177\u015b\205\132" +
    "\210\127\001\002\000\012\003\uff41\134\uff41\135\uff41\163" +
    "\uff41\001\002\000\012\154\u0162\163\u0161\205\054\210\053" +
    "\001\002\000\012\154\uffaf\163\uffaf\205\uffaf\210\uffaf\001" +
    "\002\000\012\154\uffb2\163\uffb2\205\uffb2\210\uffb2\001\002" +
    "\000\010\003\uffd7\154\uffd7\163\uffd7\001\002\000\012\154" +
    "\uffb0\163\uffb0\205\uffb0\210\uffb0\001\002\000\004\011\u01b5" +
    "\001\002\000\012\011\u0172\020\u0173\022\u0174\023\u0175\001" +
    "\002\000\012\154\uffb1\163\uffb1\205\uffb1\210\uffb1\001\002" +
    "\000\012\154\uffb1\163\uffb1\205\uffb1\210\uffb1\001\002\000" +
    "\012\154\uffb1\163\uffb1\205\uffb1\210\uffb1\001\002\000\012" +
    "\154\u0162\163\u0161\205\054\210\053\001\002\000\012\154" +
    "\uffac\163\uffac\205\uffac\210\uffac\001\002\000\012\154\u0162" +
    "\163\u0169\205\054\210\053\001\002\000\004\023\u016b\001" +
    "\002\000\012\154\uffad\163\uffad\205\uffad\210\uffad\001\002" +
    "\000\004\156\u016c\001\002\000\014\003\uffba\154\uffba\163" +
    "\uffba\205\uffba\210\uffba\001\002\000\012\154\u0162\163\u016f" +
    "\205\054\210\053\001\002\000\012\154\uffae\163\uffae\205" +
    "\uffae\210\uffae\001\002\000\004\022\u0170\001\002\000\004" +
    "\156\u0171\001\002\000\014\003\uffbb\154\uffbb\163\uffbb\205" +
    "\uffbb\210\uffbb\001\002\000\010\003\uff9b\156\uff9b\176\uff9b" +
    "\001\002\000\004\156\u01af\001\002\000\010\003\uff73\156" +
    "\uff73\176\uff73\001\002\000\010\003\uff6f\156\uff6f\176\uff6f" +
    "\001\002\000\010\003\u0178\156\u0177\176\u017b\001\002\000" +
    "\012\154\uffc3\163\uffc3\205\uffc3\210\uffc3\001\002\000\010" +
    "\003\uff6e\156\uff6e\176\uff6e\001\002\000\010\003\uff6d\156" +
    "\uff6d\176\uff6d\001\002\000\010\003\uff70\156\uff70\176\uff70" +
    "\001\002\000\014\027\u017d\030\u017f\031\u0180\032\u017e\034" +
    "\u017c\001\002\000\004\171\u01a7\001\002\000\004\171\u0193" +
    "\001\002\000\004\171\u018c\001\002\000\004\171\u0189\001" +
    "\002\000\004\171\u0181\001\002\000\014\071\u0185\072\u0186" +
    "\073\u0183\074\u0184\075\u0187\001\002\000\004\177\u0188\001" +
    "\002\000\004\177\uff54\001\002\000\004\177\uff53\001\002" +
    "\000\004\177\uff56\001\002\000\004\177\uff55\001\002\000" +
    "\004\177\uff52\001\002\000\010\003\uff6b\156\uff6b\176\uff6b" +
    "\001\002\000\004\067\u018a\001\002\000\004\177\u018b\001" +
    "\002\000\010\003\uff6c\156\uff6c\176\uff6c\001\002\000\012" +
    "\076\u018d\077\u018f\100\u0191\101\u0190\001\002\000\004\177" +
    "\uff51\001\002\000\004\177\u0192\001\002\000\004\177\uff50" +
    "\001\002\000\004\177\uff4e\001\002\000\004\177\uff4f\001" +
    "\002\000\010\003\uff6a\156\uff6a\176\uff6a\001\002\000\044" +
    "\046\u0198\047\u0199\050\u0197\051\u019b\052\u019a\053\u019d\054" +
    "\u01a4\055\u0196\056\u019c\057\u019f\060\u0194\061\u01a3\062\u01a5" +
    "\063\u019e\064\u01a0\065\u0195\066\u01a1\001\002\000\004\177" +
    "\uff5d\001\002\000\004\177\uff58\001\002\000\004\177\uff60" +
    "\001\002\000\004\177\uff65\001\002\000\004\177\uff67\001" +
    "\002\000\004\177\uff66\001\002\000\004\177\uff63\001\002" +
    "\000\004\177\uff64\001\002\000\004\177\uff5f\001\002\000" +
    "\004\177\uff62\001\002\000\004\177\uff5a\001\002\000\004" +
    "\177\uff5e\001\002\000\004\177\uff59\001\002\000\004\177" +
    "\uff57\001\002\000\004\177\u01a6\001\002\000\004\177\uff5c" +
    "\001\002\000\004\177\uff61\001\002\000\004\177\uff5b\001" +
    "\002\000\010\003\uff68\156\uff68\176\uff68\001\002\000\004" +
    "\207\u01a8\001\002\000\004\177\u01a9\001\002\000\010\003" +
    "\uff69\156\uff69\176\uff69\001\002\000\010\003\u01ac\156\u01ab" +
    "\176\u017b\001\002\000\012\154\uffc4\163\uffc4\205\uffc4\210" +
    "\uffc4\001\002\000\010\003\uff72\156\uff72\176\uff72\001\002" +
    "\000\010\003\uff71\156\uff71\176\uff71\001\002\000\010\003" +
    "\uff74\156\uff74\176\uff74\001\002\000\014\003\uffc6\154\uffc6" +
    "\163\uffc6\205\uffc6\210\uffc6\001\002\000\010\003\u01b3\156" +
    "\u01b2\176\u017b\001\002\000\010\003\uff9c\156\uff9c\176\uff9c" +
    "\001\002\000\012\154\uffcc\163\uffcc\205\uffcc\210\uffcc\001" +
    "\002\000\010\003\uff9a\156\uff9a\176\uff9a\001\002\000\010" +
    "\003\uff99\156\uff99\176\uff99\001\002\000\004\156\u01b6\001" +
    "\002\000\014\003\uffc2\154\uffc2\163\uffc2\205\uffc2\210\uffc2" +
    "\001\002\000\012\154\u0162\163\u0169\205\054\210\053\001" +
    "\002\000\010\003\uffce\154\uffce\163\uffce\001\002\000\012" +
    "\154\u0162\163\u016f\205\054\210\053\001\002\000\010\003" +
    "\uffcf\154\uffcf\163\uffcf\001\002\000\006\154\032\163\u01bc" +
    "\001\002\000\004\016\u01bf\001\002\000\006\154\uffb4\163" +
    "\uffb4\001\002\000\010\003\uffd3\154\uffd3\163\uffd3\001\002" +
    "\000\004\156\u01c0\001\002\000\010\003\uffbe\154\uffbe\163" +
    "\uffbe\001\002\000\010\163\u01c3\205\054\210\053\001\002" +
    "\000\010\003\uffd5\154\uffd5\163\uffd5\001\002\000\004\013" +
    "\u01c4\001\002\000\004\156\u01c5\001\002\000\010\003\uffc0" +
    "\154\uffc0\163\uffc0\001\002\000\010\163\u01c8\205\054\210" +
    "\053\001\002\000\010\003\uffd0\154\uffd0\163\uffd0\001\002" +
    "\000\004\021\u01c9\001\002\000\004\156\u01ca\001\002\000" +
    "\010\003\uffbc\154\uffbc\163\uffbc\001\002\000\010\003\uff77" +
    "\156\uff77\176\uff77\001\002\000\010\003\uff97\156\uff97\176" +
    "\uff97\001\002\000\004\156\u0221\001\002\000\010\003\uff85" +
    "\156\uff85\176\uff85\001\002\000\010\003\uff89\156\uff89\176" +
    "\uff89\001\002\000\010\003\uff92\156\uff92\176\uff92\001\002" +
    "\000\010\003\uff7f\156\uff7f\176\uff7f\001\002\000\010\003" +
    "\u01d4\156\u01d3\176\u01d6\001\002\000\004\163\uffc7\001\002" +
    "\000\010\003\uff7e\156\uff7e\176\uff7e\001\002\000\010\003" +
    "\uff80\156\uff80\176\uff80\001\002\000\014\034\u01d7\041\u01da" +
    "\042\u01d9\043\u01db\044\u01d8\001\002\000\004\171\u01ec\001" +
    "\002\000\004\171\u01e7\001\002\000\004\171\u01e4\001\002" +
    "\000\004\171\u01e1\001\002\000\004\171\u01dc\001\002\000" +
    "\006\067\u01df\070\u01de\001\002\000\004\177\u01e0\001\002" +
    "\000\004\177\uff4a\001\002\000\004\177\uff4b\001\002\000" +
    "\010\003\uff7b\156\uff7b\176\uff7b\001\002\000\004\213\u01e2" +
    "\001\002\000\004\177\u01e3\001\002\000\010\003\uff7d\156" +
    "\uff7d\176\uff7d\001\002\000\006\067\u01df\070\u01de\001\002" +
    "\000\004\177\u01e6\001\002\000\010\003\uff7c\156\uff7c\176" +
    "\uff7c\001\002\000\006\212\u01e9\213\u01ea\001\002\000\004" +
    "\177\u01eb\001\002\000\004\177\uffa2\001\002\000\004\177" +
    "\uffa1\001\002\000\010\003\uff7a\156\uff7a\176\uff7a\001\002" +
    "\000\004\207\u01ed\001\002\000\004\177\u01ee\001\002\000" +
    "\010\003\uff79\156\uff79\176\uff79\001\002\000\010\003\u01f1" +
    "\156\u01f0\176\u01f3\001\002\000\010\163\uffca\205\uffca\210" +
    "\uffca\001\002\000\010\003\uff91\156\uff91\176\uff91\001\002" +
    "\000\010\003\uff93\156\uff93\176\uff93\001\002\000\016\030" +
    "\u01f8\031\u01f9\032\u01f7\034\u01f4\036\u01f6\037\u01f5\001\002" +
    "\000\004\171\u0209\001\002\000\004\171\u0206\001\002\000" +
    "\004\171\u0203\001\002\000\004\171\u0200\001\002\000\004" +
    "\171\u01fd\001\002\000\004\171\u01fa\001\002\000\014\071" +
    "\u0185\072\u0186\073\u0183\074\u0184\075\u0187\001\002\000\004" +
    "\177\u01fc\001\002\000\010\003\uff8f\156\uff8f\176\uff8f\001" +
    "\002\000\004\067\u01fe\001\002\000\004\177\u01ff\001\002" +
    "\000\010\003\uff90\156\uff90\176\uff90\001\002\000\012\076" +
    "\u018d\077\u018f\100\u0191\101\u0190\001\002\000\004\177\u0202" +
    "\001\002\000\010\003\uff8e\156\uff8e\176\uff8e\001\002\000" +
    "\004\214\u0204\001\002\000\004\177\u0205\001\002\000\010" +
    "\003\uff8c\156\uff8c\176\uff8c\001\002\000\004\214\u0207\001" +
    "\002\000\004\177\u0208\001\002\000\010\003\uff8b\156\uff8b" +
    "\176\uff8b\001\002\000\004\207\u020a\001\002\000\004\177" +
    "\u020b\001\002\000\010\003\uff8d\156\uff8d\176\uff8d\001\002" +
    "\000\010\003\u020e\156\u020d\176\u017b\001\002\000\004\154" +
    "\uffc9\001\002\000\010\003\uff88\156\uff88\176\uff88\001\002" +
    "\000\010\003\uff87\156\uff87\176\uff87\001\002\000\010\003" +
    "\uff8a\156\uff8a\176\uff8a\001\002\000\010\003\u0213\156\u0212" +
    "\176\u0216\001\002\000\006\154\uffc8\163\uffc8\001\002\000" +
    "\010\003\uff84\156\uff84\176\uff84\001\002\000\010\003\uff83" +
    "\156\uff83\176\uff83\001\002\000\010\003\uff86\156\uff86\176" +
    "\uff86\001\002\000\020\026\u0218\027\u017d\030\u017f\031\u0180" +
    "\032\u017e\034\u017c\040\u0217\001\002\000\004\171\u021c\001" +
    "\002\000\004\171\u0219\001\002\000\044\046\u0198\047\u0199" +
    "\050\u0197\051\u019b\052\u019a\053\u019d\054\u01a4\055\u0196\056" +
    "\u019c\057\u019f\060\u0194\061\u01a3\062\u01a5\063\u019e\064\u01a0" +
    "\065\u0195\066\u01a1\001\002\000\004\177\u021b\001\002\000" +
    "\010\003\uff81\156\uff81\176\uff81\001\002\000\006\106\u021e" +
    "\107\u021d\001\002\000\004\177\uff4c\001\002\000\004\177" +
    "\uff4d\001\002\000\004\177\u0220\001\002\000\010\003\uff82" +
    "\156\uff82\176\uff82\001\002\000\012\003\uffe5\134\uffe5\135" +
    "\uffe5\163\uffe5\001\002\000\010\003\u0225\156\u0224\176\u0227" +
    "\001\002\000\010\003\uff98\156\uff98\176\uff98\001\002\000" +
    "\010\163\uffcb\205\uffcb\210\uffcb\001\002\000\010\003\uff96" +
    "\156\uff96\176\uff96\001\002\000\010\003\uff94\156\uff94\176" +
    "\uff94\001\002\000\016\027\u017d\030\u017f\031\u0180\032\u017e" +
    "\033\u0228\034\u017c\001\002\000\004\171\u0229\001\002\000" +
    "\012\102\u022c\103\u022e\104\u022b\105\u022d\001\002\000\004" +
    "\177\u022f\001\002\000\004\177\uff47\001\002\000\004\177" +
    "\uff49\001\002\000\004\177\uff46\001\002\000\004\177\uff48" +
    "\001\002\000\010\003\uff95\156\uff95\176\uff95\001\002\000" +
    "\010\003\u0232\156\u0231\176\u017b\001\002\000\010\163\uffc5" +
    "\205\uffc5\210\uffc5\001\002\000\010\003\uff76\156\uff76\176" +
    "\uff76\001\002\000\010\003\uff75\156\uff75\176\uff75\001\002" +
    "\000\010\003\uff78\156\uff78\176\uff78\001\002\000\010\163" +
    "\u0237\205\054\210\053\001\002\000\010\003\uffd6\154\uffd6" +
    "\163\uffd6\001\002\000\004\012\u0238\001\002\000\004\156" +
    "\u0239\001\002\000\010\003\uffc1\154\uffc1\163\uffc1\001\002" +
    "\000\004\156\u023b\001\002\000\006\154\uffee\163\uffee\001" +
    "\002\000\010\003\uffd2\154\uffd2\163\uffd2\001\002\000\004" +
    "\017\u023e\001\002\000\004\156\u023f\001\002\000\010\003" +
    "\uffbd\154\uffbd\163\uffbd\001\002\000\006\154\u024c\163\u024f" +
    "\001\002\000\004\010\u0242\001\002\000\010\003\uff9f\156" +
    "\uff9f\176\uff9f\001\002\000\010\003\u0245\156\u0244\176\u0247" +
    "\001\002\000\010\003\ufff0\154\ufff0\163\ufff0\001\002\000" +
    "\010\003\uff9e\156\uff9e\176\uff9e\001\002\000\010\003\uffa0" +
    "\156\uffa0\176\uffa0\001\002\000\004\026\u0248\001\002\000" +
    "\004\171\u0249\001\002\000\044\046\u0198\047\u0199\050\u0197" +
    "\051\u019b\052\u019a\053\u019d\054\u01a4\055\u0196\056\u019c\057" +
    "\u019f\060\u0194\061\u01a3\062\u01a5\063\u019e\064\u01a0\065\u0195" +
    "\066\u01a1\001\002\000\004\177\u024b\001\002\000\010\003" +
    "\uff9d\156\uff9d\176\uff9d\001\002\000\004\024\u0253\001\002" +
    "\000\004\163\u024f\001\002\000\004\002\ufffb\001\002\000" +
    "\004\004\u0250\001\002\000\004\156\u0251\001\002\000\004" +
    "\002\ufff5\001\002\000\004\002\ufff7\001\002\000\004\156" +
    "\u0254\001\002\000\010\134\uff43\135\uff43\163\uff43\001\002" +
    "\000\010\134\066\135\071\163\u0256\001\002\000\004\024" +
    "\u0257\001\002\000\004\156\u0258\001\002\000\010\003\uff45" +
    "\154\uff45\163\uff45\001\002\000\004\163\u024f\001\002\000" +
    "\004\002\ufffd\001\002\000\004\002\ufffa\001\002\000\004" +
    "\156\u025d\001\002\000\010\003\ufff3\154\ufff3\163\ufff3\001" +
    "\002\000\004\005\u025c\001\002\000\006\003\020\154\017" +
    "\001\002\000\006\154\u024c\163\u024f\001\002\000\006\003" +
    "\020\154\u0241\001\002\000\006\154\u024c\163\u024f\001\002" +
    "\000\004\163\u024f\001\002\000\004\002\ufff9\001\002\000" +
    "\004\002\ufff6\001\002\000\004\163\u024f\001\002\000\004" +
    "\002\ufffc\001\002\000\004\002\ufff8\001\002\000\010\003" +
    "\u026b\154\u026c\163\u0270\001\002\000\006\003\u028a\163\u028b" +
    "\001\002\000\010\003\uffeb\154\uffeb\163\uffeb\001\002\000" +
    "\010\006\u027e\007\u027d\024\u01cd\001\002\000\012\003\uffdd" +
    "\163\uffdd\205\uffdd\210\uffdd\001\002\000\010\003\uffed\154" +
    "\uffed\163\uffed\001\002\000\006\003\ufff4\154\ufff4\001\002" +
    "\000\004\005\u0274\001\002\000\012\003\uff43\134\uff43\135" +
    "\uff43\163\uff43\001\002\000\012\003\070\134\066\135\071" +
    "\163\073\001\002\000\010\003\uffe8\154\uffe8\163\uffe8\001" +
    "\002\000\004\156\u0275\001\002\000\006\003\ufff2\154\ufff2" +
    "\001\002\000\012\003\u0278\163\u027a\205\054\210\053\001" +
    "\002\000\012\003\uffde\163\uffde\205\uffde\210\uffde\001\002" +
    "\000\010\003\uffe1\154\uffe1\163\uffe1\001\002\000\010\003" +
    "\uffe9\154\uffe9\163\uffe9\001\002\000\004\006\u027b\001\002" +
    "\000\004\156\u027c\001\002\000\010\003\uffe2\154\uffe2\163" +
    "\uffe2\001\002\000\010\003\uffa5\156\uffa5\176\uffa5\001\002" +
    "\000\004\156\u027f\001\002\000\012\003\uffe6\163\uffe6\205" +
    "\uffe6\210\uffe6\001\002\000\010\003\u0283\156\u0282\176\u0284" +
    "\001\002\000\010\003\uffa6\156\uffa6\176\uffa6\001\002\000" +
    "\006\003\uffe7\163\uffe7\001\002\000\010\003\uffa4\156\uffa4" +
    "\176\uffa4\001\002\000\004\025\u0285\001\002\000\004\171" +
    "\u0286\001\002\000\004\213\u0287\001\002\000\004\177\u0288" +
    "\001\002\000\010\003\uffa3\156\uffa3\176\uffa3\001\002\000" +
    "\010\003\uffea\154\uffea\163\uffea\001\002\000\010\003\uffe3" +
    "\154\uffe3\163\uffe3\001\002\000\004\007\u028c\001\002\000" +
    "\004\156\u028d\001\002\000\010\003\uffe4\154\uffe4\163\uffe4" +
    "\001\002\000\010\003\uffaa\156\uffaa\176\uffaa\001\002\000" +
    "\010\003\u0291\156\u0290\176\u0293\001\002\000\004\154\uffff" +
    "\001\002\000\010\003\uffa9\156\uffa9\176\uffa9\001\002\000" +
    "\010\003\uffab\156\uffab\176\uffab\001\002\000\006\034\u0294" +
    "\035\u0295\001\002\000\004\171\u0299\001\002\000\004\171" +
    "\u0296\001\002\000\006\212\u01e9\213\u01ea\001\002\000\004" +
    "\177\u0298\001\002\000\010\003\uffa7\156\uffa7\176\uffa7\001" +
    "\002\000\004\207\u029a\001\002\000\004\177\u029b\001\002" +
    "\000\010\003\uffa8\156\uffa8\176\uffa8\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0299\000\006\002\006\140\005\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\003\014\005\012\014\010" +
    "\141\011\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\015\u0268\001\001\000\006\003\u025e" +
    "\141\011\001\001\000\002\001\001\000\010\004\015\005" +
    "\020\142\021\001\001\000\006\005\u0258\046\u0259\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\004\u023f\142" +
    "\021\001\001\000\004\016\022\001\001\000\034\021\030" +
    "\146\041\147\040\150\026\151\033\152\042\153\035\154" +
    "\024\155\023\156\032\157\036\160\037\176\027\001\001" +
    "\000\002\001\001\000\004\166\u023b\001\001\000\002\001" +
    "\001\000\004\044\u0234\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\044\u01c5\001\001\000" +
    "\004\044\u01c0\001\001\000\002\001\001\000\004\037\u01ba" +
    "\001\001\000\004\107\u01b8\001\001\000\004\107\u01b6\001" +
    "\001\000\004\107\u015b\001\001\000\004\045\064\001\001" +
    "\000\006\022\045\036\043\001\001\000\006\022\057\164" +
    "\061\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\044\050\001\001\000\004\023\051\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\102\071\201\066\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\077\100\001\001\000\034\007\115\035" +
    "\141\100\104\101\106\111\120\112\117\113\114\114\136" +
    "\120\124\124\113\137\140\173\134\174\103\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\077\u014b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\u0138\001\001" +
    "\000\004\010\u0133\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\u0105\001\001\000\004\010" +
    "\u0100\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\350" +
    "\001\001\000\012\035\141\101\254\124\113\137\140\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\011\153\012\145\112\151\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\011\160\112\151\001\001\000\002\001\001" +
    "\000\004\035\221\001\001\000\002\001\001\000\010\127" +
    "\175\135\177\136\176\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\135\217\136\176" +
    "\001\001\000\006\135\205\136\176\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\135\216" +
    "\136\176\001\001\000\006\135\215\136\176\001\001\000" +
    "\002\001\001\000\006\135\214\136\176\001\001\000\006" +
    "\135\213\136\176\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\035\225\115" +
    "\224\001\001\000\004\035\247\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\117\230\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\035\236\116\234\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\077\243\001\001\000" +
    "\034\007\115\035\141\100\104\101\106\111\120\112\117" +
    "\113\114\114\136\120\124\124\113\137\140\173\134\174" +
    "\103\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\117\251\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\121\255\001\001\000\006\122\256\123\260\001\001\000" +
    "\002\001\001\000\012\035\141\101\262\124\113\137\140" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\125\266\126\265\136\267" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\125\326\126\265\136\267\001\001\000\010" +
    "\125\325\126\265\136\267\001\001\000\010\125\273\126" +
    "\265\136\267\001\001\000\002\001\001\000\010\125\324" +
    "\126\265\136\267\001\001\000\010\125\323\126\265\136" +
    "\267\001\001\000\010\125\322\126\265\136\267\001\001" +
    "\000\010\125\321\126\265\136\267\001\001\000\010\125" +
    "\320\126\265\136\267\001\001\000\010\125\317\126\265" +
    "\136\267\001\001\000\010\125\316\126\265\136\267\001" +
    "\001\000\010\125\315\126\265\136\267\001\001\000\010" +
    "\125\314\126\265\136\267\001\001\000\002\001\001\000" +
    "\010\125\313\126\265\136\267\001\001\000\010\125\312" +
    "\126\265\136\267\001\001\000\010\125\311\126\265\136" +
    "\267\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\035\141\101\332\124\113\137\140\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\077\335" +
    "\001\001\000\034\007\115\035\141\100\104\101\106\111" +
    "\120\112\117\113\114\114\136\120\124\124\113\137\140" +
    "\173\134\174\103\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\077\343" +
    "\001\001\000\034\007\115\035\141\100\104\101\106\111" +
    "\120\112\117\113\114\114\136\120\124\124\113\137\140" +
    "\173\134\174\103\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\035\141" +
    "\137\351\001\001\000\004\130\353\001\001\000\006\135" +
    "\354\136\176\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\011\153\012\356\112\151\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\011\153\012\361\112\151" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\125\365\126\265\136\267\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\011\153\012\376\112\151\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\035\141" +
    "\137\u0101\001\001\000\004\131\u0102\001\001\000\002\001" +
    "\001\000\010\011\153\012\u0104\112\151\001\001\000\002" +
    "\001\001\000\006\035\141\137\u0106\001\001\000\004\132" +
    "\u0108\001\001\000\004\013\u0109\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\125\u012b\126\265" +
    "\136\267\001\001\000\010\125\u0110\126\265\136\267\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\035\141\137\u0134\001\001\000\004\133\u0136\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\035\141\137\u0139\001\001\000\004\134\u013b\001\001\000" +
    "\006\135\u013c\136\176\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\125\u013e\126\265\136\267\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\077\u0144\001\001\000" +
    "\034\007\115\035\141\100\104\101\106\111\120\112\117" +
    "\113\114\114\136\120\124\124\113\137\140\173\134\174" +
    "\103\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\011\153\012\u0149\112\151\001\001\000" +
    "\002\001\001\000\002\001\001\000\034\007\115\035\141" +
    "\100\104\101\106\111\120\112\117\113\114\114\136\120" +
    "\124\124\113\137\140\173\134\174\103\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\121\u014f\001\001\000" +
    "\006\122\256\123\u0150\001\001\000\002\001\001\000\010" +
    "\011\153\012\u0152\112\151\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\077\u0159\001\001\000" +
    "\034\007\115\035\141\100\104\101\106\111\120\112\117" +
    "\113\114\114\136\120\124\124\113\137\140\173\134\174" +
    "\103\001\001\000\002\001\001\000\020\023\u015f\110\u015d" +
    "\147\u0164\155\u015c\157\u0162\160\u0163\161\u015e\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\107" +
    "\u016c\001\001\000\004\107\u0167\001\001\000\004\107\u0165" +
    "\001\001\000\020\023\u015f\110\u015d\147\u0164\155\u015c\157" +
    "\u0162\160\u0163\161\u0166\001\001\000\002\001\001\000\020" +
    "\023\u015f\110\u015d\147\u0164\155\u015c\157\u0162\160\u0163\172" +
    "\u0169\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\023\u015f\110\u015d\147" +
    "\u0164\155\u015c\157\u0162\160\u0163\171\u016d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\055\u01af\001\001\000\002\001\001\000\004" +
    "\073\u01a9\001\001\000\004\075\u0175\001\001\000\006\033" +
    "\u0178\076\u0179\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\027\u0181\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\030\u018d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\026\u01a1\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\033\u01ac\074\u01ad" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\033\u01b3" +
    "\056\u01b0\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\023\u015f\110\u015d\147\u0164\155\u015c\157" +
    "\u0162\160\u0163\172\u01b7\001\001\000\002\001\001\000\020" +
    "\023\u015f\110\u015d\147\u0164\155\u015c\157\u0162\160\u0163\171" +
    "\u01b9\001\001\000\002\001\001\000\034\021\u01bc\146\041" +
    "\147\040\150\026\151\033\152\042\153\035\154\024\155" +
    "\023\156\032\157\036\160\037\165\u01bd\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\023\051\163\u01c1\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\023\051\170\u01c6\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\071\u022f\001\001\000\004\057\u0221\001\001" +
    "\000\002\001\001\000\004\065\u0210\001\001\000\004\063" +
    "\u020b\001\001\000\004\061\u01ee\001\001\000\004\067\u01d1" +
    "\001\001\000\004\070\u01d4\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\032\u01dc\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\032\u01e4\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\u01e7\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\062\u01f1" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\027\u01fa\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\030\u0200\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\033\u020e\064\u020f\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\033\u0213\066\u0214\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\026\u0219" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\031" +
    "\u021e\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\033" +
    "\u0225\060\u0222\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u0229\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\033\u0232\072\u0233" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\023\051\162\u0235\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\005\u024c\046\u024d\001\001\000\002\001\001" +
    "\000\004\053\u0242\001\001\000\004\054\u0245\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\026\u0249\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\046\u0251\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\045\u0254\001\001\000\004\102\071\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\046\u025a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\004\u025f\005\u0260\142\021\001\001\000\006\005" +
    "\u0265\046\u0266\001\001\000\006\004\u0261\142\021\001\001" +
    "\000\006\005\u0262\046\u0263\001\001\000\004\046\u0264\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\046\u0267" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\020" +
    "\u026d\144\u0269\145\u026c\146\u0270\175\u026e\001\001\000\004" +
    "\177\u0288\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\017\u0275\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\045\u0271\001\001\000\006\102" +
    "\071\201\u0272\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\023\u0276\200\u0278\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\051" +
    "\u027f\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\052\u0280\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\047\u028e\001\001\000\004\050" +
    "\u0291\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\u0296\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$EtiquetadoParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$EtiquetadoParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$EtiquetadoParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private ArrayList<Advertencia> listaErrores;

    public EtiquetadoParser(EtiquetadoLexer lexer, ArrayList<Advertencia> listaErrores) {
        super(lexer);
        this.listaErrores = listaErrores;
    }
    public void report_error(String message, Object info) {
        System.out.println("reporterror");;
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal " + info);
    }
    @Override
    public void syntax_error(Symbol s) {
        Advertencia errorNuevo = new Advertencia();
        //System.out.println("linea: " + s.left + "   columna: " + s.right + "   token: " + symbl_name_from_id(s.sym) + "     texto: " + s.value);
        errorNuevo.setLinea(s.left);
        errorNuevo.setColumna(s.right);
        errorNuevo.setToken(symbl_name_from_id(s.sym)); //Se cambiará por uno de la tabla
        errorNuevo.setTexto(s.value.toString());
        //Agregamos los simbolos que se esperan
        String solucion = "";
        //System.out.print("Se esperaban el(los) simbolo(s): ");
        for(int i = 0; i < expected_token_ids().size(); i++) {
            //System.out.print(symbl_name_from_id(expected_token_ids().get(i)) + " ");
            if(i != 0) {
                solucion += ",";
            }
            solucion += " " + symbl_name_from_id(expected_token_ids().get(i));
        }
        errorNuevo.setSolucion(solucion);
        listaErrores.add(errorNuevo);
    }
    protected int error_sync_size() {
        return 1;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$EtiquetadoParser$actions {
  private final EtiquetadoParser parser;

  /** Constructor */
  CUP$EtiquetadoParser$actions(EtiquetadoParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action_part00000000(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$EtiquetadoParser$result;

      /* select the action based on the action number */
      switch (CUP$EtiquetadoParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		RESULT = start_val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$EtiquetadoParser$parser.done_parsing();
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= apertura_gcic cuerpo_gcic 
            {
              Object RESULT =null;
		System.out.println("Se ha llegado al final del reconocimiento");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // apertura_gcic ::= MENOR_QUE GCIC cuerpo_parametros_gcic MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_gcic",94, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // apertura_gcic ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_gcic",94, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // cuerpo_gcic ::= cabecera cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // cuerpo_gcic ::= scripting cabecera cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // cuerpo_gcic ::= cabecera scripting cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // cuerpo_gcic ::= cabecera cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // cuerpo_gcic ::= scripting cabecera scripting cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // cuerpo_gcic ::= scripting cabecera cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // cuerpo_gcic ::= cabecera scripting cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // cuerpo_gcic ::= scripting cabecera scripting cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // cierre_gcic ::= MENOR_CIERRE GCIC MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_gcic",36, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // cabecera ::= apertura_cabecera cuerpo_cabecera cierre_cabecera 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cabecera",1, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // apertura_cabecera ::= MENOR_QUE HEAD MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_cabecera",95, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // cierre_cabecera ::= MENOR_CIERRE HEAD MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_cabecera",123, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // cuerpo ::= apertura_body cuerpo_cuerpo cierre_body 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo",2, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // apertura_body ::= MENOR_QUE BODY cuerpo_parametros_body MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_body",96, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // apertura_body ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_body",96, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // cierre_body ::= MENOR_CIERRE BODY MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_body",124, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // cuerpo_cabecera ::= cuerpo_cabecera etiquetas_cabecera 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // cuerpo_cabecera ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // cuerpo_cabecera ::= cuerpo_cabecera error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // etiquetas_cabecera ::= apertura_link cierre_link 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // etiquetas_cabecera ::= apertura_title cuerpo_title cierre_title 
            {
              Object RESULT =null;
		int ctleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int ctright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object ct = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // etiquetas_cabecera ::= apertura_scripting cuerpo_scripting cierre_scripting 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // apertura_link ::= MENOR_QUE LINK cuerpo_parametros_link MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_link",98, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // apertura_title ::= MENOR_QUE TITLE MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_title",99, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // apertura_scripting ::= MENOR_QUE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_scripting",100, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // cierre_link ::= MENOR_CIERRE LINK MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_link",125, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // cierre_link ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_link",125, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // cierre_title ::= MENOR_CIERRE TITLE MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_title",126, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // cierre_title ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_title",126, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // cierre_scripting ::= MENOR_CIERRE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_scripting",127, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // cierre_scripting ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_scripting",127, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // cuerpo_title ::= cuerpo_title texto 
            {
              Object RESULT =null;
		int ctleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int ctright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object ct = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT= ct.toString() + " " + ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_title",13, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // cuerpo_title ::= 
            {
              Object RESULT =null;
		RESULT="";
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_title",13, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // texto ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto",17, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // texto ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto",17, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // cuerpo_cuerpo ::= cuerpo_cuerpo etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // cuerpo_cuerpo ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // cuerpo_cuerpo ::= cuerpo_cuerpo error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // etiquetas_cuerpo ::= apertura_spam parametros_etiquetas_texuales cerradura_spam 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // etiquetas_cuerpo ::= apertura_input cuerpo_texto cerradura_input 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // etiquetas_cuerpo ::= apertura_textarea cuerpo_texto cerradura_textarea 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // etiquetas_cuerpo ::= apertura_select cuerpo_select cerradura_select 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // etiquetas_cuerpo ::= apertura_div cuerpo_div cerradura_div 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // etiquetas_cuerpo ::= apertura_img cerradura_img 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // etiquetas_cuerpo ::= apertura_br 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // etiquetas_cuerpo ::= apertura_button cuerpo_texto cerradura_button 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // etiquetas_cuerpo ::= apertura_h1 parametros_etiquetas_texuales cerradura_h1 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // etiquetas_cuerpo ::= apertura_p parametros_etiquetas_texuales cerradura_p 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // etiquetas_cuerpo ::= apertura_scripting cuerpo_scripting cierre_scripting 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // apertura_spam ::= MENOR_QUE SPAM cuerpo_parametros_spam MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_spam",101, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // apertura_input ::= MENOR_QUE INPUT cuerpo_parametros_input MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_input",102, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // apertura_textarea ::= MENOR_QUE TEXTAREA cuerpo_parametros_textarea MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_textarea",103, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // apertura_select ::= MENOR_QUE SELECT cuerpo_parametros_select MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_select",104, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // apertura_div ::= MENOR_QUE DIV cuerpo_parametros_div MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_div",105, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // apertura_img ::= MENOR_QUE IMG cuerpo_parametros_img MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_img",106, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // apertura_br ::= MENOR_QUE BR MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_br",107, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // apertura_button ::= MENOR_QUE BUTTON cuerpo_parametros_button MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_button",108, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // apertura_h1 ::= MENOR_QUE H1 cuerpo_parametros_h1 MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_h1",109, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // apertura_p ::= MENOR_QUE P cuerpo_parametros_p MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_p",110, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // cerradura_spam ::= MENOR_CIERRE SPAM MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_spam",111, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // cerradura_input ::= MENOR_CIERRE INPUT MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_input",112, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // cerradura_textarea ::= MENOR_CIERRE TEXTAREA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_textarea",113, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // cerradura_select ::= MENOR_CIERRE SELECT MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_select",114, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // cerradura_div ::= MENOR_CIERRE DIV MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_div",115, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // cerradura_img ::= MENOR_CIERRE IMG MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_img",116, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // cerradura_button ::= MENOR_CIERRE BUTTON MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_button",118, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // cerradura_h1 ::= MENOR_CIERRE H1 MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_h1",119, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // cerradura_p ::= MENOR_CIERRE P MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cerradura_p",120, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // cuerpo_select ::= cuerpo_select etiqueta_option 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_select",28, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // cuerpo_select ::= etiqueta_option 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_select",28, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // etiqueta_option ::= MENOR_QUE OPTION MAYOR_QUE cuerpo_texto MENOR_CIERRE OPTION MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiqueta_option",16, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // cuerpo_texto ::= cuerpo_texto texto 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_texto",34, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // cuerpo_texto ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_texto",34, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // cuerpo_div ::= cuerpo_div etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_div",29, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // cuerpo_div ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_div",29, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // parametros_etiquetas_texuales ::= parametros_etiquetas_texuales parametros_etiquetas_texuales_p 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_etiquetas_texuales",69, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // parametros_etiquetas_texuales ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_etiquetas_texuales",69, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // parametros_etiquetas_texuales_p ::= texto 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_etiquetas_texuales_p",70, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // parametros_etiquetas_texuales_p ::= apertura_br 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_etiquetas_texuales_p",70, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // parametros_etiquetas_texuales_p ::= apertura_h1 parametros_etiquetas_texuales cerradura_h1 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_etiquetas_texuales_p",70, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // parametros_etiquetas_texuales_p ::= apertura_p parametros_etiquetas_texuales cerradura_p 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_etiquetas_texuales_p",70, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // parametros_etiquetas_texuales_p ::= apertura_spam parametros_etiquetas_texuales cerradura_spam 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_etiquetas_texuales_p",70, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // cuerpo_parametros_gcic ::= cuerpo_parametros_gcic parametros_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // cuerpo_parametros_gcic ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // cuerpo_parametros_gcic ::= cuerpo_parametros_gcic error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // parametros_gcic ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_gcic",38, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // parametros_gcic ::= CORA NAME IGUAL texto_comillas_complete CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_gcic",38, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // cuerpo_parametros_link ::= cuerpo_parametros_link parametros_link 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // cuerpo_parametros_link ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // cuerpo_parametros_link ::= cuerpo_parametros_link error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // parametros_link ::= CORA HREF IGUAL ALLCHARNOSPACE CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_link",40, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // texto_comillas_complete ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto_comillas_complete",18, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // texto_comillas_complete ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto_comillas_complete",18, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // cuerpo_parametros_body ::= cuerpo_parametros_body parametros_body 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // cuerpo_parametros_body ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // cuerpo_parametros_body ::= cuerpo_parametros_body error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // parametros_body ::= CORA BACKGROUND IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_body",42, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // cuerpo_parametros_spam ::= cuerpo_parametros_spam parametros_spam 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // cuerpo_parametros_spam ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // cuerpo_parametros_spam ::= cuerpo_parametros_spam error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // parametros_spam ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_spam",44, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // cuerpo_parametros_input ::= cuerpo_parametros_input parametros_input 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // cuerpo_parametros_input ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // cuerpo_parametros_input ::= cuerpo_parametros_input error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // parametros_input ::= CORA TYPE IGUAL tipos_input CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_input",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // parametros_input ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_input",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // cuerpo_parametros_textarea ::= cuerpo_parametros_textarea parametros_textarea 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // cuerpo_parametros_textarea ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // cuerpo_parametros_textarea ::= cuerpo_parametros_textarea error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // parametros_textarea ::= CORA FONTSIZE IGUAL PIXELES CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // parametros_textarea ::= CORA FONTFAMILY IGUAL font_family CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // parametros_textarea ::= CORA TEXTALIGN IGUAL alineaciones CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // parametros_textarea ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // parametros_textarea ::= CORA COLS IGUAL DIGITO_COM CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // parametros_textarea ::= CORA ROWS IGUAL DIGITO_COM CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // cuerpo_parametros_select ::= cuerpo_parametros_select parametros_select 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // cuerpo_parametros_select ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // cuerpo_parametros_select ::= cuerpo_parametros_select error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // parametros_select ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_select",50, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // cuerpo_parametros_div ::= cuerpo_parametros_div parametros_div 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // cuerpo_parametros_div ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // cuerpo_parametros_div ::= cuerpo_parametros_div error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // parametros_div ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // parametros_div ::= CORA CLASS IGUAL clases CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // parametros_div ::= CORA BACKGROUND IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // cuerpo_parametros_img ::= cuerpo_parametros_img parametros_img 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // cuerpo_parametros_img ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // cuerpo_parametros_img ::= cuerpo_parametros_img error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // parametros_img ::= CORA SRC IGUAL ALLCHARNOSPACE CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",54, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // parametros_img ::= CORA WIDTH IGUAL tamaños CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",54, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // parametros_img ::= CORA HEIGHT IGUAL tamaños CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",54, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // parametros_img ::= CORA ALT IGUAL texto_comillas_complete CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",54, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // parametros_img ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",54, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // cuerpo_parametros_button ::= cuerpo_parametros_button parametros_button 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // cuerpo_parametros_button ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // cuerpo_parametros_button ::= cuerpo_parametros_button error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // parametros_button ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_button",56, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // cuerpo_parametros_h1 ::= cuerpo_parametros_h1 parametros_h1 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // cuerpo_parametros_h1 ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // cuerpo_parametros_h1 ::= cuerpo_parametros_h1 error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // parametros_h1 ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_h1",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // cuerpo_parametros_p ::= cuerpo_parametros_p parametros_p 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // cuerpo_parametros_p ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // cuerpo_parametros_p ::= cuerpo_parametros_p error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // parametros_p ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_p",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // parametros_textuales ::= CORA FONTSIZE IGUAL PIXELES CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // parametros_textuales ::= CORA FONTFAMILY IGUAL font_family CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // parametros_textuales ::= CORA TEXTALIGN IGUAL alineaciones CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // parametros_textuales ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // parametros_textuales ::= CORA COLOR IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // colores ::= BLACK 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // colores ::= OLIVE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // colores ::= TEAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // colores ::= RED 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // colores ::= BLUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // colores ::= MAROON 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // colores ::= NAVY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // colores ::= GRAY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // colores ::= LIME 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // colores ::= FUCHSIA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // colores ::= GREEN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // colores ::= WHITE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // colores ::= PURPLE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // colores ::= SILVER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // colores ::= YELLOW 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // colores ::= AQUA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // colores ::= HEXADECIMAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // font_family ::= COURIER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // font_family ::= VERDANA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // font_family ::= ARIAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // font_family ::= GENEVA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // font_family ::= SANS_SERIF 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // alineaciones ::= LEFT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // alineaciones ::= RIGHT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // alineaciones ::= CENTER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // alineaciones ::= JUSTIFY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // clases ::= ROW 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("clases",23, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // clases ::= COLUMN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("clases",23, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // tamaños ::= PIXELES 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tamaños",24, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // tamaños ::= PORCENTAJE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tamaños",24, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // tipos_input ::= TEXT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tipos_input",26, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // tipos_input ::= NUMBER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tipos_input",26, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // tipos_input ::= RADIO 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tipos_input",26, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // tipos_input ::= CHECKBOX 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tipos_input",26, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // scripting ::= MENOR_QUE SCRIPTING MAYOR_QUE cuerpo_scripting MENOR_CIERRE SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("scripting",3, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // cuerpo_scripting ::= cuerpo_scripting parametros_scripting 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_scripting",35, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // cuerpo_scripting ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_scripting",35, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // parametros_scripting ::= PROCESS PARA PARC CORA cuerpo_parametros_proceso CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_scripting",64, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // parametros_scripting ::= ON_LOAD PARA PARC CORA cuerpo_parametros_proceso CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_scripting",64, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // cuerpo_parametros_proceso ::= cuerpo_parametros_proceso parametros_proceso 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",61, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // cuerpo_parametros_proceso ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",61, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // cuerpo_parametros_proceso ::= cuerpo_parametros_proceso error 
            {
              Object RESULT =null;
		System.out.println("Se ha encontrado un error de prueba");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",61, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // parametros_proceso ::= variables PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // parametros_proceso ::= parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // parametros_proceso ::= funciones_especiales PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // parametros_proceso ::= condicion_if 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // parametros_proceso ::= ciclo_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // parametros_proceso ::= ciclo_while 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // parametros_proceso ::= error PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // parametros_proceso_simples ::= asignacion_valor PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso_simples",63, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // funciones_especiales ::= funciones_strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",71, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // funciones_especiales ::= CARACTER_ALEATORIO PARA PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",71, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // funciones_especiales ::= NUM_ALEATORIO PARA PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",71, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // funciones_especiales ::= ALERT_INFO PARA strings_concatenados PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",71, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // funciones_especiales ::= EXIT PARA PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_especiales",71, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // funciones_strings ::= ASC PARA strings_concatenados PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_strings",72, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // funciones_strings ::= DESC PARA strings_concatenados PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_strings",72, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // funciones_strings ::= LETPAR_NUM PARA strings_concatenados PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_strings",72, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // funciones_strings ::= LETIMPAR_NUM PARA strings_concatenados PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_strings",72, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // funciones_strings ::= REVERSE PARA strings_concatenados PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("funciones_strings",72, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // variables ::= INTEGER modo cuerpo_identificadores igual_integer 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // variables ::= DECIMAL modo cuerpo_identificadores igual_decimal 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // variables ::= STRING modo cuerpo_identificadores igual_string 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // variables ::= BOOLEAN modo cuerpo_identificadores igual_boolean 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // variables ::= CHAR modo cuerpo_identificadores igual_char 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // cuerpo_identificadores ::= cuerpo_identificadores COMA identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // cuerpo_identificadores ::= identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // cuerpo_identificadores ::= cuerpo_identificadores error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // cuerpo_identificadores ::= cuerpo_identificadores COMA error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // identificadores ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("identificadores",27, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // identificadores ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("identificadores",27, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // modo ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("modo",6, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // modo ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("modo",6, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // igual_integer ::= IGUAL expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_integer",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // igual_integer ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_integer",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // igual_decimal ::= IGUAL expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_decimal",90, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // igual_decimal ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_decimal",90, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // igual_string ::= IGUAL strings_concatenados 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_string",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // igual_string ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_string",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // strings_concatenados ::= strings_concatenados SUMA strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // strings_concatenados ::= strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // strings_concatenados ::= strings_concatenados error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // igual_boolean ::= IGUAL booleanos 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_boolean",88, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // igual_boolean ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_boolean",88, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // igual_char ::= IGUAL D_CHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_char",89, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // igual_char ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_char",89, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // booleanos ::= TRUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // booleanos ::= FALSE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // booleanos ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // strings ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // strings ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // strings ::= D_STRING 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // strings ::= ID_ETIQUETA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // strings ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // strings ::= funciones_strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // strings ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // asignacion_valor ::= cuerpo_identificadores IGUAL valores_de_asignacion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("asignacion_valor",82, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // valores_de_asignacion ::= expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // valores_de_asignacion ::= D_CHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // valores_de_asignacion ::= TRUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // valores_de_asignacion ::= FALSE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // valores_de_asignacion ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // valores_de_asignacion ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // valores_de_asignacion ::= ID_ETIQUETA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // valores_de_asignacion ::= D_STRING 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // valores_de_asignacion ::= error 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // condicion_if ::= apertura_if_complete cuerpo_parametros_proceso PUNTOS LLAC END condicion_else_if condicion_else 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_if",73, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // condicion_if ::= apertura_if parametros_proceso_simples condicion_else_if condicion_else 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_if",73, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // apertura_if_complete ::= IF PARA condicion PARC THEN INIT LLAA PUNTOS 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // apertura_if_complete ::= IF PARA error PARC THEN INIT LLAA PUNTOS 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // apertura_if_complete ::= error PARA condicion PARC THEN INIT LLAA PUNTOS 
            {
              Object RESULT =null;
		listaErrores.get(listaErrores.size()-1).setSolucion("IF");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // apertura_if_complete ::= IF error condicion PARC THEN INIT LLAA PUNTOS 
            {
              Object RESULT =null;
		listaErrores.get(listaErrores.size()-1).setSolucion("(");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // apertura_if_complete ::= IF PARA condicion error THEN INIT LLAA PUNTOS 
            {
              Object RESULT =null;
		listaErrores.get(listaErrores.size()-1).setSolucion(")");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // apertura_if_complete ::= IF PARA condicion PARC error INIT LLAA PUNTOS 
            {
              Object RESULT =null;
		listaErrores.get(listaErrores.size()-1).setSolucion("THEN");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // apertura_if_complete ::= IF PARA condicion PARC THEN error LLAA PUNTOS 
            {
              Object RESULT =null;
		listaErrores.get(listaErrores.size()-1).setSolucion("INIT");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // apertura_if_complete ::= IF PARA condicion PARC THEN INIT error PUNTOS 
            {
              Object RESULT =null;
		listaErrores.get(listaErrores.size()-1).setSolucion("{");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // apertura_if_complete ::= IF PARA condicion PARC THEN INIT LLAA error 
            {
              Object RESULT =null;
		listaErrores.get(listaErrores.size()-1).setSolucion(":");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if_complete",122, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // apertura_if ::= IF PARA condicion PARC THEN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("apertura_if",121, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // condicion_else_if ::= condicion_else_if parametros_else_if 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else_if",79, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // condicion_else_if ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else_if",79, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // parametros_else_if ::= ELSE IF PARA condicion PARC THEN INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_else_if",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-12)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // parametros_else_if ::= ELSE IF PARA condicion PARC THEN parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_else_if",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // condicion_else ::= ELSE INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // condicion_else ::= ELSE parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // condicion_else ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // ciclo_repeat ::= REPEAT PARA repetir_declaracion PARC HUNTIL PARA repetir_limite PARC INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("ciclo_repeat",74, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-14)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // repetir_declaracion ::= INTEGER identificadores IGUAL igual_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_declaracion",75, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // repetir_declaracion ::= identificadores IGUAL igual_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_declaracion",75, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // repetir_limite ::= D_INTEGER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_limite",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // repetir_limite ::= identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_limite",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // igual_repeat ::= D_INTEGER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_repeat",77, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // ciclo_while ::= WHILE PARA condicion PARC THENWHILE INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("ciclo_while",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-11)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // condicion ::= condicion IGUAL_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // condicion ::= condicion DIFERENTE_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // condicion ::= condicion MENOR_QUE condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // condicion ::= condicion MENOR_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // condicion ::= condicion MAYOR_QUE condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // condicion ::= condicion MAYOR_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // condicion ::= NOT condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // condicion ::= condicion AND condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // condicion ::= condicion OR condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // condicion ::= RESTA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // condicion ::= condicion SUMA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // condicion ::= condicion RESTA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // condicion ::= condicion MULTIPLICACION condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // condicion ::= condicion DIVISION condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$EtiquetadoParser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action_part00000001(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$EtiquetadoParser$result;

      /* select the action based on the action number */
      switch (CUP$EtiquetadoParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // condicion ::= valor_condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // condicion ::= PARA condicion PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // valor_condicion ::= valor_numerico 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_condicion",84, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // expresion_aritmetica ::= RESTA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1*-1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // expresion_aritmetica ::= expresion_aritmetica SUMA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1+va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // expresion_aritmetica ::= expresion_aritmetica RESTA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1-va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // expresion_aritmetica ::= expresion_aritmetica MULTIPLICACION expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1*va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // expresion_aritmetica ::= expresion_aritmetica DIVISION expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1/va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // expresion_aritmetica ::= valor_numerico 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object va1 = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = new Double(va1.toString());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // expresion_aritmetica ::= PARA expresion_aritmetica PARC 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		RESULT = new Double(va1.toString());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // valor_numerico ::= D_INTEGER 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // valor_numerico ::= D_DECIMAL 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // valor_numerico ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = 1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // valor_numerico ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = 1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$EtiquetadoParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$EtiquetadoParser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$EtiquetadoParser$do_action_part00000000(
                               CUP$EtiquetadoParser$act_num,
                               CUP$EtiquetadoParser$parser,
                               CUP$EtiquetadoParser$stack,
                               CUP$EtiquetadoParser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$EtiquetadoParser$do_action_part00000001(
                               CUP$EtiquetadoParser$act_num,
                               CUP$EtiquetadoParser$parser,
                               CUP$EtiquetadoParser$stack,
                               CUP$EtiquetadoParser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}