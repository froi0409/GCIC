
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.froi.pruebas.gramaticas;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class EtiquetadoParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return EtiquetadoParserSym.class;
}

  /** Default constructor. */
  @Deprecated
  public EtiquetadoParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public EtiquetadoParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public EtiquetadoParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\342\000\002\002\004\000\002\002\007\000\002\014" +
    "\005\000\002\014\006\000\002\014\006\000\002\014\006" +
    "\000\002\014\007\000\002\014\007\000\002\014\007\000" +
    "\002\014\010\000\002\052\006\000\002\003\012\000\002" +
    "\004\013\000\002\015\004\000\002\015\003\000\002\020" +
    "\012\000\002\020\012\000\002\020\012\000\002\017\004" +
    "\000\002\017\002\000\002\023\003\000\002\023\003\000" +
    "\002\016\004\000\002\016\003\000\002\021\013\000\002" +
    "\021\013\000\002\021\013\000\002\021\013\000\002\021" +
    "\013\000\002\021\012\000\002\021\005\000\002\021\013" +
    "\000\002\021\013\000\002\021\013\000\002\021\012\000" +
    "\002\041\004\000\002\041\003\000\002\022\012\000\002" +
    "\050\004\000\002\050\002\000\002\042\004\000\002\042" +
    "\002\000\002\046\002\000\002\047\002\000\002\053\004" +
    "\000\002\053\002\000\002\054\007\000\002\054\007\000" +
    "\002\055\004\000\002\055\002\000\002\056\007\000\002" +
    "\024\003\000\002\024\003\000\002\057\004\000\002\057" +
    "\002\000\002\060\007\000\002\061\004\000\002\061\002" +
    "\000\002\062\003\000\002\063\004\000\002\063\002\000" +
    "\002\064\007\000\002\064\003\000\002\065\004\000\002" +
    "\065\002\000\002\066\007\000\002\066\007\000\002\066" +
    "\007\000\002\066\007\000\002\066\007\000\002\066\007" +
    "\000\002\067\004\000\002\067\002\000\002\070\003\000" +
    "\002\071\004\000\002\071\002\000\002\072\003\000\002" +
    "\072\007\000\002\072\007\000\002\073\004\000\002\073" +
    "\002\000\002\074\007\000\002\074\007\000\002\074\007" +
    "\000\002\074\007\000\002\074\007\000\002\075\004\000" +
    "\002\075\002\000\002\076\003\000\002\077\004\000\002" +
    "\077\002\000\002\100\003\000\002\101\004\000\002\101" +
    "\002\000\002\102\003\000\002\033\007\000\002\033\007" +
    "\000\002\033\007\000\002\033\007\000\002\033\007\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\026\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\026\003\000\002\026\003" +
    "\000\002\026\003\000\002\026\003\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\026\003\000\002\027\003\000\002\027\003\000\002\027" +
    "\003\000\002\027\003\000\002\027\003\000\002\030\003" +
    "\000\002\030\003\000\002\030\003\000\002\030\003\000" +
    "\002\031\003\000\002\031\003\000\002\032\003\000\002" +
    "\032\003\000\002\005\012\000\002\051\004\000\002\051" +
    "\002\000\002\106\010\000\002\106\010\000\002\103\004" +
    "\000\002\103\002\000\002\104\004\000\002\104\003\000" +
    "\002\104\003\000\002\104\003\000\002\104\003\000\002" +
    "\105\004\000\002\007\006\000\002\007\006\000\002\007" +
    "\006\000\002\007\006\000\002\007\006\000\002\137\005" +
    "\000\002\137\003\000\002\035\003\000\002\035\003\000" +
    "\002\010\003\000\002\010\002\000\002\130\004\000\002" +
    "\130\002\000\002\134\004\000\002\134\002\000\002\131" +
    "\004\000\002\131\002\000\002\012\005\000\002\012\003" +
    "\000\002\132\004\000\002\132\002\000\002\133\004\000" +
    "\002\133\002\000\002\013\003\000\002\013\003\000\002" +
    "\011\003\000\002\011\003\000\002\011\003\000\002\011" +
    "\003\000\002\011\003\000\002\124\005\000\002\127\003" +
    "\000\002\127\003\000\002\127\003\000\002\127\003\000" +
    "\002\127\003\000\002\127\003\000\002\127\003\000\002" +
    "\127\003\000\002\113\020\000\002\113\012\000\002\121" +
    "\004\000\002\121\002\000\002\122\017\000\002\122\011" +
    "\000\002\123\012\000\002\123\004\000\002\123\002\000" +
    "\002\114\021\000\002\115\006\000\002\115\005\000\002" +
    "\116\003\000\002\116\003\000\002\117\003\000\002\120" +
    "\016\000\002\125\005\000\002\125\005\000\002\125\005" +
    "\000\002\125\005\000\002\125\005\000\002\125\005\000" +
    "\002\125\004\000\002\125\005\000\002\125\005\000\002" +
    "\125\004\000\002\125\005\000\002\125\005\000\002\125" +
    "\005\000\002\125\005\000\002\125\003\000\002\125\005" +
    "\000\002\126\003\000\002\135\004\000\002\135\005\000" +
    "\002\135\005\000\002\135\005\000\002\135\005\000\002" +
    "\135\003\000\002\135\005\000\002\136\003\000\002\136" +
    "\003\000\002\136\003\000\002\136\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u021c\000\004\154\004\001\002\000\004\004\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\006\156\uffd4\175\uffd4\001\002\000\006\156\011\175" +
    "\013\001\002\000\004\154\030\001\002\000\006\156\uffd5" +
    "\175\uffd5\001\002\000\006\034\014\035\015\001\002\000" +
    "\004\170\023\001\002\000\004\170\016\001\002\000\006" +
    "\211\020\212\021\001\002\000\004\176\022\001\002\000" +
    "\004\176\uffce\001\002\000\004\176\uffcd\001\002\000\006" +
    "\156\uffd2\175\uffd2\001\002\000\004\206\024\001\002\000" +
    "\004\176\025\001\002\000\006\156\uffd3\175\uffd3\001\002" +
    "\000\004\002\000\001\002\000\004\154\u0214\001\002\000" +
    "\006\005\u01ee\024\u01e0\001\002\000\004\154\033\001\002" +
    "\000\004\154\u01dd\001\002\000\006\010\037\024\u01e0\001" +
    "\002\000\004\154\036\001\002\000\004\154\u01dd\001\002" +
    "\000\004\010\037\001\002\000\006\156\uffcb\175\uffcb\001" +
    "\002\000\006\156\041\175\043\001\002\000\004\154\072" +
    "\001\002\000\006\156\uffcc\175\uffcc\001\002\000\004\026" +
    "\044\001\002\000\004\170\045\001\002\000\044\046\052" +
    "\047\053\050\051\051\055\052\054\053\057\054\066\055" +
    "\050\056\056\057\061\060\046\061\065\062\067\063\060" +
    "\064\062\065\047\066\063\001\002\000\004\176\uff93\001" +
    "\002\000\004\176\uff8e\001\002\000\004\176\uff96\001\002" +
    "\000\004\176\uff9b\001\002\000\004\176\uff9d\001\002\000" +
    "\004\176\uff9c\001\002\000\004\176\uff99\001\002\000\004" +
    "\176\uff9a\001\002\000\004\176\uff95\001\002\000\004\176" +
    "\uff98\001\002\000\004\176\uff90\001\002\000\004\176\uff94" +
    "\001\002\000\004\176\uff8f\001\002\000\004\176\uff8d\001" +
    "\002\000\004\176\070\001\002\000\004\176\uff92\001\002" +
    "\000\004\176\uff97\001\002\000\004\176\uff91\001\002\000" +
    "\006\156\uffca\175\uffca\001\002\000\004\154\u01d7\001\002" +
    "\000\030\011\103\012\076\013\105\014\102\016\101\017" +
    "\106\020\075\021\074\022\104\023\100\024\077\001\002" +
    "\000\004\154\uffea\001\002\000\006\156\uffaa\175\uffaa\001" +
    "\002\000\004\156\u01cd\001\002\000\006\156\uffc5\175\uffc5" +
    "\001\002\000\004\156\352\001\002\000\006\156\uffa4\175" +
    "\uffa4\001\002\000\006\156\uffb6\175\uffb6\001\002\000\006" +
    "\156\uffb9\175\uffb9\001\002\000\006\156\uffc8\175\uffc8\001" +
    "\002\000\006\156\uffa7\175\uffa7\001\002\000\006\156\uffc1" +
    "\175\uffc1\001\002\000\006\156\uffb1\175\uffb1\001\002\000" +
    "\006\156\110\175\112\001\002\000\004\154\141\001\002" +
    "\000\006\156\uffb2\175\uffb2\001\002\000\014\034\113\041" +
    "\116\042\115\043\117\044\114\001\002\000\004\170\136" +
    "\001\002\000\004\170\133\001\002\000\004\170\130\001" +
    "\002\000\004\170\125\001\002\000\004\170\120\001\002" +
    "\000\006\067\123\070\122\001\002\000\004\176\124\001" +
    "\002\000\004\176\uff80\001\002\000\004\176\uff81\001\002" +
    "\000\006\156\uffae\175\uffae\001\002\000\004\212\126\001" +
    "\002\000\004\176\127\001\002\000\006\156\uffb0\175\uffb0" +
    "\001\002\000\006\067\123\070\122\001\002\000\004\176" +
    "\132\001\002\000\006\156\uffaf\175\uffaf\001\002\000\006" +
    "\211\020\212\021\001\002\000\004\176\135\001\002\000" +
    "\006\156\uffad\175\uffad\001\002\000\004\206\137\001\002" +
    "\000\004\176\140\001\002\000\006\156\uffac\175\uffac\001" +
    "\002\000\004\166\142\001\002\000\004\017\143\001\002" +
    "\000\004\156\144\001\002\000\004\154\uffe4\001\002\000" +
    "\006\156\146\175\150\001\002\000\010\154\uffda\204\uffda" +
    "\207\uffda\001\002\000\006\156\uffc2\175\uffc2\001\002\000" +
    "\016\030\156\031\155\032\154\034\151\036\153\037\152" +
    "\001\002\000\004\170\207\001\002\000\004\170\204\001" +
    "\002\000\004\170\201\001\002\000\004\170\172\001\002" +
    "\000\004\170\162\001\002\000\004\170\157\001\002\000" +
    "\004\067\160\001\002\000\004\176\161\001\002\000\006" +
    "\156\uffc0\175\uffc0\001\002\000\014\071\166\072\167\073" +
    "\164\074\165\075\170\001\002\000\004\176\171\001\002" +
    "\000\004\176\uff8a\001\002\000\004\176\uff89\001\002\000" +
    "\004\176\uff8c\001\002\000\004\176\uff8b\001\002\000\004" +
    "\176\uff88\001\002\000\006\156\uffbf\175\uffbf\001\002\000" +
    "\012\076\173\077\175\100\176\101\177\001\002\000\004" +
    "\176\uff87\001\002\000\004\176\200\001\002\000\004\176" +
    "\uff86\001\002\000\004\176\uff85\001\002\000\004\176\uff84" +
    "\001\002\000\006\156\uffbe\175\uffbe\001\002\000\004\213" +
    "\202\001\002\000\004\176\203\001\002\000\006\156\uffbc" +
    "\175\uffbc\001\002\000\004\213\205\001\002\000\004\176" +
    "\206\001\002\000\006\156\uffbb\175\uffbb\001\002\000\004" +
    "\206\210\001\002\000\004\176\211\001\002\000\006\156" +
    "\uffbd\175\uffbd\001\002\000\010\154\214\204\216\207\215" +
    "\001\002\000\010\154\uffdb\204\uffdb\207\uffdb\001\002\000" +
    "\004\166\217\001\002\000\010\154\uffed\204\uffed\207\uffed" +
    "\001\002\000\010\154\uffec\204\uffec\207\uffec\001\002\000" +
    "\004\013\220\001\002\000\004\156\221\001\002\000\004" +
    "\154\uffe7\001\002\000\006\156\223\175\226\001\002\000" +
    "\010\154\uffda\204\uffda\207\uffda\001\002\000\006\156\uffa6" +
    "\175\uffa6\001\002\000\006\156\uffa8\175\uffa8\001\002\000" +
    "\014\027\230\030\233\031\232\032\231\034\227\001\002" +
    "\000\004\170\250\001\002\000\004\170\245\001\002\000" +
    "\004\170\242\001\002\000\004\170\237\001\002\000\004" +
    "\170\234\001\002\000\004\067\235\001\002\000\004\176" +
    "\236\001\002\000\006\156\uffa2\175\uffa2\001\002\000\014" +
    "\071\166\072\167\073\164\074\165\075\170\001\002\000" +
    "\004\176\241\001\002\000\006\156\uffa1\175\uffa1\001\002" +
    "\000\012\076\173\077\175\100\176\101\177\001\002\000" +
    "\004\176\244\001\002\000\006\156\uffa0\175\uffa0\001\002" +
    "\000\044\046\052\047\053\050\051\051\055\052\054\053" +
    "\057\054\066\055\050\056\056\057\061\060\046\061\065" +
    "\062\067\063\060\064\062\065\047\066\063\001\002\000" +
    "\004\176\247\001\002\000\006\156\uff9e\175\uff9e\001\002" +
    "\000\004\206\251\001\002\000\004\176\252\001\002\000" +
    "\006\156\uff9f\175\uff9f\001\002\000\010\154\254\204\216" +
    "\207\215\001\002\000\004\166\255\001\002\000\004\022" +
    "\256\001\002\000\004\156\257\001\002\000\004\154\uffe1" +
    "\001\002\000\006\156\261\175\226\001\002\000\010\154" +
    "\uffda\204\uffda\207\uffda\001\002\000\006\156\uffc9\175\uffc9" +
    "\001\002\000\006\156\uffc7\175\uffc7\001\002\000\010\154" +
    "\265\204\216\207\215\001\002\000\004\166\266\001\002" +
    "\000\004\011\267\001\002\000\004\156\270\001\002\000" +
    "\004\154\uffe9\001\002\000\006\156\272\175\226\001\002" +
    "\000\004\154\276\001\002\000\006\156\uffb8\175\uffb8\001" +
    "\002\000\006\156\uffba\175\uffba\001\002\000\004\154\307" +
    "\001\002\000\004\015\300\001\002\000\004\154\uffdd\001" +
    "\002\000\004\156\301\001\002\000\010\154\uffda\204\uffda" +
    "\207\uffda\001\002\000\010\154\303\204\216\207\215\001" +
    "\002\000\004\166\304\001\002\000\004\015\305\001\002" +
    "\000\004\156\306\001\002\000\004\154\uffdc\001\002\000" +
    "\006\015\300\166\311\001\002\000\004\154\uffde\001\002" +
    "\000\004\014\312\001\002\000\004\156\313\001\002\000" +
    "\004\154\uffe6\001\002\000\006\156\315\175\320\001\002" +
    "\000\004\154\uffd8\001\002\000\006\156\uffb5\175\uffb5\001" +
    "\002\000\006\156\uffb7\175\uffb7\001\002\000\020\026\322" +
    "\027\230\030\233\031\232\032\231\034\227\040\321\001" +
    "\002\000\004\170\326\001\002\000\004\170\323\001\002" +
    "\000\044\046\052\047\053\050\051\051\055\052\054\053" +
    "\057\054\066\055\050\056\056\057\061\060\046\061\065" +
    "\062\067\063\060\064\062\065\047\066\063\001\002\000" +
    "\004\176\325\001\002\000\006\156\uffb3\175\uffb3\001\002" +
    "\000\006\106\330\107\327\001\002\000\004\176\uff82\001" +
    "\002\000\004\176\uff83\001\002\000\004\176\332\001\002" +
    "\000\006\156\uffb4\175\uffb4\001\002\000\004\154\334\001" +
    "\002\000\032\011\103\012\076\013\105\014\102\016\101" +
    "\017\106\020\075\021\074\022\104\023\100\024\077\166" +
    "\336\001\002\000\004\154\uffd9\001\002\000\004\016\337" +
    "\001\002\000\004\156\340\001\002\000\004\154\uffe5\001" +
    "\002\000\006\156\342\175\226\001\002\000\004\154\uffd6" +
    "\001\002\000\006\156\uffa3\175\uffa3\001\002\000\006\156" +
    "\uffa5\175\uffa5\001\002\000\004\154\346\001\002\000\004" +
    "\166\347\001\002\000\004\023\350\001\002\000\004\156" +
    "\351\001\002\000\004\154\uffe0\001\002\000\010\134\uff7d" +
    "\135\uff7d\154\uff7d\001\002\000\010\134\354\135\356\154" +
    "\355\001\002\000\004\173\u01ba\001\002\000\004\166\u01b7" +
    "\001\002\000\004\173\360\001\002\000\010\134\uff7e\135" +
    "\uff7e\154\uff7e\001\002\000\004\174\361\001\002\000\004" +
    "\175\362\001\002\000\030\124\uff79\127\uff79\131\uff79\136" +
    "\uff79\137\uff79\140\uff79\141\uff79\142\uff79\176\uff79\204\uff79" +
    "\207\uff79\001\002\000\030\124\375\127\u0106\131\371\136" +
    "\u0103\137\370\140\376\141\367\142\377\176\366\204\u0102" +
    "\207\u0101\001\002\000\032\124\uff7a\127\uff7a\131\uff7a\136" +
    "\uff7a\137\uff7a\140\uff7a\141\uff7a\142\uff7a\176\uff7a\202\uff7a" +
    "\204\uff7a\207\uff7a\001\002\000\032\124\uff77\127\uff77\131" +
    "\uff77\136\uff77\137\uff77\140\uff77\141\uff77\142\uff77\176\uff77" +
    "\202\uff77\204\uff77\207\uff77\001\002\000\010\134\uff7c\135" +
    "\uff7c\154\uff7c\001\002\000\010\143\u013e\204\uff68\207\uff68" +
    "\001\002\000\010\143\u013e\204\uff68\207\uff68\001\002\000" +
    "\004\173\u01a2\001\002\000\004\201\u01a1\001\002\000\032" +
    "\124\uff76\127\uff76\131\uff76\136\uff76\137\uff76\140\uff76\141" +
    "\uff76\142\uff76\176\uff76\202\uff76\204\uff76\207\uff76\001\002" +
    "\000\004\201\u01a0\001\002\000\004\173\u0158\001\002\000" +
    "\010\143\u013e\204\uff68\207\uff68\001\002\000\010\143\u013e" +
    "\204\uff68\207\uff68\001\002\000\032\124\uff74\127\uff74\131" +
    "\uff74\136\uff74\137\uff74\140\uff74\141\uff74\142\uff74\176\uff74" +
    "\202\uff74\204\uff74\207\uff74\001\002\000\012\170\uff6a\174" +
    "\uff6a\201\uff6a\205\uff6a\001\002\000\012\170\uff6b\174\uff6b" +
    "\201\uff6b\205\uff6b\001\002\000\010\143\u013e\204\uff68\207" +
    "\uff68\001\002\000\032\124\uff75\127\uff75\131\uff75\136\uff75" +
    "\137\uff75\140\uff75\141\uff75\142\uff75\176\uff75\202\uff75\204" +
    "\uff75\207\uff75\001\002\000\006\170\u0121\205\u0120\001\002" +
    "\000\004\173\u0108\001\002\000\010\170\uff6c\201\uff6c\205" +
    "\uff6c\001\002\000\010\136\u0109\204\u0102\207\u0101\001\002" +
    "\000\006\204\u0102\207\u0101\001\002\000\004\174\u010f\001" +
    "\002\000\004\170\u010c\001\002\000\004\144\u010d\001\002" +
    "\000\004\174\uff3d\001\002\000\004\174\uff40\001\002\000" +
    "\004\130\u0110\001\002\000\004\173\u0111\001\002\000\010" +
    "\144\u0113\204\u0102\207\u0101\001\002\000\004\174\u0115\001" +
    "\002\000\004\174\uff3f\001\002\000\004\174\uff3e\001\002" +
    "\000\004\122\u0116\001\002\000\004\177\u0117\001\002\000" +
    "\004\202\u0118\001\002\000\030\124\uff79\127\uff79\131\uff79" +
    "\136\uff79\137\uff79\140\uff79\141\uff79\142\uff79\202\uff79\204" +
    "\uff79\207\uff79\001\002\000\030\124\375\127\u0106\131\371" +
    "\136\u0103\137\370\140\376\141\367\142\377\202\u011a\204" +
    "\u0102\207\u0101\001\002\000\004\200\u011b\001\002\000\004" +
    "\123\u011c\001\002\000\032\124\uff42\127\uff42\131\uff42\136" +
    "\uff42\137\uff42\140\uff42\141\uff42\142\uff42\176\uff42\202\uff42" +
    "\204\uff42\207\uff42\001\002\000\004\170\u011e\001\002\000" +
    "\004\144\u010d\001\002\000\004\174\uff41\001\002\000\006" +
    "\204\u0102\207\u0101\001\002\000\034\144\u0126\145\u0123\146" +
    "\u0124\147\u0128\150\u0125\151\u0129\164\u012e\173\u0130\204\u0131" +
    "\206\u0122\207\u012f\211\u012d\212\u0127\001\002\000\004\201" +
    "\uff4d\001\002\000\036\152\uff22\153\uff22\154\uff22\155\uff22" +
    "\156\uff22\157\uff22\160\uff22\161\uff22\163\uff22\164\uff22\165" +
    "\uff22\166\uff22\174\uff22\201\uff22\001\002\000\004\201\uff51" +
    "\001\002\000\004\201\uff52\001\002\000\036\152\uff23\153" +
    "\uff23\154\uff23\155\uff23\156\uff23\157\uff23\160\uff23\161\uff23" +
    "\163\uff23\164\uff23\165\uff23\166\uff23\174\uff23\201\uff23\001" +
    "\002\000\004\201\uff4e\001\002\000\004\201\uff50\001\002" +
    "\000\004\201\uff4c\001\002\000\004\201\uff54\001\002\000" +
    "\016\163\uff25\164\uff25\165\uff25\166\uff25\174\uff25\201\uff25" +
    "\001\002\000\014\163\u0136\164\u0133\165\u0134\166\u0137\201" +
    "\uff53\001\002\000\004\201\uff4f\001\002\000\016\144\u0126" +
    "\145\u0123\164\u012e\173\u0130\204\u0131\207\u012f\001\002\000" +
    "\036\152\uff20\153\uff20\154\uff20\155\uff20\156\uff20\157\uff20" +
    "\160\uff20\161\uff20\163\uff20\164\uff20\165\uff20\166\uff20\174" +
    "\uff20\201\uff20\001\002\000\016\144\u0126\145\u0123\164\u012e" +
    "\173\u0130\204\u0131\207\u012f\001\002\000\036\152\uff21\153" +
    "\uff21\154\uff21\155\uff21\156\uff21\157\uff21\160\uff21\161\uff21" +
    "\163\uff21\164\uff21\165\uff21\166\uff21\174\uff21\201\uff21\001" +
    "\002\000\014\163\u0136\164\u0133\165\u0134\166\u0137\174\u0135" +
    "\001\002\000\016\144\u0126\145\u0123\164\u012e\173\u0130\204" +
    "\u0131\207\u012f\001\002\000\016\144\u0126\145\u0123\164\u012e" +
    "\173\u0130\204\u0131\207\u012f\001\002\000\016\163\uff24\164" +
    "\uff24\165\uff24\166\uff24\174\uff24\201\uff24\001\002\000\016" +
    "\144\u0126\145\u0123\164\u012e\173\u0130\204\u0131\207\u012f\001" +
    "\002\000\016\144\u0126\145\u0123\164\u012e\173\u0130\204\u0131" +
    "\207\u012f\001\002\000\016\163\uff26\164\uff26\165\uff26\166" +
    "\uff26\174\uff26\201\uff26\001\002\000\016\163\uff29\164\uff29" +
    "\165\u0134\166\u0137\174\uff29\201\uff29\001\002\000\016\163" +
    "\uff27\164\uff27\165\uff27\166\uff27\174\uff27\201\uff27\001\002" +
    "\000\016\163\uff28\164\uff28\165\u0134\166\u0137\174\uff28\201" +
    "\uff28\001\002\000\016\163\uff2a\164\uff2a\165\uff2a\166\uff2a" +
    "\174\uff2a\201\uff2a\001\002\000\010\170\uff6d\201\uff6d\205" +
    "\uff6d\001\002\000\006\204\uff69\207\uff69\001\002\000\006" +
    "\204\u0102\207\u0101\001\002\000\010\170\u0141\201\uff66\205" +
    "\u0120\001\002\000\016\144\u0126\145\u0123\164\u012e\173\u0130" +
    "\204\u0131\207\u012f\001\002\000\004\201\uff72\001\002\000" +
    "\014\163\u0136\164\u0133\165\u0134\166\u0137\201\uff67\001\002" +
    "\000\006\204\u0102\207\u0101\001\002\000\010\170\u0147\201" +
    "\uff62\205\u0120\001\002\000\004\201\uff70\001\002\000\014" +
    "\151\u014b\204\u014c\206\u014a\211\u0149\212\u014d\001\002\000" +
    "\006\163\uff60\201\uff60\001\002\000\006\163\uff59\201\uff59" +
    "\001\002\000\006\163\uff56\201\uff56\001\002\000\006\163" +
    "\uff57\201\uff57\001\002\000\006\163\uff55\201\uff55\001\002" +
    "\000\006\163\uff58\201\uff58\001\002\000\006\163\u014f\201" +
    "\uff63\001\002\000\014\151\u014b\204\u014c\206\u014a\211\u0149" +
    "\212\u014d\001\002\000\006\163\uff61\201\uff61\001\002\000" +
    "\006\204\u0102\207\u0101\001\002\000\010\170\u0153\201\uff5e" +
    "\205\u0120\001\002\000\006\146\u0156\147\u0157\001\002\000" +
    "\004\201\uff6f\001\002\000\004\201\uff5f\001\002\000\004" +
    "\201\uff5b\001\002\000\004\201\uff5a\001\002\000\020\144" +
    "\u0126\145\u0123\162\u015c\164\u015d\173\u015e\204\u0131\207\u012f" +
    "\001\002\000\034\152\uff2d\153\uff2d\154\uff2d\155\uff2d\156" +
    "\uff2d\157\uff2d\160\uff2d\161\uff2d\163\uff2d\164\uff2d\165\uff2d" +
    "\166\uff2d\174\uff2d\001\002\000\034\152\u0163\153\u0168\154" +
    "\u0166\155\u016c\156\u0161\157\u0164\160\u016b\161\u0160\163\u0162" +
    "\164\u016a\165\u0165\166\u0167\174\u017b\001\002\000\034\152" +
    "\uff2b\153\uff2b\154\uff2b\155\uff2b\156\uff2b\157\uff2b\160\uff2b" +
    "\161\uff2b\163\uff2b\164\uff2b\165\uff2b\166\uff2b\174\uff2b\001" +
    "\002\000\020\144\u0126\145\u0123\162\u015c\164\u015d\173\u015e" +
    "\204\u0131\207\u012f\001\002\000\020\144\u0126\145\u0123\162" +
    "\u015c\164\u015d\173\u015e\204\u0131\207\u012f\001\002\000\020" +
    "\144\u0126\145\u0123\162\u015c\164\u015d\173\u015e\204\u0131\207" +
    "\u012f\001\002\000\034\152\u0163\153\u0168\154\u0166\155\u016c" +
    "\156\u0161\157\u0164\160\u016b\161\u0160\163\u0162\164\u016a\165" +
    "\u0165\166\u0167\174\u0169\001\002\000\020\144\u0126\145\u0123" +
    "\162\u015c\164\u015d\173\u015e\204\u0131\207\u012f\001\002\000" +
    "\020\144\u0126\145\u0123\162\u015c\164\u015d\173\u015e\204\u0131" +
    "\207\u012f\001\002\000\020\144\u0126\145\u0123\162\u015c\164" +
    "\u015d\173\u015e\204\u0131\207\u012f\001\002\000\020\144\u0126" +
    "\145\u0123\162\u015c\164\u015d\173\u015e\204\u0131\207\u012f\001" +
    "\002\000\020\144\u0126\145\u0123\162\u015c\164\u015d\173\u015e" +
    "\204\u0131\207\u012f\001\002\000\020\144\u0126\145\u0123\162" +
    "\u015c\164\u015d\173\u015e\204\u0131\207\u012f\001\002\000\020" +
    "\144\u0126\145\u0123\162\u015c\164\u015d\173\u015e\204\u0131\207" +
    "\u012f\001\002\000\020\144\u0126\145\u0123\162\u015c\164\u015d" +
    "\173\u015e\204\u0131\207\u012f\001\002\000\020\144\u0126\145" +
    "\u0123\162\u015c\164\u015d\173\u015e\204\u0131\207\u012f\001\002" +
    "\000\034\152\uff2c\153\uff2c\154\uff2c\155\uff2c\156\uff2c\157" +
    "\uff2c\160\uff2c\161\uff2c\163\uff2c\164\uff2c\165\uff2c\166\uff2c" +
    "\174\uff2c\001\002\000\020\144\u0126\145\u0123\162\u015c\164" +
    "\u015d\173\u015e\204\u0131\207\u012f\001\002\000\020\144\u0126" +
    "\145\u0123\162\u015c\164\u015d\173\u015e\204\u0131\207\u012f\001" +
    "\002\000\020\144\u0126\145\u0123\162\u015c\164\u015d\173\u015e" +
    "\204\u0131\207\u012f\001\002\000\034\152\uff38\153\uff38\154" +
    "\uff38\155\uff38\156\uff38\157\uff38\160\u016b\161\u0160\163\uff38" +
    "\164\uff38\165\uff38\166\uff38\174\uff38\001\002\000\034\152" +
    "\uff33\153\uff33\154\uff33\155\uff33\156\uff33\157\uff33\160\uff33" +
    "\161\u0160\163\uff33\164\uff33\165\uff33\166\uff33\174\uff33\001" +
    "\002\000\034\152\u0163\153\u0168\154\u0166\155\u016c\156\u0161" +
    "\157\u0164\160\u016b\161\u0160\163\uff30\164\uff30\165\u0165\166" +
    "\u0167\174\uff30\001\002\000\034\152\uff3a\153\uff3a\154\uff3a" +
    "\155\uff3a\156\uff3a\157\uff3a\160\u016b\161\u0160\163\uff3a\164" +
    "\uff3a\165\uff3a\166\uff3a\174\uff3a\001\002\000\034\152\u0163" +
    "\153\u0168\154\u0166\155\u016c\156\u0161\157\u0164\160\u016b\161" +
    "\u0160\163\uff2e\164\uff2e\165\uff2e\166\uff2e\174\uff2e\001\002" +
    "\000\034\152\uff39\153\uff39\154\uff39\155\uff39\156\uff39\157" +
    "\uff39\160\u016b\161\u0160\163\uff39\164\uff39\165\uff39\166\uff39" +
    "\174\uff39\001\002\000\034\152\u0163\153\u0168\154\u0166\155" +
    "\u016c\156\u0161\157\u0164\160\u016b\161\u0160\163\uff2f\164\uff2f" +
    "\165\uff2f\166\uff2f\174\uff2f\001\002\000\034\152\uff36\153" +
    "\uff36\154\uff36\155\uff36\156\uff36\157\uff36\160\u016b\161\u0160" +
    "\163\uff36\164\uff36\165\uff36\166\uff36\174\uff36\001\002\000" +
    "\034\152\uff3b\153\uff3b\154\uff3b\155\uff3b\156\uff3b\157\uff3b" +
    "\160\u016b\161\u0160\163\uff3b\164\uff3b\165\uff3b\166\uff3b\174" +
    "\uff3b\001\002\000\034\152\u0163\153\u0168\154\u0166\155\u016c" +
    "\156\u0161\157\u0164\160\u016b\161\u0160\163\uff31\164\uff31\165" +
    "\u0165\166\u0167\174\uff31\001\002\000\034\152\uff37\153\uff37" +
    "\154\uff37\155\uff37\156\uff37\157\uff37\160\u016b\161\u0160\163" +
    "\uff37\164\uff37\165\uff37\166\uff37\174\uff37\001\002\000\034" +
    "\152\uff34\153\uff34\154\uff34\155\uff34\156\uff34\157\uff34\160" +
    "\uff34\161\uff34\163\uff34\164\uff34\165\uff34\166\uff34\174\uff34" +
    "\001\002\000\034\152\u0163\153\u0168\154\u0166\155\u016c\156" +
    "\u0161\157\u0164\160\u016b\161\u0160\163\uff32\164\uff32\165\u0165" +
    "\166\u0167\174\uff32\001\002\000\034\152\uff35\153\uff35\154" +
    "\uff35\155\uff35\156\uff35\157\uff35\160\uff35\161\uff35\163\uff35" +
    "\164\uff35\165\uff35\166\uff35\174\uff35\001\002\000\004\125" +
    "\u017c\001\002\000\010\122\u017d\204\u0102\207\u0101\001\002" +
    "\000\004\177\u0198\001\002\000\034\124\uff48\126\uff48\127" +
    "\uff48\131\uff48\136\uff48\137\uff48\140\uff48\141\uff48\142\uff48" +
    "\176\uff48\202\uff48\204\uff48\207\uff48\001\002\000\034\124" +
    "\uff43\126\u0181\127\uff43\131\uff43\136\uff43\137\uff43\140\uff43" +
    "\141\uff43\142\uff43\176\uff43\202\uff43\204\uff43\207\uff43\001" +
    "\002\000\034\124\uff49\126\uff49\127\uff49\131\uff49\136\uff49" +
    "\137\uff49\140\uff49\141\uff49\142\uff49\176\uff49\202\uff49\204" +
    "\uff49\207\uff49\001\002\000\012\122\u0183\124\u0185\204\u0102" +
    "\207\u0101\001\002\000\032\124\uff4a\127\uff4a\131\uff4a\136" +
    "\uff4a\137\uff4a\140\uff4a\141\uff4a\142\uff4a\176\uff4a\202\uff4a" +
    "\204\uff4a\207\uff4a\001\002\000\004\177\u0192\001\002\000" +
    "\032\124\uff44\127\uff44\131\uff44\136\uff44\137\uff44\140\uff44" +
    "\141\uff44\142\uff44\176\uff44\202\uff44\204\uff44\207\uff44\001" +
    "\002\000\004\173\u0186\001\002\000\020\144\u0126\145\u0123" +
    "\162\u015c\164\u015d\173\u015e\204\u0131\207\u012f\001\002\000" +
    "\034\152\u0163\153\u0168\154\u0166\155\u016c\156\u0161\157\u0164" +
    "\160\u016b\161\u0160\163\u0162\164\u016a\165\u0165\166\u0167\174" +
    "\u0188\001\002\000\004\125\u0189\001\002\000\010\122\u018a" +
    "\204\u0102\207\u0101\001\002\000\004\177\u018c\001\002\000" +
    "\034\124\uff46\126\uff46\127\uff46\131\uff46\136\uff46\137\uff46" +
    "\140\uff46\141\uff46\142\uff46\176\uff46\202\uff46\204\uff46\207" +
    "\uff46\001\002\000\004\202\u018d\001\002\000\030\124\uff79" +
    "\127\uff79\131\uff79\136\uff79\137\uff79\140\uff79\141\uff79\142" +
    "\uff79\202\uff79\204\uff79\207\uff79\001\002\000\030\124\375" +
    "\127\u0106\131\371\136\u0103\137\370\140\376\141\367\142" +
    "\377\202\u018f\204\u0102\207\u0101\001\002\000\004\200\u0190" +
    "\001\002\000\004\123\u0191\001\002\000\034\124\uff47\126" +
    "\uff47\127\uff47\131\uff47\136\uff47\137\uff47\140\uff47\141\uff47" +
    "\142\uff47\176\uff47\202\uff47\204\uff47\207\uff47\001\002\000" +
    "\004\202\u0193\001\002\000\030\124\uff79\127\uff79\131\uff79" +
    "\136\uff79\137\uff79\140\uff79\141\uff79\142\uff79\202\uff79\204" +
    "\uff79\207\uff79\001\002\000\030\124\375\127\u0106\131\371" +
    "\136\u0103\137\370\140\376\141\367\142\377\202\u0195\204" +
    "\u0102\207\u0101\001\002\000\004\200\u0196\001\002\000\004" +
    "\123\u0197\001\002\000\032\124\uff45\127\uff45\131\uff45\136" +
    "\uff45\137\uff45\140\uff45\141\uff45\142\uff45\176\uff45\202\uff45" +
    "\204\uff45\207\uff45\001\002\000\004\202\u0199\001\002\000" +
    "\030\124\uff79\127\uff79\131\uff79\136\uff79\137\uff79\140\uff79" +
    "\141\uff79\142\uff79\202\uff79\204\uff79\207\uff79\001\002\000" +
    "\030\124\375\127\u0106\131\371\136\u0103\137\370\140\376" +
    "\141\367\142\377\202\u019b\204\u0102\207\u0101\001\002\000" +
    "\004\200\u019c\001\002\000\004\123\u019d\001\002\000\034" +
    "\124\uff48\126\uff48\127\uff48\131\uff48\136\uff48\137\uff48\140" +
    "\uff48\141\uff48\142\uff48\176\uff48\202\uff48\204\uff48\207\uff48" +
    "\001\002\000\034\124\uff43\126\u0181\127\uff43\131\uff43\136" +
    "\uff43\137\uff43\140\uff43\141\uff43\142\uff43\176\uff43\202\uff43" +
    "\204\uff43\207\uff43\001\002\000\032\124\uff4b\127\uff4b\131" +
    "\uff4b\136\uff4b\137\uff4b\140\uff4b\141\uff4b\142\uff4b\176\uff4b" +
    "\202\uff4b\204\uff4b\207\uff4b\001\002\000\032\124\uff78\127" +
    "\uff78\131\uff78\136\uff78\137\uff78\140\uff78\141\uff78\142\uff78" +
    "\176\uff78\202\uff78\204\uff78\207\uff78\001\002\000\034\124" +
    "\uff73\126\uff73\127\uff73\131\uff73\136\uff73\137\uff73\140\uff73" +
    "\141\uff73\142\uff73\176\uff73\202\uff73\204\uff73\207\uff73\001" +
    "\002\000\020\144\u0126\145\u0123\162\u015c\164\u015d\173\u015e" +
    "\204\u0131\207\u012f\001\002\000\034\152\u0163\153\u0168\154" +
    "\u0166\155\u016c\156\u0161\157\u0164\160\u016b\161\u0160\163\u0162" +
    "\164\u016a\165\u0165\166\u0167\174\u01a4\001\002\000\004\132" +
    "\u01a5\001\002\000\004\122\u01a6\001\002\000\004\177\u01a7" +
    "\001\002\000\004\202\u01a8\001\002\000\030\124\uff79\127" +
    "\uff79\131\uff79\136\uff79\137\uff79\140\uff79\141\uff79\142\uff79" +
    "\202\uff79\204\uff79\207\uff79\001\002\000\030\124\375\127" +
    "\u0106\131\371\136\u0103\137\370\140\376\141\367\142\377" +
    "\202\u01aa\204\u0102\207\u0101\001\002\000\004\200\u01ab\001" +
    "\002\000\004\123\u01ac\001\002\000\032\124\uff3c\127\uff3c" +
    "\131\uff3c\136\uff3c\137\uff3c\140\uff3c\141\uff3c\142\uff3c\176" +
    "\uff3c\202\uff3c\204\uff3c\207\uff3c\001\002\000\006\204\u0102" +
    "\207\u0101\001\002\000\010\170\u01af\201\uff64\205\u0120\001" +
    "\002\000\004\145\u01b1\001\002\000\004\201\uff71\001\002" +
    "\000\004\201\uff65\001\002\000\006\204\u0102\207\u0101\001" +
    "\002\000\010\170\u01b4\201\uff5c\205\u0120\001\002\000\004" +
    "\150\u01b6\001\002\000\004\201\uff6e\001\002\000\004\201" +
    "\uff5d\001\002\000\004\024\u01b8\001\002\000\004\156\u01b9" +
    "\001\002\000\004\154\uffdf\001\002\000\004\174\u01bb\001" +
    "\002\000\004\175\u01bc\001\002\000\030\124\uff79\127\uff79" +
    "\131\uff79\136\uff79\137\uff79\140\uff79\141\uff79\142\uff79\176" +
    "\uff79\204\uff79\207\uff79\001\002\000\030\124\375\127\u0106" +
    "\131\371\136\u0103\137\370\140\376\141\367\142\377\176" +
    "\u01be\204\u0102\207\u0101\001\002\000\010\134\uff7b\135\uff7b" +
    "\154\uff7b\001\002\000\006\156\u01c1\175\u01c3\001\002\000" +
    "\006\156\uffc6\175\uffc6\001\002\000\010\154\uffda\204\uffda" +
    "\207\uffda\001\002\000\006\156\uffc3\175\uffc3\001\002\000" +
    "\016\027\230\030\233\031\232\032\231\033\u01c4\034\227" +
    "\001\002\000\004\170\u01c5\001\002\000\002\001\002\000" +
    "\004\176\u01c7\001\002\000\006\156\uffc4\175\uffc4\001\002" +
    "\000\010\154\u01c9\204\216\207\215\001\002\000\004\166" +
    "\u01ca\001\002\000\004\012\u01cb\001\002\000\004\156\u01cc" +
    "\001\002\000\004\154\uffe8\001\002\000\004\154\uffe3\001" +
    "\002\000\006\156\u01cf\175\226\001\002\000\010\154\uffda" +
    "\204\uffda\207\uffda\001\002\000\006\156\uffa9\175\uffa9\001" +
    "\002\000\006\156\uffab\175\uffab\001\002\000\010\154\u01d3" +
    "\204\216\207\215\001\002\000\004\166\u01d4\001\002\000" +
    "\004\021\u01d5\001\002\000\004\156\u01d6\001\002\000\004" +
    "\154\uffe2\001\002\000\032\011\103\012\076\013\105\014" +
    "\102\016\101\017\106\020\075\021\074\022\104\023\100" +
    "\024\077\166\u01d9\001\002\000\004\154\uffeb\001\002\000" +
    "\004\010\u01da\001\002\000\004\156\u01db\001\002\000\004" +
    "\154\ufff5\001\002\000\004\154\u01e9\001\002\000\006\024" +
    "\u01e0\166\u01df\001\002\000\004\002\ufffd\001\002\000\004" +
    "\004\u01e7\001\002\000\004\156\u01e1\001\002\000\010\134" +
    "\uff7d\135\uff7d\154\uff7d\001\002\000\010\134\354\135\356" +
    "\154\u01e3\001\002\000\004\166\u01e4\001\002\000\004\024" +
    "\u01e5\001\002\000\004\156\u01e6\001\002\000\004\154\uff7f" +
    "\001\002\000\004\156\u01e8\001\002\000\004\002\ufff7\001" +
    "\002\000\004\166\u01df\001\002\000\004\002\ufff9\001\002" +
    "\000\004\154\u01e9\001\002\000\004\002\uffff\001\002\000" +
    "\004\002\ufffc\001\002\000\004\156\u01ef\001\002\000\004" +
    "\154\u01f1\001\002\000\004\154\u020f\001\002\000\010\006" +
    "\u01f4\007\u01f3\024\u01f5\001\002\000\004\154\ufff3\001\002" +
    "\000\006\156\uffd0\175\uffd0\001\002\000\004\156\u01fc\001" +
    "\002\000\004\156\u01f6\001\002\000\010\134\uff7d\135\uff7d" +
    "\154\uff7d\001\002\000\010\134\354\135\356\154\u01f8\001" +
    "\002\000\004\166\u01f9\001\002\000\004\024\u01fa\001\002" +
    "\000\004\156\u01fb\001\002\000\004\154\ufff0\001\002\000" +
    "\010\154\uffee\204\uffee\207\uffee\001\002\000\010\154\u01ff" +
    "\204\216\207\215\001\002\000\010\154\uffef\204\uffef\207" +
    "\uffef\001\002\000\004\166\u0200\001\002\000\004\006\u0201" +
    "\001\002\000\004\156\u0202\001\002\000\004\154\ufff1\001" +
    "\002\000\006\156\u0205\175\u0206\001\002\000\006\156\uffd1" +
    "\175\uffd1\001\002\000\004\154\u020b\001\002\000\004\025" +
    "\u0207\001\002\000\004\170\u0208\001\002\000\004\212\u0209" +
    "\001\002\000\004\176\u020a\001\002\000\006\156\uffcf\175" +
    "\uffcf\001\002\000\004\166\u020c\001\002\000\004\007\u020d" +
    "\001\002\000\004\156\u020e\001\002\000\004\154\ufff2\001" +
    "\002\000\012\006\u01f4\007\u01f3\024\u01f5\166\u0211\001\002" +
    "\000\004\154\ufff4\001\002\000\004\005\u0212\001\002\000" +
    "\004\156\u0213\001\002\000\004\154\ufff6\001\002\000\004" +
    "\005\u01ee\001\002\000\004\154\033\001\002\000\004\154" +
    "\u01dd\001\002\000\004\154\036\001\002\000\004\154\u01dd" +
    "\001\002\000\004\154\u01e9\001\002\000\004\002\ufffb\001" +
    "\002\000\004\002\ufff8\001\002\000\004\154\u01e9\001\002" +
    "\000\004\002\ufffe\001\002\000\004\002\ufffa\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u021c\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\053\007\001\001" +
    "\000\004\054\011\001\001\000\010\003\030\005\026\014" +
    "\025\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\016\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u0214\001\001\000\002" +
    "\001\001\000\006\004\031\005\033\001\001\000\006\005" +
    "\u01ea\052\u01eb\001\001\000\002\001\001\000\004\004\034" +
    "\001\001\000\006\005\u01db\052\u01dd\001\001\000\002\001" +
    "\001\000\004\057\037\001\001\000\004\060\041\001\001" +
    "\000\006\016\070\021\072\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\026\063\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\u01d7\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\075\u01cd\001\001\000\002\001\001\000\004\063\u01be" +
    "\001\001\000\002\001\001\000\004\101\340\001\001\000" +
    "\004\071\313\001\001\000\004\067\270\001\001\000\004" +
    "\061\257\001\001\000\004\077\221\001\001\000\004\065" +
    "\144\001\001\000\004\073\106\001\001\000\004\074\110" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\032\120\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\032\130\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\024\133\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\066\146\001\001" +
    "\000\004\050\211\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\027\162\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\030\173\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\023\212\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\033\223\100\224\001\001\000\004\050" +
    "\252\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\027\237\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\030\242" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\026" +
    "\245\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\212\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\033\262\062\261\001" +
    "\001\000\004\050\263\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\212\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\033\272\070\273\001\001\000\006\022\276\041\274\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\022\307" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\050\301\001\001\000\004\023\212\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\033" +
    "\315\072\316\001\001\000\004\042\332\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\026\323\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\031\330\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\021\334\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\033\342\102\343\001\001\000\004\047" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\051\352\001\001\000\004" +
    "\106\356\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\103\362\001\001\000\024\007\373\035" +
    "\u0106\104\363\105\364\113\372\114\u0103\120\377\124\371" +
    "\137\u0104\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\u01b1\001\001\000\004\010\u01ac" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\u0150" +
    "\001\001\000\004\010\u0143\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\u013e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\035\u010a\115\u0109\001\001\000\004" +
    "\035\u011c\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\117\u010d\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\035\u0113\116" +
    "\u0111\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\103\u0118\001\001\000\024\007\373\035\u0106" +
    "\104\363\105\364\113\372\114\u0103\120\377\124\371\137" +
    "\u0104\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\117\u011e\001\001\000" +
    "\002\001\001\000\004\035\u013c\001\001\000\010\127\u0129" +
    "\135\u012b\136\u012a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\135\u013b\136\u012a\001\001\000\002\001" +
    "\001\000\006\135\u0131\136\u012a\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\135\u013a\136\u012a\001\001\000" +
    "\006\135\u0139\136\u012a\001\001\000\002\001\001\000\006" +
    "\135\u0138\136\u012a\001\001\000\006\135\u0137\136\u012a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\035\u0106\137\u013f\001\001\000\004" +
    "\130\u0141\001\001\000\006\135\u0142\136\u012a\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\035\u0106\137\u0144" +
    "\001\001\000\004\131\u0145\001\001\000\002\001\001\000" +
    "\006\011\u0147\012\u014d\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\u014f" +
    "\001\001\000\002\001\001\000\006\035\u0106\137\u0151\001" +
    "\001\000\004\132\u0153\001\001\000\004\013\u0154\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\125\u0159\126\u0158\136\u015a\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\125\u0179\126\u0158\136\u015a\001\001\000\010\125\u0178" +
    "\126\u0158\136\u015a\001\001\000\010\125\u015e\126\u0158\136" +
    "\u015a\001\001\000\002\001\001\000\010\125\u0177\126\u0158" +
    "\136\u015a\001\001\000\010\125\u0176\126\u0158\136\u015a\001" +
    "\001\000\010\125\u0175\126\u0158\136\u015a\001\001\000\010" +
    "\125\u0174\126\u0158\136\u015a\001\001\000\010\125\u0173\126" +
    "\u0158\136\u015a\001\001\000\010\125\u0172\126\u0158\136\u015a" +
    "\001\001\000\010\125\u0171\126\u0158\136\u015a\001\001\000" +
    "\010\125\u0170\126\u0158\136\u015a\001\001\000\010\125\u016f" +
    "\126\u0158\136\u015a\001\001\000\002\001\001\000\010\125" +
    "\u016e\126\u0158\136\u015a\001\001\000\010\125\u016d\126\u0158" +
    "\136\u015a\001\001\000\010\125\u016c\126\u0158\136\u015a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\035\u0106" +
    "\105\u017d\124\371\137\u0104\001\001\000\002\001\001\000" +
    "\004\121\u017e\001\001\000\006\122\u017f\123\u0181\001\001" +
    "\000\002\001\001\000\012\035\u0106\105\u0183\124\371\137" +
    "\u0104\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\125\u0186\126\u0158\136" +
    "\u015a\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\035\u0106\105\u018a\124\371\137\u0104\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\103\u018d" +
    "\001\001\000\024\007\373\035\u0106\104\363\105\364\113" +
    "\372\114\u0103\120\377\124\371\137\u0104\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\103\u0193\001\001\000\024\007\373\035\u0106" +
    "\104\363\105\364\113\372\114\u0103\120\377\124\371\137" +
    "\u0104\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\103\u0199\001\001\000" +
    "\024\007\373\035\u0106\104\363\105\364\113\372\114\u0103" +
    "\120\377\124\371\137\u0104\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\121\u019d\001\001\000\006\122\u017f" +
    "\123\u019e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\125\u01a2\126\u0158\136\u015a\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\103\u01a8\001\001" +
    "\000\024\007\373\035\u0106\104\363\105\364\113\372\114" +
    "\u0103\120\377\124\371\137\u0104\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\035\u0106\137" +
    "\u01ad\001\001\000\004\134\u01af\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\035\u0106\137" +
    "\u01b2\001\001\000\004\133\u01b4\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\103\u01bc\001\001\000\024\007\373\035" +
    "\u0106\104\363\105\364\113\372\114\u0103\120\377\124\371" +
    "\137\u0104\001\001\000\002\001\001\000\006\033\u01c1\064" +
    "\u01bf\001\001\000\002\001\001\000\004\050\u01c7\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\u01c5\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\023\212\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\033\u01cf\076\u01d0\001\001\000\004\050\u01d1\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\212" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\052\u01e9\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\051\u01e1\001" +
    "\001\000\004\106\356\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\052\u01ec\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\015\u01ef\020\u01f1\001\001" +
    "\000\004\020\u020f\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\055\u0202\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\051\u01f6\001\001\000\004\106\356\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\u01fc\001\001\000\004\023" +
    "\u01fd\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\056" +
    "\u0203\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\004\u0215\005\u0216\001" +
    "\001\000\006\005\u021b\052\u021c\001\001\000\004\004\u0217" +
    "\001\001\000\006\005\u0218\052\u0219\001\001\000\004\052" +
    "\u021a\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\052\u021d\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$EtiquetadoParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$EtiquetadoParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$EtiquetadoParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public EtiquetadoParser(EtiquetadoLexer lexer) {
        super(lexer);
    }
    public void report_error(String message, Object info) {
        System.out.println("reporterror");;
    }
    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal " + info);
    }
    @Override
    public void syntax_error(Symbol s) {
        System.out.println("linea: " + s.left + "   columna: " + s.right + "   token: " + symbl_name_from_id(s.sym) + "     texto: " + s.value);
    }
    protected int error_sync_size() {
        return 1;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$EtiquetadoParser$actions {
  private final EtiquetadoParser parser;

  /** Constructor */
  CUP$EtiquetadoParser$actions(EtiquetadoParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action_part00000000(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$EtiquetadoParser$result;

      /* select the action based on the action number */
      switch (CUP$EtiquetadoParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		RESULT = start_val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$EtiquetadoParser$parser.done_parsing();
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= MENOR_QUE GCIC cuerpo_parametros_gcic MAYOR_QUE cuerpo_gcic 
            {
              Object RESULT =null;
		System.out.println("Se ha llegado al final del reconocimiento");
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // cuerpo_gcic ::= cabecera cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // cuerpo_gcic ::= scripting cabecera cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // cuerpo_gcic ::= cabecera scripting cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // cuerpo_gcic ::= cabecera cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // cuerpo_gcic ::= scripting cabecera scripting cuerpo cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // cuerpo_gcic ::= scripting cabecera cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // cuerpo_gcic ::= cabecera scripting cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // cuerpo_gcic ::= scripting cabecera scripting cuerpo scripting cierre_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_gcic",10, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // cierre_gcic ::= MENOR_QUE DIVISION GCIC MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cierre_gcic",40, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // cabecera ::= MENOR_QUE HEAD MAYOR_QUE cuerpo_cabecera MENOR_QUE DIVISION HEAD MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cabecera",1, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // cuerpo ::= MENOR_QUE BODY cuerpo_parametros_body MAYOR_QUE cuerpo_cuerpo MENOR_QUE DIVISION BODY MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo",2, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // cuerpo_cabecera ::= cuerpo_cabecera etiquetas_cabecera 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // cuerpo_cabecera ::= etiquetas_cabecera 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cabecera",11, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // etiquetas_cabecera ::= MENOR_QUE LINK cuerpo_parametros_link MAYOR_QUE MENOR_QUE DIVISION LINK MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // etiquetas_cabecera ::= MENOR_QUE TITLE MAYOR_QUE cuerpo_title MENOR_QUE DIVISION TITLE MAYOR_QUE 
            {
              Object RESULT =null;
		int ctleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)).left;
		int ctright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)).right;
		Object ct = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)).value;
		System.out.println("El titulo es: " + ct.toString().trim());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // etiquetas_cabecera ::= MENOR_QUE SCRIPTING MAYOR_QUE cuerpo_scripting MENOR_QUE DIVISION SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cabecera",14, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // cuerpo_title ::= cuerpo_title texto 
            {
              Object RESULT =null;
		int ctleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int ctright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Object ct = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT= ct.toString() + " " + ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_title",13, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // cuerpo_title ::= 
            {
              Object RESULT =null;
		RESULT="";
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_title",13, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // texto ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto",17, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // texto ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object ent = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=ent.toString();
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto",17, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // cuerpo_cuerpo ::= cuerpo_cuerpo etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // cuerpo_cuerpo ::= etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_cuerpo",12, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // etiquetas_cuerpo ::= MENOR_QUE SPAM cuerpo_parametros_spam MAYOR_QUE cuerpo_texto MENOR_QUE DIVISION SPAM MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // etiquetas_cuerpo ::= MENOR_QUE INPUT cuerpo_parametros_input MAYOR_QUE cuerpo_texto MENOR_QUE DIVISION INPUT MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // etiquetas_cuerpo ::= MENOR_QUE TEXTAREA cuerpo_parametros_textarea MAYOR_QUE cuerpo_texto MENOR_QUE DIVISION TEXTAREA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // etiquetas_cuerpo ::= MENOR_QUE SELECT cuerpo_parametros_select MAYOR_QUE cuerpo_select MENOR_QUE DIVISION SELECT MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // etiquetas_cuerpo ::= MENOR_QUE DIV cuerpo_parametros_div MAYOR_QUE cuerpo_div MENOR_QUE DIVISION DIV MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // etiquetas_cuerpo ::= MENOR_QUE IMG cuerpo_parametros_img MAYOR_QUE MENOR_QUE DIVISION IMG MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // etiquetas_cuerpo ::= MENOR_QUE BR MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // etiquetas_cuerpo ::= MENOR_QUE BUTTON cuerpo_parametros_button MAYOR_QUE cuerpo_texto MENOR_QUE DIVISION BUTTON MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // etiquetas_cuerpo ::= MENOR_QUE H1 cuerpo_parametros_h1 MAYOR_QUE cuerpo_texto MENOR_QUE DIVISION H1 MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // etiquetas_cuerpo ::= MENOR_QUE P cuerpo_parametros_p MAYOR_QUE cuerpo_p MENOR_QUE DIVISION P MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-8)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // etiquetas_cuerpo ::= MENOR_QUE SCRIPTING MAYOR_QUE cuerpo_scripting MENOR_QUE DIVISION SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiquetas_cuerpo",15, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // cuerpo_select ::= cuerpo_select etiqueta_option 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_select",31, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // cuerpo_select ::= etiqueta_option 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_select",31, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // etiqueta_option ::= MENOR_QUE OPTION MAYOR_QUE cuerpo_texto MENOR_QUE DIVISION OPTION MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("etiqueta_option",16, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // cuerpo_texto ::= cuerpo_texto texto 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_texto",38, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // cuerpo_texto ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_texto",38, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // cuerpo_div ::= cuerpo_div etiquetas_cuerpo 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_div",32, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // cuerpo_div ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_div",32, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // cuerpo_h1 ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_h1",36, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // cuerpo_p ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_p",37, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // cuerpo_parametros_gcic ::= cuerpo_parametros_gcic parametros_gcic 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // cuerpo_parametros_gcic ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_gcic",41, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // parametros_gcic ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_gcic",42, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // parametros_gcic ::= CORA NAME IGUAL texto_comillas_complete CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_gcic",42, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // cuerpo_parametros_link ::= cuerpo_parametros_link parametros_link 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // cuerpo_parametros_link ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_link",43, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // parametros_link ::= CORA HREF IGUAL ALLCHARNOSPACE CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_link",44, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // texto_comillas_complete ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto_comillas_complete",18, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // texto_comillas_complete ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("texto_comillas_complete",18, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // cuerpo_parametros_body ::= cuerpo_parametros_body parametros_body 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // cuerpo_parametros_body ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_body",45, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // parametros_body ::= CORA BACKGROUND IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_body",46, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // cuerpo_parametros_spam ::= cuerpo_parametros_spam parametros_spam 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // cuerpo_parametros_spam ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_spam",47, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // parametros_spam ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_spam",48, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // cuerpo_parametros_input ::= cuerpo_parametros_input parametros_input 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // cuerpo_parametros_input ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_input",49, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // parametros_input ::= CORA TYPE IGUAL tipos_input CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_input",50, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // parametros_input ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_input",50, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // cuerpo_parametros_textarea ::= cuerpo_parametros_textarea parametros_textarea 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // cuerpo_parametros_textarea ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_textarea",51, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // parametros_textarea ::= CORA FONTSIZE IGUAL PIXELES CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // parametros_textarea ::= CORA FONTFAMILY IGUAL font_family CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // parametros_textarea ::= CORA TEXTALIGN IGUAL alineaciones CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // parametros_textarea ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // parametros_textarea ::= CORA COLS IGUAL DIGITO_COM CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // parametros_textarea ::= CORA ROWS IGUAL DIGITO_COM CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textarea",52, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // cuerpo_parametros_select ::= cuerpo_parametros_select parametros_select 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // cuerpo_parametros_select ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_select",53, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // parametros_select ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_select",54, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // cuerpo_parametros_div ::= cuerpo_parametros_div parametros_div 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // cuerpo_parametros_div ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_div",55, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // parametros_div ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",56, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // parametros_div ::= CORA CLASS IGUAL clases CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",56, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // parametros_div ::= CORA BACKGROUND IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_div",56, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // cuerpo_parametros_img ::= cuerpo_parametros_img parametros_img 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // cuerpo_parametros_img ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_img",57, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // parametros_img ::= CORA SRC IGUAL ALLCHARNOSPACE CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // parametros_img ::= CORA WIDTH IGUAL tamaños CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // parametros_img ::= CORA HEIGHT IGUAL tamaños CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // parametros_img ::= CORA ALT IGUAL texto_comillas_complete CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // parametros_img ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_img",58, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // cuerpo_parametros_button ::= cuerpo_parametros_button parametros_button 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // cuerpo_parametros_button ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_button",59, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // parametros_button ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_button",60, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // cuerpo_parametros_h1 ::= cuerpo_parametros_h1 parametros_h1 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",61, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // cuerpo_parametros_h1 ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_h1",61, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // parametros_h1 ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_h1",62, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // cuerpo_parametros_p ::= cuerpo_parametros_p parametros_p 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",63, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // cuerpo_parametros_p ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_p",63, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // parametros_p ::= parametros_textuales 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_p",64, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // parametros_textuales ::= CORA FONTSIZE IGUAL PIXELES CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // parametros_textuales ::= CORA FONTFAMILY IGUAL font_family CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // parametros_textuales ::= CORA TEXTALIGN IGUAL alineaciones CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // parametros_textuales ::= CORA ID IGUAL ID_ETIQUETA CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // parametros_textuales ::= CORA COLOR IGUAL colores CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_textuales",25, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-4)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // colores ::= BLACK 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // colores ::= OLIVE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // colores ::= TEAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // colores ::= RED 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // colores ::= BLUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // colores ::= MAROON 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // colores ::= NAVY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // colores ::= GRAY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // colores ::= LIME 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // colores ::= FUCHSIA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // colores ::= GREEN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // colores ::= WHITE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // colores ::= PURPLE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // colores ::= SILVER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // colores ::= YELLOW 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // colores ::= AQUA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // colores ::= HEXADECIMAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("colores",20, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // font_family ::= COURIER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // font_family ::= VERDANA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // font_family ::= ARIAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // font_family ::= GENEVA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // font_family ::= SANS_SERIF 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("font_family",21, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // alineaciones ::= LEFT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // alineaciones ::= RIGHT 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // alineaciones ::= CENTER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // alineaciones ::= JUSTIFY 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("alineaciones",22, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // clases ::= ROW 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("clases",23, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // clases ::= COLUMN 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("clases",23, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // tamaños ::= PIXELES 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tamaños",24, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // tamaños ::= PORCENTAJE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("tamaños",24, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // scripting ::= MENOR_QUE SCRIPTING MAYOR_QUE cuerpo_scripting MENOR_QUE DIVISION SCRIPTING MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("scripting",3, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // cuerpo_scripting ::= cuerpo_scripting parametros_scripting 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_scripting",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // cuerpo_scripting ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_scripting",39, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // parametros_scripting ::= PROCESS PARA PARC CORA cuerpo_parametros_proceso CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_scripting",68, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // parametros_scripting ::= ON_LOAD PARA PARC CORA cuerpo_parametros_proceso CORC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_scripting",68, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-5)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // cuerpo_parametros_proceso ::= cuerpo_parametros_proceso parametros_proceso 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",65, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // cuerpo_parametros_proceso ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_parametros_proceso",65, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // parametros_proceso ::= variables PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // parametros_proceso ::= parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // parametros_proceso ::= condicion_if 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // parametros_proceso ::= ciclo_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // parametros_proceso ::= ciclo_while 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso",66, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // parametros_proceso_simples ::= asignacion_valor PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_proceso_simples",67, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // variables ::= INTEGER modo cuerpo_identificadores igual_integer 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // variables ::= DECIMAL modo cuerpo_identificadores igual_decimal 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // variables ::= STRING modo cuerpo_identificadores igual_string 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // variables ::= BOOLEAN modo cuerpo_identificadores igual_boolean 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // variables ::= CHAR modo cuerpo_identificadores igual_char 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("variables",5, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // cuerpo_identificadores ::= cuerpo_identificadores COMA identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // cuerpo_identificadores ::= identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("cuerpo_identificadores",93, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // identificadores ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("identificadores",27, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // identificadores ::= ALFANUMERICO 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("identificadores",27, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // modo ::= GLOBAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("modo",6, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // modo ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("modo",6, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // igual_integer ::= IGUAL expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_integer",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // igual_integer ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_integer",86, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // igual_decimal ::= IGUAL D_DECIMAL 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_decimal",90, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // igual_decimal ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_decimal",90, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // igual_string ::= IGUAL strings_concatenados 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_string",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // igual_string ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_string",87, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // strings_concatenados ::= strings_concatenados SUMA strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // strings_concatenados ::= strings 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings_concatenados",8, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // igual_boolean ::= IGUAL booleanos 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_boolean",88, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // igual_boolean ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_boolean",88, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // igual_char ::= IGUAL D_CHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_char",89, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // igual_char ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_char",89, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // booleanos ::= TRUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // booleanos ::= FALSE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("booleanos",9, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // strings ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // strings ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // strings ::= D_STRING 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // strings ::= ID_ETIQUETA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // strings ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("strings",7, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // asignacion_valor ::= cuerpo_identificadores IGUAL valores_de_asignacion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("asignacion_valor",82, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // valores_de_asignacion ::= expresion_aritmetica 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // valores_de_asignacion ::= D_CHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // valores_de_asignacion ::= TRUE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // valores_de_asignacion ::= FALSE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // valores_de_asignacion ::= ALLCHAR 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // valores_de_asignacion ::= ALLCHARNOSPACE 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // valores_de_asignacion ::= ID_ETIQUETA 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // valores_de_asignacion ::= D_STRING 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valores_de_asignacion",85, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // condicion_if ::= IF PARA condicion PARC THEN INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END condicion_else_if condicion_else 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_if",73, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-13)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // condicion_if ::= IF PARA condicion PARC THEN parametros_proceso_simples condicion_else_if condicion_else 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_if",73, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // condicion_else_if ::= condicion_else_if parametros_else_if 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else_if",79, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // condicion_else_if ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else_if",79, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // parametros_else_if ::= ELSE IF PARA condicion PARC THEN INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_else_if",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-12)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // parametros_else_if ::= ELSE IF PARA condicion PARC THEN parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("parametros_else_if",80, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-6)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // condicion_else ::= ELSE INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-7)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // condicion_else ::= ELSE parametros_proceso_simples 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // condicion_else ::= 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion_else",81, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // ciclo_repeat ::= REPEAT PARA repetir_declaracion PARC HUNTIL PARA repetir_limite PARC INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("ciclo_repeat",74, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-14)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // repetir_declaracion ::= INTEGER identificadores IGUAL igual_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_declaracion",75, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-3)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // repetir_declaracion ::= identificadores IGUAL igual_repeat 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_declaracion",75, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // repetir_limite ::= D_INTEGER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_limite",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // repetir_limite ::= identificadores 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("repetir_limite",76, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // igual_repeat ::= D_INTEGER 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("igual_repeat",77, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // ciclo_while ::= WHILE PARA condicion PARC THENWHILE INIT LLAA PUNTOS cuerpo_parametros_proceso PUNTOS LLAC END 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("ciclo_while",78, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-11)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // condicion ::= condicion IGUAL_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // condicion ::= condicion DIFERENTE_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // condicion ::= condicion MENOR_QUE condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // condicion ::= condicion MENOR_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // condicion ::= condicion MAYOR_QUE condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // condicion ::= condicion MAYOR_IGUAL condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // condicion ::= NOT condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // condicion ::= condicion AND condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // condicion ::= condicion OR condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // condicion ::= RESTA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // condicion ::= condicion SUMA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // condicion ::= condicion RESTA condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // condicion ::= condicion MULTIPLICACION condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // condicion ::= condicion DIVISION condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // condicion ::= valor_condicion 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // condicion ::= PARA condicion PARC 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("condicion",83, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // valor_condicion ::= valor_numerico 
            {
              Object RESULT =null;

              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_condicion",84, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // expresion_aritmetica ::= RESTA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1*-1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // expresion_aritmetica ::= expresion_aritmetica SUMA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1+va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // expresion_aritmetica ::= expresion_aritmetica RESTA expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1-va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // expresion_aritmetica ::= expresion_aritmetica MULTIPLICACION expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1*va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // expresion_aritmetica ::= expresion_aritmetica DIVISION expresion_aritmetica 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)).value;
		int va2left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va2right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Double va2 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT=va1/va2;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // expresion_aritmetica ::= valor_numerico 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object va1 = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = new Double(va1.toString());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // expresion_aritmetica ::= PARA expresion_aritmetica PARC 
            {
              Double RESULT =null;
		int va1left = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).left;
		int va1right = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).right;
		Double va1 = (Double)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-1)).value;
		RESULT = new Double(va1.toString());
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("expresion_aritmetica",91, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.elementAt(CUP$EtiquetadoParser$top-2)), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // valor_numerico ::= D_INTEGER 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // valor_numerico ::= D_DECIMAL 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = val;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // valor_numerico ::= IDENTIFICADOR 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = 1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // valor_numerico ::= ALFANUMERICO 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$EtiquetadoParser$stack.peek()).value;
		RESULT = 1;
              CUP$EtiquetadoParser$result = parser.getSymbolFactory().newSymbol("valor_numerico",92, ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$EtiquetadoParser$stack.peek()), RESULT);
            }
          return CUP$EtiquetadoParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$EtiquetadoParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$EtiquetadoParser$do_action(
    int                        CUP$EtiquetadoParser$act_num,
    java_cup.runtime.lr_parser CUP$EtiquetadoParser$parser,
    java.util.Stack            CUP$EtiquetadoParser$stack,
    int                        CUP$EtiquetadoParser$top)
    throws java.lang.Exception
    {
              return CUP$EtiquetadoParser$do_action_part00000000(
                               CUP$EtiquetadoParser$act_num,
                               CUP$EtiquetadoParser$parser,
                               CUP$EtiquetadoParser$stack,
                               CUP$EtiquetadoParser$top);
    }
}

}